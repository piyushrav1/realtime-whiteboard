{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gamin\\\\OneDrive\\\\Desktop\\\\Project\\\\Whiteboard\\\\live-whiteboard-app\\\\whiteboard-frontend\\\\src\\\\components\\\\WhiteboardRoom.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// whiteboard-frontend/src/components/WhiteboardRoom.js\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Stage, Layer, Line, Rect, Circle, Text, Transformer } from 'react-konva';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport './WhiteboardRoom.css'; // Make sure this CSS file is updated too!\n\n// IMPORTANT: Make sure YOUR_PC_IP_ADDRESS is replaced with your actual PC's IP.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://192.168.1.19:000');\n\n// Helper component for selectable/transformable Konva nodes\nconst ColoredRect = ({\n  shapeProps,\n  isSelected,\n  onSelect,\n  onChange,\n  activeTool\n}) => {\n  _s();\n  const shapeRef = useRef();\n  const trRef = useRef();\n  useEffect(() => {\n    if (isSelected && trRef.current && shapeRef.current) {\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    } else if (!isSelected && trRef.current) {\n      trRef.current.nodes([]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected, shapeProps.type]);\n  const handleDblClick = e => {\n    onSelect(); // Selects the shape\n    if (shapeProps.type === 'text') {\n      // Small delay to allow Konva to finish its rendering cycle and for accurate measurements\n      setTimeout(() => {\n        const textNode = shapeRef.current;\n        if (!textNode) return;\n\n        // Hide Konva text node\n        textNode.hide();\n        textNode.getLayer().batchDraw();\n\n        // Remove transformer handles while editing text\n        if (trRef.current) {\n          trRef.current.nodes([]);\n          trRef.current.getLayer().batchDraw();\n        }\n\n        // Get text node's absolute position and dimensions\n        const textPosition = textNode.absolutePosition();\n        const stageBox = textNode.getStage().container().getBoundingClientRect();\n\n        // Create a native textarea element\n        const textarea = document.createElement('textarea');\n        document.body.appendChild(textarea);\n\n        // Konva's `getClientRect()` gives the actual rendered bounding box, more reliable for sizing\n        const textRect = textNode.getClientRect();\n\n        // Apply styles to the textarea to match the Konva text node\n        textarea.value = textNode.text();\n        textarea.style.position = 'absolute';\n        textarea.style.top = textPosition.y + stageBox.top + 'px';\n        textarea.style.left = textPosition.x + stageBox.left + 'px';\n        textarea.style.width = textRect.width + 'px'; // Use actual rendered width\n        textarea.style.height = textRect.height + 'px'; // Use actual rendered height\n        textarea.style.fontSize = textNode.fontSize() + 'px';\n        textarea.style.lineHeight = textNode.lineHeight();\n        textarea.style.fontFamily = textNode.fontFamily();\n        textarea.style.textAlign = textNode.align();\n        textarea.style.color = textNode.fill();\n        textarea.style.padding = textNode.padding() + 'px'; // Match Konva padding\n        textarea.style.border = '1px solid gray'; // Add a temporary border for visual feedback\n        textarea.style.resize = 'none'; // Prevent manual resizing by user\n        textarea.style.overflow = 'hidden'; // Hide scrollbars initially\n        textarea.style.background = 'white'; // Give it a background for easier editing\n        textarea.style.outline = 'none';\n        textarea.style.zIndex = '9999'; // Ensure it's on top of canvas\n        textarea.style.transformOrigin = 'left top';\n        textarea.style.transform = `rotateZ(${textNode.rotation()}deg)`; // Apply rotation\n\n        // Focus the textarea and select its content\n        textarea.focus();\n        textarea.select();\n\n        // Function to clean up the textarea\n        const removeTextarea = () => {\n          document.body.removeChild(textarea);\n          textNode.show(); // Show Konva text node again\n          textNode.getLayer().batchDraw();\n          // Re-enable transformer if select tool is active and shape is still selected\n          if (activeTool === 'select' && isSelected && shapeRef.current && trRef.current) {\n            trRef.current.nodes([shapeRef.current]);\n            trRef.current.getLayer().batchDraw();\n          }\n        };\n\n        // Auto-resize textarea as text is typed\n        const autoResizeTextarea = () => {\n          // Reset height to 'auto' to get accurate scrollHeight\n          textarea.style.height = 'auto';\n          // Set height to scrollHeight (content height)\n          textarea.style.height = textarea.scrollHeight + 'px';\n        };\n        textarea.addEventListener('input', autoResizeTextarea);\n        autoResizeTextarea(); // Initial auto-resize for existing text\n\n        // Event listeners for textarea\n        textarea.addEventListener('keydown', e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            // Save on Enter (unless Shift is held for new line)\n            textarea.blur(); // Blur triggers the 'blur' event listener below\n          }\n          if (e.key === 'Escape') {\n            // Discard changes on Escape\n            removeTextarea();\n            // Optional: Revert text to original if you don't want Escape to save\n            // onChange({ ...shapeProps, text: shapeProps.text });\n          }\n        });\n        textarea.addEventListener('blur', () => {\n          // Update Konva node with new text and potentially new dimensions\n          onChange({\n            ...shapeProps,\n            text: textarea.value,\n            // Update Konva node's width/height based on textarea's final content size\n            // This ensures Konva text wraps correctly and is sized properly\n            width: Math.max(50, textarea.scrollWidth),\n            // Ensure min width\n            height: Math.max(30, textarea.scrollHeight) // Ensure min height\n          });\n          removeTextarea();\n        });\n      }, 50); // Small delay to allow Konva internal updates\n    }\n  };\n  const currentKonvaNode = shapeProps.type === 'rect' ? /*#__PURE__*/_jsxDEV(Rect, {\n    onClick: onSelect,\n    onTap: onSelect,\n    onDblClick: handleDblClick,\n    onDblTap: handleDblClick,\n    ref: shapeRef,\n    ...shapeProps,\n    draggable: activeTool === 'select',\n    onDragEnd: e => {\n      onChange({\n        ...shapeProps,\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    },\n    onTransformEnd: e => {\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY();\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange({\n        ...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        width: Math.max(5, node.width() * scaleX),\n        height: Math.max(5, node.height() * scaleY),\n        rotation: node.rotation()\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 7\n  }, this) : shapeProps.type === 'circle' ? /*#__PURE__*/_jsxDEV(Circle, {\n    onClick: onSelect,\n    onTap: onSelect,\n    onDblClick: handleDblClick,\n    onDblTap: handleDblClick,\n    ref: shapeRef,\n    ...shapeProps,\n    draggable: activeTool === 'select',\n    onDragEnd: e => {\n      onChange({\n        ...shapeProps,\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    },\n    onTransformEnd: e => {\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange({\n        ...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        radius: Math.max(5, node.radius() * scaleX),\n        rotation: node.rotation()\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 7\n  }, this) : shapeProps.type === 'text' ? /*#__PURE__*/_jsxDEV(Text, {\n    onClick: onSelect,\n    onTap: onSelect,\n    onDblClick: handleDblClick,\n    onDblTap: handleDblClick,\n    ref: shapeRef,\n    ...shapeProps,\n    draggable: activeTool === 'select',\n    onDragEnd: e => {\n      onChange({\n        ...shapeProps,\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    }\n    // IMPORTANT: Ensure text node's width/height/fontSize are updated on transform\n    ,\n    onTransformEnd: e => {\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY(); // For text, usually scaleY is same as scaleX for font size\n      const rotation = node.rotation();\n      node.scaleX(1); // Reset scales\n      node.scaleY(1);\n      const newFontSize = Math.max(8, node.fontSize() * scaleX); // Scale font size, ensure minimum\n      const newWidth = Math.max(50, node.width() * scaleX); // Scale width\n      const newHeight = Math.max(30, node.height() * scaleY); // Scale height (less critical for auto-wrapping text but good for bounding box)\n\n      onChange({\n        ...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        width: newWidth,\n        height: newHeight,\n        fontSize: newFontSize,\n        rotation: rotation\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 7\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentKonvaNode, isSelected && currentKonvaNode && /*#__PURE__*/_jsxDEV(Transformer, {\n      ref: trRef,\n      boundBoxFunc: (oldBox, newBox) => {\n        if (newBox.width < 5 || newBox.height < 5) {\n          return oldBox;\n        }\n        return newBox;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ColoredRect, \"utqYnE1qYQB2JA/ZIFXzHjUZTOc=\");\n_c = ColoredRect;\nfunction WhiteboardRoom() {\n  _s2();\n  const {\n    roomName\n  } = useParams();\n  const navigate = useNavigate();\n  const [drawingObjects, setDrawingObjects] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const stageRef = useRef(null);\n  const currentObjectId = useRef(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newChatMessage, setNewChatMessage] = useState('');\n  const chatMessagesEndRef = useRef(null);\n  const [stageDimensions, setStageDimensions] = useState({\n    width: window.innerWidth * 0.7,\n    height: window.innerHeight * 0.8\n  });\n  const canvasContainerRef = useRef(null);\n\n  // --- BRUSH STATE VARIABLES ---\n  const [tool, setTool] = useState('pen'); // 'pen', 'marker', 'dashed', 'calligraphy', 'eraser', 'rect', 'circle', 'text', 'select'\n  const [strokeColor, setStrokeColor] = useState('#000000');\n  const [strokeWidth, setStrokeWidth] = useState(5);\n  const [fillColor, setFillColor] = useState('transparent');\n  const [selectedId, selectShape] = useState(null);\n\n  // Brush specific properties\n  const [brushOpacity, setBrushOpacity] = useState(1.0); // 0.0 to 1.0\n  const [lineCap, setLineCap] = useState('round'); // 'butt', 'round', 'square'\n  // const [isDashed, setIsDashed] = useState(false); // Removed, now controlled by tool directly\n\n  useEffect(() => {\n    if (!roomName) {\n      navigate('/');\n      return;\n    }\n    socket.emit('joinRoom', roomName);\n    socket.on('connect', () => {\n      console.log('Connected to backend Socket.IO:', socket.id);\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from backend Socket.IO');\n      alert('Disconnected from server. Please refresh.');\n      navigate('/');\n    });\n    socket.on('whiteboardState', data => {\n      console.log('Received initial room state:', data);\n      setDrawingObjects(data.lines);\n      setChatMessages(data.messages);\n    });\n    socket.on('drawingStarted', newObject => {\n      setDrawingObjects(prevObjects => [...prevObjects, newObject]);\n    });\n    socket.on('drawing', data => {\n      const {\n        objectId,\n        newPoints\n      } = data;\n      setDrawingObjects(prevObjects => {\n        return prevObjects.map(obj => {\n          if (obj.id === objectId && obj.type === 'line') {\n            return {\n              ...obj,\n              points: obj.points.concat(newPoints)\n            };\n          }\n          return obj;\n        });\n      });\n    });\n    socket.on('drawingFinished', data => {\n      const {\n        objectId,\n        finalObjectState\n      } = data;\n      setDrawingObjects(prevObjects => {\n        return prevObjects.map(obj => {\n          if (obj.id === objectId) {\n            return finalObjectState;\n          }\n          return obj;\n        });\n      });\n    });\n    socket.on('objectUpdated', data => {\n      const {\n        objectId,\n        newAttributes\n      } = data;\n      setDrawingObjects(prevObjects => {\n        return prevObjects.map(obj => {\n          if (obj.id === objectId) {\n            return {\n              ...obj,\n              ...newAttributes\n            };\n          }\n          return obj;\n        });\n      });\n    });\n    socket.on('whiteboardCleared', () => {\n      setDrawingObjects([]);\n      selectShape(null);\n      console.log('Whiteboard cleared by another user.');\n    });\n    socket.on('chatMessage', message => {\n      setChatMessages(prevMessages => [...prevMessages, message]);\n    });\n    socket.on('userJoined', username => {\n      setChatMessages(prevMessages => [...prevMessages, {\n        username: 'System',\n        message: `${username} has joined the room.`,\n        timestamp: new Date()\n      }]);\n    });\n    socket.on('roomDestroyed', destroyedRoomName => {\n      if (destroyedRoomName === roomName) {\n        alert(`Room \"${destroyedRoomName}\" has been closed or automatically destroyed.`);\n        navigate('/');\n      }\n    });\n    const handleResize = () => {\n      if (canvasContainerRef.current) {\n        const {\n          clientWidth,\n          clientHeight\n        } = canvasContainerRef.current;\n        setStageDimensions({\n          width: clientWidth,\n          height: clientHeight\n        });\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('whiteboardState');\n      socket.off('drawingStarted');\n      socket.off('drawing');\n      socket.off('drawingFinished');\n      socket.off('objectUpdated');\n      socket.off('whiteboardCleared');\n      socket.off('chatMessage');\n      socket.off('userJoined');\n      socket.off('roomDestroyed');\n    };\n  }, [roomName, navigate]);\n  useEffect(() => {\n    var _chatMessagesEndRef$c;\n    (_chatMessagesEndRef$c = chatMessagesEndRef.current) === null || _chatMessagesEndRef$c === void 0 ? void 0 : _chatMessagesEndRef$c.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [chatMessages]);\n  const handleObjectChange = useCallback(updatedObject => {\n    setDrawingObjects(prevObjects => {\n      return prevObjects.map(obj => {\n        if (obj.id === updatedObject.id) {\n          return updatedObject;\n        }\n        return obj;\n      });\n    });\n    socket.emit('updateObject', {\n      roomName,\n      objectId: updatedObject.id,\n      newAttributes: updatedObject\n    });\n  }, [roomName]);\n\n  // Re-added e.evt.preventDefault() for touch events\n  const handleMouseDown = e => {\n    const clickedOnEmpty = e.target === e.target.getStage();\n    if (tool === 'select' && clickedOnEmpty) {\n      selectShape(null);\n      return;\n    }\n    // THIS IS THE KEY FIX FOR TOUCHSCREENS\n    if (e.evt.type === 'touchstart') {\n      e.evt.preventDefault();\n    }\n    setIsDrawing(true);\n    const pos = e.target.getStage().getPointerPosition();\n    const newObjectId = `${socket.id}-${Date.now()}`;\n    currentObjectId.current = newObjectId;\n    selectShape(null);\n    let newObject;\n    // --- LOGIC FOR DIFFERENT BRUSH TYPES ---\n    switch (tool) {\n      case 'pen':\n      case 'marker':\n      case 'dashed':\n      case 'calligraphy':\n      case 'eraser':\n        let currentStrokeColor = tool === 'eraser' ? '#FFFFFF' : strokeColor;\n        let currentStrokeWidth = tool === 'eraser' ? strokeWidth + 10 : strokeWidth;\n        let currentOpacity = tool === 'eraser' ? 1.0 : brushOpacity; // Eraser is always opaque\n        let currentLineCap = lineCap;\n        let currentDash = [];\n        if (tool === 'marker') {\n          currentOpacity = 0.6; // Semi-transparent\n          currentStrokeWidth = Math.max(15, strokeWidth * 2); // Thicker marker\n          currentLineCap = 'butt'; // Flat ends\n        } else if (tool === 'dashed') {\n          currentDash = [10, 10]; // 10px line, 10px gap\n        } else if (tool === 'calligraphy') {\n          currentStrokeWidth = Math.max(8, strokeWidth * 1.5); // Thicker, simulates broader tip\n          currentLineCap = 'square'; // Flat, square tip\n          currentDash = []; // No dash\n        }\n        newObject = {\n          id: newObjectId,\n          type: 'line',\n          points: [pos.x, pos.y],\n          stroke: currentStrokeColor,\n          strokeWidth: currentStrokeWidth,\n          opacity: currentOpacity,\n          lineCap: currentLineCap,\n          dash: currentDash,\n          tool: tool // Keep the original tool for eraser composite operation\n        };\n        break;\n      case 'rect':\n        newObject = {\n          id: newObjectId,\n          type: 'rect',\n          x: pos.x,\n          y: pos.y,\n          width: 0,\n          height: 0,\n          stroke: strokeColor,\n          strokeWidth: strokeWidth,\n          fill: fillColor,\n          opacity: brushOpacity\n        };\n        break;\n      case 'circle':\n        newObject = {\n          id: newObjectId,\n          type: 'circle',\n          x: pos.x,\n          y: pos.y,\n          radius: 0,\n          stroke: strokeColor,\n          strokeWidth: strokeWidth,\n          fill: fillColor,\n          opacity: brushOpacity\n        };\n        break;\n      case 'text':\n        // Initial text object creation\n        newObject = {\n          id: newObjectId,\n          type: 'text',\n          x: pos.x,\n          y: pos.y,\n          text: 'Double click to edit',\n          fontSize: 20,\n          fontFamily: 'Arial',\n          // Default font\n          stroke: strokeColor,\n          // Stroke for outline if needed (Konva text can have stroke)\n          fill: strokeColor,\n          // Fill for text color\n          width: 200,\n          // Initial width for the text box\n          height: 30,\n          // Initial height for the text box\n          rotation: 0,\n          opacity: brushOpacity\n        };\n        setIsDrawing(false); // Text tool doesn't \"draw\" in the same way as pen\n        socket.emit('startDrawing', {\n          roomName,\n          object: newObject\n        });\n        setDrawingObjects(prevObjects => [...prevObjects, newObject]);\n        selectShape(newObjectId); // Select the newly created text object to allow immediate double-click edit\n        return;\n      // Exit as text tool doesn't use mousemove/mouseup for initial creation\n      case 'select':\n        setIsDrawing(false);\n        return;\n      default:\n        return;\n    }\n    setDrawingObjects(prevObjects => [...prevObjects, newObject]);\n    socket.emit('startDrawing', {\n      roomName,\n      object: newObject\n    });\n  };\n\n  // Re-added e.evt.preventDefault() for touch events\n  const handleMouseMove = e => {\n    if (!isDrawing) {\n      return;\n    }\n    // THIS IS THE KEY FIX FOR TOUCHSCREENS\n    if (e.evt.type === 'touchmove') {\n      e.evt.preventDefault();\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let currentObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\n    if (currentObject) {\n      const newObjects = [...drawingObjects];\n      const index = newObjects.findIndex(obj => obj.id === currentObject.id);\n      switch (currentObject.type) {\n        case 'line':\n          currentObject.points = currentObject.points.concat([point.x, point.y]);\n          newObjects[index] = currentObject;\n          setDrawingObjects(newObjects);\n          // Only send new points for lines\n          socket.emit('drawing', {\n            roomName,\n            objectId: currentObjectId.current,\n            newPoints: [point.x, point.y]\n          });\n          break;\n        case 'rect':\n          const newX_rect = Math.min(currentObject.x, point.x);\n          const newY_rect = Math.min(currentObject.y, point.y);\n          const newWidth_rect = Math.abs(point.x - currentObject.x);\n          const newHeight_rect = Math.abs(point.y - currentObject.y);\n          currentObject = {\n            ...currentObject,\n            x: newX_rect,\n            y: newY_rect,\n            width: newWidth_rect,\n            height: newHeight_rect\n          };\n          newObjects[index] = currentObject;\n          socket.emit('updateObject', {\n            roomName,\n            objectId: currentObjectId.current,\n            newAttributes: {\n              x: newX_rect,\n              y: newY_rect,\n              width: newWidth_rect,\n              height: newHeight_rect\n            }\n          });\n          setDrawingObjects(newObjects);\n          break;\n        case 'circle':\n          const newRadius_circle = Math.sqrt(Math.pow(point.x - currentObject.x, 2) + Math.pow(point.y - currentObject.y, 2));\n          currentObject = {\n            ...currentObject,\n            radius: newRadius_circle\n          };\n          newObjects[index] = currentObject;\n          socket.emit('updateObject', {\n            roomName,\n            objectId: currentObjectId.current,\n            newAttributes: {\n              radius: newRadius_circle\n            }\n          });\n          setDrawingObjects(newObjects);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n    if (tool !== 'select' && tool !== 'text') {\n      // Text tool handles its own finalization\n      const finalObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\n      if (finalObject) {\n        socket.emit('endDrawing', {\n          roomName,\n          objectId: currentObjectId.current,\n          finalObjectState: finalObject\n        });\n      }\n    }\n    currentObjectId.current = null;\n  };\n  const handleSendChatMessage = () => {\n    if (newChatMessage.trim()) {\n      socket.emit('chatMessage', {\n        roomName,\n        message: newChatMessage.trim()\n      });\n      setNewChatMessage('');\n    }\n  };\n  const handleChatKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendChatMessage();\n    }\n  };\n  const handleClearWhiteboard = () => {\n    if (window.confirm('Are you sure you want to clear the entire whiteboard? This cannot be undone!')) {\n      socket.emit('clearWhiteboard', roomName);\n    }\n  };\n  const handleCloseRoom = () => {\n    if (window.confirm('Are you sure you want to close this room? All users will be disconnected and data will be deleted.')) {\n      socket.emit('closeRoom', roomName);\n      navigate('/');\n      alert('Room closure initiated.');\n    }\n  };\n  const getCursorStyle = () => {\n    switch (tool) {\n      case 'pen':\n      case 'eraser':\n      case 'rect':\n      case 'circle':\n      case 'marker':\n      case 'dashed':\n      case 'calligraphy':\n        return 'crosshair';\n      case 'text':\n        return 'text';\n      case 'select':\n        return selectedId ? 'move' : 'default';\n      default:\n        return 'default';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whiteboard-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"whiteboard-main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Whiteboard Room: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"room-name\",\n            children: roomName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          className: \"leave-button\",\n          children: \"Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-palette\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-group tool-group-single\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tool-button ${tool === 'select' ? 'active' : ''}`,\n            onClick: () => {\n              setTool('select');\n              selectShape(null);\n            },\n            title: \"Select & Move\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), \" Select\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tool-button ${tool === 'pen' ? 'active' : ''}`,\n            onClick: () => setTool('pen'),\n            title: \"Pen\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), \" Pen\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tool-button ${tool === 'marker' ? 'active' : ''}`,\n            onClick: () => setTool('marker'),\n            title: \"Marker\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this), \" Marker\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tool-button ${tool === 'dashed' ? 'active' : ''}`,\n            onClick: () => setTool('dashed'),\n            title: \"Dashed Line\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this), \" Dashed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tool-button ${tool === 'calligraphy' ? 'active' : ''}`,\n            onClick: () => setTool('calligraphy'),\n            title: \"Calligraphy Pen\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this), \" Calligraphy\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tool-button ${tool === 'rect' ? 'active' : ''}`,\n            onClick: () => setTool('rect'),\n            title: \"Rectangle\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 15\n            }, this), \" Rectangle\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tool-button ${tool === 'circle' ? 'active' : ''}`,\n            onClick: () => setTool('circle'),\n            title: \"Circle\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), \" Circle\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tool-button ${tool === 'text' ? 'active' : ''}`,\n            onClick: () => setTool('text'),\n            title: \"Text\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), \" Text\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-group tool-group-properties\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tool-property-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"stroke-color-picker\",\n              className: \"tool-label\",\n              children: \"Stroke:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              id: \"stroke-color-picker\",\n              className: \"color-picker\",\n              value: strokeColor,\n              onChange: e => {\n                setStrokeColor(e.target.value);\n                if (tool !== 'eraser' && !['rect', 'circle', 'text'].includes(tool)) setTool('pen');\n              },\n              title: \"Stroke Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tool-property-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fill-color-picker\",\n              className: \"tool-label\",\n              children: \"Fill:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              id: \"fill-color-picker\",\n              className: \"color-picker\",\n              value: fillColor,\n              onChange: e => {\n                setFillColor(e.target.value);\n                if (['pen', 'marker', 'dashed', 'calligraphy', 'eraser'].includes(tool)) {\n                  setTool('rect');\n                }\n              },\n              title: \"Fill Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tool-property-item tool-slider-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"stroke-width-slider\",\n              className: \"tool-label\",\n              children: \"Width:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"stroke-width-slider\",\n              min: \"1\",\n              max: \"20\",\n              value: strokeWidth,\n              onChange: e => setStrokeWidth(parseInt(e.target.value, 10)),\n              className: \"stroke-width-slider\",\n              title: `Stroke Width: ${strokeWidth}px`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stroke-width-display\",\n              children: [strokeWidth, \"px\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this), tool !== 'eraser' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tool-property-item tool-slider-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"brush-opacity-slider\",\n              className: \"tool-label\",\n              children: \"Opacity:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"brush-opacity-slider\",\n              min: \"0.1\",\n              max: \"1.0\",\n              step: \"0.05\",\n              value: brushOpacity,\n              onChange: e => setBrushOpacity(parseFloat(e.target.value)),\n              className: \"stroke-width-slider\",\n              title: `Opacity: ${Math.round(brushOpacity * 100)}%`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stroke-width-display\",\n              children: [Math.round(brushOpacity * 100), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this), ['pen', 'marker', 'dashed', 'calligraphy'].includes(tool) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tool-property-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"line-cap-select\",\n              className: \"tool-label\",\n              children: \"Cap:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"line-cap-select\",\n              value: lineCap,\n              onChange: e => setLineCap(e.target.value),\n              className: \"tool-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"round\",\n                children: \"Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"butt\",\n                children: \"Butt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"square\",\n                children: \"Square\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tool-button ${tool === 'eraser' ? 'active' : ''}`,\n            onClick: () => setTool('eraser'),\n            title: \"Eraser\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this), \" Eraser\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"tool-button\",\n            onClick: handleClearWhiteboard,\n            title: \"Clear All\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), \" Clear All\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"tool-button danger-button\",\n            onClick: handleCloseRoom,\n            title: \"Close & Delete Room\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this), \" Close Room\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whiteboard-canvas-container\",\n        ref: canvasContainerRef,\n        children: /*#__PURE__*/_jsxDEV(Stage, {\n          width: stageDimensions.width,\n          height: stageDimensions.height,\n          onMouseDown: handleMouseDown,\n          onMousemove: handleMouseMove,\n          onMouseup: handleMouseUp,\n          onTouchStart: handleMouseDown,\n          onTouchMove: handleMouseMove,\n          onTouchEnd: handleMouseUp,\n          ref: stageRef,\n          style: {\n            cursor: getCursorStyle(),\n            backgroundColor: 'white',\n            touchAction: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(Layer, {\n            children: drawingObjects.map(obj => {\n              if (obj.type === 'line') {\n                return /*#__PURE__*/_jsxDEV(Line, {\n                  points: obj.points,\n                  stroke: obj.stroke,\n                  strokeWidth: obj.strokeWidth,\n                  opacity: obj.opacity || 1.0,\n                  lineCap: obj.lineCap || 'round',\n                  lineJoin: \"round\",\n                  dash: obj.dash || [],\n                  tension: 0.5,\n                  globalCompositeOperation: obj.tool === 'eraser' ? 'destination-out' : 'source-over'\n                }, obj.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(ColoredRect, {\n                  shapeProps: obj,\n                  isSelected: obj.id === selectedId,\n                  onSelect: () => {\n                    selectShape(obj.id);\n                    setTool('select');\n                  },\n                  onChange: handleObjectChange,\n                  activeTool: tool\n                }, obj.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 21\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hint-text margin-top-md\",\n        children: \"Use the tools above to draw and collaborate!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-username\",\n            children: [msg.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 15\n          }, this), \" \", msg.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-timestamp\",\n            children: new Date(msg.timestamp).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatMessagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: newChatMessage,\n          onChange: e => setNewChatMessage(e.target.value),\n          onKeyPress: handleChatKeyPress,\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendChatMessage,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 501,\n    columnNumber: 5\n  }, this);\n}\n_s2(WhiteboardRoom, \"YAwQsV3lQ+N8iR2BL3vDQHXB0R8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = WhiteboardRoom;\nexport default WhiteboardRoom;\nvar _c, _c2;\n$RefreshReg$(_c, \"ColoredRect\");\n$RefreshReg$(_c2, \"WhiteboardRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Stage","Layer","Line","Rect","Circle","Text","Transformer","useParams","useNavigate","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ColoredRect","shapeProps","isSelected","onSelect","onChange","activeTool","_s","shapeRef","trRef","current","nodes","getLayer","batchDraw","type","handleDblClick","e","setTimeout","textNode","hide","textPosition","absolutePosition","stageBox","getStage","container","getBoundingClientRect","textarea","document","createElement","body","appendChild","textRect","getClientRect","value","text","style","position","top","y","left","x","width","height","fontSize","lineHeight","fontFamily","textAlign","align","color","fill","padding","border","resize","overflow","background","outline","zIndex","transformOrigin","transform","rotation","focus","select","removeTextarea","removeChild","show","autoResizeTextarea","scrollHeight","addEventListener","key","shiftKey","blur","Math","max","scrollWidth","currentKonvaNode","onClick","onTap","onDblClick","onDblTap","ref","draggable","onDragEnd","target","onTransformEnd","node","scaleX","scaleY","fileName","_jsxFileName","lineNumber","columnNumber","radius","newFontSize","newWidth","newHeight","children","boundBoxFunc","oldBox","newBox","_c","WhiteboardRoom","_s2","roomName","navigate","drawingObjects","setDrawingObjects","isDrawing","setIsDrawing","stageRef","currentObjectId","chatMessages","setChatMessages","newChatMessage","setNewChatMessage","chatMessagesEndRef","stageDimensions","setStageDimensions","window","innerWidth","innerHeight","canvasContainerRef","tool","setTool","strokeColor","setStrokeColor","strokeWidth","setStrokeWidth","fillColor","setFillColor","selectedId","selectShape","brushOpacity","setBrushOpacity","lineCap","setLineCap","emit","on","console","log","id","alert","data","lines","messages","newObject","prevObjects","objectId","newPoints","map","obj","points","concat","finalObjectState","newAttributes","message","prevMessages","username","timestamp","Date","destroyedRoomName","handleResize","clientWidth","clientHeight","removeEventListener","off","_chatMessagesEndRef$c","scrollIntoView","behavior","handleObjectChange","updatedObject","handleMouseDown","clickedOnEmpty","evt","preventDefault","pos","getPointerPosition","newObjectId","now","currentStrokeColor","currentStrokeWidth","currentOpacity","currentLineCap","currentDash","stroke","opacity","dash","object","handleMouseMove","stage","point","currentObject","find","newObjects","index","findIndex","newX_rect","min","newY_rect","newWidth_rect","abs","newHeight_rect","newRadius_circle","sqrt","pow","handleMouseUp","finalObject","handleSendChatMessage","trim","handleChatKeyPress","handleClearWhiteboard","confirm","handleCloseRoom","getCursorStyle","className","title","htmlFor","includes","parseInt","step","parseFloat","round","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","cursor","backgroundColor","touchAction","lineJoin","tension","globalCompositeOperation","msg","toLocaleTimeString","hour","minute","placeholder","onKeyPress","_c2","$RefreshReg$"],"sources":["C:/Users/gamin/OneDrive/Desktop/Project/Whiteboard/live-whiteboard-app/whiteboard-frontend/src/components/WhiteboardRoom.js"],"sourcesContent":["// whiteboard-frontend/src/components/WhiteboardRoom.js\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Stage, Layer, Line, Rect, Circle, Text, Transformer } from 'react-konva';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport './WhiteboardRoom.css'; // Make sure this CSS file is updated too!\r\n\r\n// IMPORTANT: Make sure YOUR_PC_IP_ADDRESS is replaced with your actual PC's IP.\r\nconst socket = io('http://192.168.1.19:000');\r\n\r\n// Helper component for selectable/transformable Konva nodes\r\nconst ColoredRect = ({ shapeProps, isSelected, onSelect, onChange, activeTool }) => {\r\n  const shapeRef = useRef();\r\n  const trRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (isSelected && trRef.current && shapeRef.current) {\r\n      trRef.current.nodes([shapeRef.current]);\r\n      trRef.current.getLayer().batchDraw();\r\n    } else if (!isSelected && trRef.current) {\r\n      trRef.current.nodes([]);\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [isSelected, shapeProps.type]);\r\n\r\n  const handleDblClick = (e) => {\r\n    onSelect(); // Selects the shape\r\n    if (shapeProps.type === 'text') {\r\n      // Small delay to allow Konva to finish its rendering cycle and for accurate measurements\r\n      setTimeout(() => {\r\n        const textNode = shapeRef.current;\r\n        if (!textNode) return;\r\n\r\n        // Hide Konva text node\r\n        textNode.hide();\r\n        textNode.getLayer().batchDraw();\r\n\r\n        // Remove transformer handles while editing text\r\n        if (trRef.current) {\r\n          trRef.current.nodes([]);\r\n          trRef.current.getLayer().batchDraw();\r\n        }\r\n\r\n        // Get text node's absolute position and dimensions\r\n        const textPosition = textNode.absolutePosition();\r\n        const stageBox = textNode.getStage().container().getBoundingClientRect();\r\n\r\n        // Create a native textarea element\r\n        const textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        // Konva's `getClientRect()` gives the actual rendered bounding box, more reliable for sizing\r\n        const textRect = textNode.getClientRect();\r\n\r\n        // Apply styles to the textarea to match the Konva text node\r\n        textarea.value = textNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.top = (textPosition.y + stageBox.top) + 'px';\r\n        textarea.style.left = (textPosition.x + stageBox.left) + 'px';\r\n        textarea.style.width = textRect.width + 'px'; // Use actual rendered width\r\n        textarea.style.height = textRect.height + 'px'; // Use actual rendered height\r\n        textarea.style.fontSize = textNode.fontSize() + 'px';\r\n        textarea.style.lineHeight = textNode.lineHeight();\r\n        textarea.style.fontFamily = textNode.fontFamily();\r\n        textarea.style.textAlign = textNode.align();\r\n        textarea.style.color = textNode.fill();\r\n        textarea.style.padding = textNode.padding() + 'px'; // Match Konva padding\r\n        textarea.style.border = '1px solid gray'; // Add a temporary border for visual feedback\r\n        textarea.style.resize = 'none'; // Prevent manual resizing by user\r\n        textarea.style.overflow = 'hidden'; // Hide scrollbars initially\r\n        textarea.style.background = 'white'; // Give it a background for easier editing\r\n        textarea.style.outline = 'none';\r\n        textarea.style.zIndex = '9999'; // Ensure it's on top of canvas\r\n        textarea.style.transformOrigin = 'left top';\r\n        textarea.style.transform = `rotateZ(${textNode.rotation()}deg)`; // Apply rotation\r\n\r\n        // Focus the textarea and select its content\r\n        textarea.focus();\r\n        textarea.select();\r\n\r\n        // Function to clean up the textarea\r\n        const removeTextarea = () => {\r\n          document.body.removeChild(textarea);\r\n          textNode.show(); // Show Konva text node again\r\n          textNode.getLayer().batchDraw();\r\n          // Re-enable transformer if select tool is active and shape is still selected\r\n          if (activeTool === 'select' && isSelected && shapeRef.current && trRef.current) {\r\n              trRef.current.nodes([shapeRef.current]);\r\n              trRef.current.getLayer().batchDraw();\r\n          }\r\n        };\r\n\r\n        // Auto-resize textarea as text is typed\r\n        const autoResizeTextarea = () => {\r\n          // Reset height to 'auto' to get accurate scrollHeight\r\n          textarea.style.height = 'auto';\r\n          // Set height to scrollHeight (content height)\r\n          textarea.style.height = textarea.scrollHeight + 'px';\r\n        };\r\n        textarea.addEventListener('input', autoResizeTextarea);\r\n        autoResizeTextarea(); // Initial auto-resize for existing text\r\n\r\n        // Event listeners for textarea\r\n        textarea.addEventListener('keydown', (e) => {\r\n          if (e.key === 'Enter' && !e.shiftKey) { // Save on Enter (unless Shift is held for new line)\r\n            textarea.blur(); // Blur triggers the 'blur' event listener below\r\n          }\r\n          if (e.key === 'Escape') { // Discard changes on Escape\r\n            removeTextarea();\r\n            // Optional: Revert text to original if you don't want Escape to save\r\n            // onChange({ ...shapeProps, text: shapeProps.text });\r\n          }\r\n        });\r\n\r\n        textarea.addEventListener('blur', () => {\r\n          // Update Konva node with new text and potentially new dimensions\r\n          onChange({\r\n            ...shapeProps,\r\n            text: textarea.value,\r\n            // Update Konva node's width/height based on textarea's final content size\r\n            // This ensures Konva text wraps correctly and is sized properly\r\n            width: Math.max(50, textarea.scrollWidth), // Ensure min width\r\n            height: Math.max(30, textarea.scrollHeight) // Ensure min height\r\n          });\r\n          removeTextarea();\r\n        });\r\n      }, 50); // Small delay to allow Konva internal updates\r\n    }\r\n  };\r\n\r\n  const currentKonvaNode = (\r\n    shapeProps.type === 'rect' ? (\r\n      <Rect\r\n        onClick={onSelect} onTap={onSelect} onDblClick={handleDblClick} onDblTap={handleDblClick}\r\n        ref={shapeRef} {...shapeProps} draggable={activeTool === 'select'}\r\n        onDragEnd={(e) => { onChange({ ...shapeProps, x: e.target.x(), y: e.target.y(), }); }}\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current; const scaleX = node.scaleX(); const scaleY = node.scaleY();\r\n          node.scaleX(1); node.scaleY(1);\r\n          onChange({ ...shapeProps, x: node.x(), y: node.y(), width: Math.max(5, node.width() * scaleX), height: Math.max(5, node.height() * scaleY), rotation: node.rotation(), });\r\n        }} />\r\n    ) : shapeProps.type === 'circle' ? (\r\n      <Circle\r\n        onClick={onSelect} onTap={onSelect} onDblClick={handleDblClick} onDblTap={handleDblClick}\r\n        ref={shapeRef} {...shapeProps} draggable={activeTool === 'select'}\r\n        onDragEnd={(e) => { onChange({ ...shapeProps, x: e.target.x(), y: e.target.y(), }); }}\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current; const scaleX = node.scaleX(); node.scaleX(1); node.scaleY(1);\r\n          onChange({ ...shapeProps, x: node.x(), y: node.y(), radius: Math.max(5, node.radius() * scaleX), rotation: node.rotation(), });\r\n        }} />\r\n    ) : shapeProps.type === 'text' ? (\r\n      <Text\r\n        onClick={onSelect} onTap={onSelect} onDblClick={handleDblClick} onDblTap={handleDblClick}\r\n        ref={shapeRef} {...shapeProps} draggable={activeTool === 'select'}\r\n        onDragEnd={(e) => { onChange({ ...shapeProps, x: e.target.x(), y: e.target.y(), }); }}\r\n        // IMPORTANT: Ensure text node's width/height/fontSize are updated on transform\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current;\r\n          const scaleX = node.scaleX();\r\n          const scaleY = node.scaleY(); // For text, usually scaleY is same as scaleX for font size\r\n          const rotation = node.rotation();\r\n\r\n          node.scaleX(1); // Reset scales\r\n          node.scaleY(1);\r\n\r\n          const newFontSize = Math.max(8, node.fontSize() * scaleX); // Scale font size, ensure minimum\r\n          const newWidth = Math.max(50, node.width() * scaleX); // Scale width\r\n          const newHeight = Math.max(30, node.height() * scaleY); // Scale height (less critical for auto-wrapping text but good for bounding box)\r\n\r\n          onChange({\r\n            ...shapeProps,\r\n            x: node.x(),\r\n            y: node.y(),\r\n            width: newWidth,\r\n            height: newHeight,\r\n            fontSize: newFontSize,\r\n            rotation: rotation,\r\n          });\r\n        }} />\r\n    ) : null\r\n  );\r\n  return (\r\n    <>\r\n      {currentKonvaNode}\r\n      {isSelected && currentKonvaNode && (\r\n        <Transformer ref={trRef} boundBoxFunc={(oldBox, newBox) => { if (newBox.width < 5 || newBox.height < 5) { return oldBox; } return newBox; }} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction WhiteboardRoom() {\r\n  const { roomName } = useParams();\r\n  const navigate = useNavigate();\r\n  const [drawingObjects, setDrawingObjects] = useState([]);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const stageRef = useRef(null);\r\n  const currentObjectId = useRef(null);\r\n\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [newChatMessage, setNewChatMessage] = useState('');\r\n  const chatMessagesEndRef = useRef(null);\r\n\r\n  const [stageDimensions, setStageDimensions] = useState({\r\n    width: window.innerWidth * 0.7,\r\n    height: window.innerHeight * 0.8\r\n  });\r\n  const canvasContainerRef = useRef(null);\r\n\r\n  // --- BRUSH STATE VARIABLES ---\r\n  const [tool, setTool] = useState('pen'); // 'pen', 'marker', 'dashed', 'calligraphy', 'eraser', 'rect', 'circle', 'text', 'select'\r\n  const [strokeColor, setStrokeColor] = useState('#000000');\r\n  const [strokeWidth, setStrokeWidth] = useState(5);\r\n  const [fillColor, setFillColor] = useState('transparent');\r\n  const [selectedId, selectShape] = useState(null);\r\n\r\n  // Brush specific properties\r\n  const [brushOpacity, setBrushOpacity] = useState(1.0); // 0.0 to 1.0\r\n  const [lineCap, setLineCap] = useState('round'); // 'butt', 'round', 'square'\r\n  // const [isDashed, setIsDashed] = useState(false); // Removed, now controlled by tool directly\r\n\r\n  useEffect(() => {\r\n    if (!roomName) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    socket.emit('joinRoom', roomName);\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to backend Socket.IO:', socket.id);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Disconnected from backend Socket.IO');\r\n      alert('Disconnected from server. Please refresh.');\r\n      navigate('/');\r\n    });\r\n\r\n    socket.on('whiteboardState', (data) => {\r\n      console.log('Received initial room state:', data);\r\n      setDrawingObjects(data.lines);\r\n      setChatMessages(data.messages);\r\n    });\r\n\r\n    socket.on('drawingStarted', (newObject) => {\r\n        setDrawingObjects((prevObjects) => [...prevObjects, newObject]);\r\n    });\r\n\r\n    socket.on('drawing', (data) => {\r\n        const { objectId, newPoints } = data;\r\n        setDrawingObjects((prevObjects) => {\r\n            return prevObjects.map((obj) => {\r\n                if (obj.id === objectId && obj.type === 'line') {\r\n                    return { ...obj, points: obj.points.concat(newPoints) };\r\n                }\r\n                return obj;\r\n            });\r\n        });\r\n    });\r\n\r\n    socket.on('drawingFinished', (data) => {\r\n        const { objectId, finalObjectState } = data;\r\n        setDrawingObjects((prevObjects) => {\r\n            return prevObjects.map((obj) => {\r\n                if (obj.id === objectId) {\r\n                    return finalObjectState;\r\n                }\r\n                return obj;\r\n            });\r\n        });\r\n    });\r\n\r\n    socket.on('objectUpdated', (data) => {\r\n        const { objectId, newAttributes } = data;\r\n        setDrawingObjects((prevObjects) => {\r\n            return prevObjects.map((obj) => {\r\n                if (obj.id === objectId) {\r\n                    return { ...obj, ...newAttributes };\r\n                }\r\n                return obj;\r\n            });\r\n        });\r\n    });\r\n\r\n    socket.on('whiteboardCleared', () => {\r\n        setDrawingObjects([]);\r\n        selectShape(null);\r\n        console.log('Whiteboard cleared by another user.');\r\n    });\r\n\r\n    socket.on('chatMessage', (message) => {\r\n        setChatMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    socket.on('userJoined', (username) => {\r\n        setChatMessages((prevMessages) => [...prevMessages, {\r\n            username: 'System',\r\n            message: `${username} has joined the room.`,\r\n            timestamp: new Date()\r\n        }]);\r\n    });\r\n\r\n    socket.on('roomDestroyed', (destroyedRoomName) => {\r\n        if (destroyedRoomName === roomName) {\r\n            alert(`Room \"${destroyedRoomName}\" has been closed or automatically destroyed.`);\r\n            navigate('/');\r\n        }\r\n    });\r\n\r\n    const handleResize = () => {\r\n      if (canvasContainerRef.current) {\r\n        const { clientWidth, clientHeight } = canvasContainerRef.current;\r\n        setStageDimensions({ width: clientWidth, height: clientHeight });\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      socket.off('connect');\r\n      socket.off('disconnect');\r\n      socket.off('whiteboardState');\r\n      socket.off('drawingStarted');\r\n      socket.off('drawing');\r\n      socket.off('drawingFinished');\r\n      socket.off('objectUpdated');\r\n      socket.off('whiteboardCleared');\r\n      socket.off('chatMessage');\r\n      socket.off('userJoined');\r\n      socket.off('roomDestroyed');\r\n    };\r\n  }, [roomName, navigate]);\r\n\r\n  useEffect(() => {\r\n    chatMessagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [chatMessages]);\r\n\r\n  const handleObjectChange = useCallback((updatedObject) => {\r\n    setDrawingObjects((prevObjects) => {\r\n      return prevObjects.map((obj) => {\r\n        if (obj.id === updatedObject.id) {\r\n          return updatedObject;\r\n        }\r\n        return obj;\r\n      });\r\n    });\r\n    socket.emit('updateObject', { roomName, objectId: updatedObject.id, newAttributes: updatedObject });\r\n  }, [roomName]);\r\n\r\n  // Re-added e.evt.preventDefault() for touch events\r\n  const handleMouseDown = (e) => {\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (tool === 'select' && clickedOnEmpty) {\r\n      selectShape(null);\r\n      return;\r\n    }\r\n    // THIS IS THE KEY FIX FOR TOUCHSCREENS\r\n    if (e.evt.type === 'touchstart') {\r\n        e.evt.preventDefault();\r\n    }\r\n    setIsDrawing(true);\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    const newObjectId = `${socket.id}-${Date.now()}`;\r\n    currentObjectId.current = newObjectId;\r\n    selectShape(null);\r\n\r\n    let newObject;\r\n    // --- LOGIC FOR DIFFERENT BRUSH TYPES ---\r\n    switch (tool) {\r\n      case 'pen':\r\n      case 'marker':\r\n      case 'dashed':\r\n      case 'calligraphy':\r\n      case 'eraser':\r\n        let currentStrokeColor = tool === 'eraser' ? '#FFFFFF' : strokeColor;\r\n        let currentStrokeWidth = tool === 'eraser' ? strokeWidth + 10 : strokeWidth;\r\n        let currentOpacity = tool === 'eraser' ? 1.0 : brushOpacity; // Eraser is always opaque\r\n        let currentLineCap = lineCap;\r\n        let currentDash = [];\r\n\r\n        if (tool === 'marker') {\r\n          currentOpacity = 0.6; // Semi-transparent\r\n          currentStrokeWidth = Math.max(15, strokeWidth * 2); // Thicker marker\r\n          currentLineCap = 'butt'; // Flat ends\r\n        } else if (tool === 'dashed') {\r\n          currentDash = [10, 10]; // 10px line, 10px gap\r\n        } else if (tool === 'calligraphy') {\r\n          currentStrokeWidth = Math.max(8, strokeWidth * 1.5); // Thicker, simulates broader tip\r\n          currentLineCap = 'square'; // Flat, square tip\r\n          currentDash = []; // No dash\r\n        }\r\n\r\n        newObject = {\r\n          id: newObjectId,\r\n          type: 'line',\r\n          points: [pos.x, pos.y],\r\n          stroke: currentStrokeColor,\r\n          strokeWidth: currentStrokeWidth,\r\n          opacity: currentOpacity,\r\n          lineCap: currentLineCap,\r\n          dash: currentDash,\r\n          tool: tool // Keep the original tool for eraser composite operation\r\n        };\r\n        break;\r\n      case 'rect':\r\n        newObject = { id: newObjectId, type: 'rect', x: pos.x, y: pos.y, width: 0, height: 0, stroke: strokeColor, strokeWidth: strokeWidth, fill: fillColor, opacity: brushOpacity };\r\n        break;\r\n      case 'circle':\r\n        newObject = { id: newObjectId, type: 'circle', x: pos.x, y: pos.y, radius: 0, stroke: strokeColor, strokeWidth: strokeWidth, fill: fillColor, opacity: brushOpacity };\r\n        break;\r\n      case 'text':\r\n        // Initial text object creation\r\n        newObject = {\r\n          id: newObjectId,\r\n          type: 'text',\r\n          x: pos.x,\r\n          y: pos.y,\r\n          text: 'Double click to edit',\r\n          fontSize: 20,\r\n          fontFamily: 'Arial', // Default font\r\n          stroke: strokeColor, // Stroke for outline if needed (Konva text can have stroke)\r\n          fill: strokeColor,   // Fill for text color\r\n          width: 200,          // Initial width for the text box\r\n          height: 30,          // Initial height for the text box\r\n          rotation: 0,\r\n          opacity: brushOpacity\r\n        };\r\n        setIsDrawing(false); // Text tool doesn't \"draw\" in the same way as pen\r\n        socket.emit('startDrawing', { roomName, object: newObject });\r\n        setDrawingObjects((prevObjects) => [...prevObjects, newObject]);\r\n        selectShape(newObjectId); // Select the newly created text object to allow immediate double-click edit\r\n        return; // Exit as text tool doesn't use mousemove/mouseup for initial creation\r\n      case 'select': setIsDrawing(false); return;\r\n      default: return;\r\n    }\r\n    setDrawingObjects((prevObjects) => [...prevObjects, newObject]);\r\n    socket.emit('startDrawing', { roomName, object: newObject });\r\n  };\r\n\r\n  // Re-added e.evt.preventDefault() for touch events\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing) { return; }\r\n    // THIS IS THE KEY FIX FOR TOUCHSCREENS\r\n    if (e.evt.type === 'touchmove') {\r\n        e.evt.preventDefault();\r\n    }\r\n    const stage = e.target.getStage(); const point = stage.getPointerPosition();\r\n    let currentObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\r\n\r\n    if (currentObject) {\r\n      const newObjects = [...drawingObjects]; const index = newObjects.findIndex(obj => obj.id === currentObject.id);\r\n      switch (currentObject.type) {\r\n        case 'line':\r\n          currentObject.points = currentObject.points.concat([point.x, point.y]);\r\n          newObjects[index] = currentObject;\r\n          setDrawingObjects(newObjects);\r\n          // Only send new points for lines\r\n          socket.emit('drawing', { roomName, objectId: currentObjectId.current, newPoints: [point.x, point.y] });\r\n          break;\r\n        case 'rect':\r\n          const newX_rect = Math.min(currentObject.x, point.x); const newY_rect = Math.min(currentObject.y, point.y);\r\n          const newWidth_rect = Math.abs(point.x - currentObject.x); const newHeight_rect = Math.abs(point.y - currentObject.y);\r\n          currentObject = { ...currentObject, x: newX_rect, y: newY_rect, width: newWidth_rect, height: newHeight_rect }; newObjects[index] = currentObject; socket.emit('updateObject', { roomName, objectId: currentObjectId.current, newAttributes: { x: newX_rect, y: newY_rect, width: newWidth_rect, height: newHeight_rect } }); setDrawingObjects(newObjects); break;\r\n        case 'circle':\r\n          const newRadius_circle = Math.sqrt(Math.pow(point.x - currentObject.x, 2) + Math.pow(point.y - currentObject.y, 2));\r\n          currentObject = { ...currentObject, radius: newRadius_circle }; newObjects[index] = currentObject; socket.emit('updateObject', { roomName, objectId: currentObjectId.current, newAttributes: { radius: newRadius_circle } }); setDrawingObjects(newObjects); break;\r\n        default: break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDrawing(false);\r\n    if (tool !== 'select' && tool !== 'text') { // Text tool handles its own finalization\r\n      const finalObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\r\n      if (finalObject) { socket.emit('endDrawing', { roomName, objectId: currentObjectId.current, finalObjectState: finalObject }); }\r\n    }\r\n    currentObjectId.current = null;\r\n  };\r\n\r\n  const handleSendChatMessage = () => {\r\n    if (newChatMessage.trim()) { socket.emit('chatMessage', { roomName, message: newChatMessage.trim() }); setNewChatMessage(''); }\r\n  };\r\n  const handleChatKeyPress = (e) => { if (e.key === 'Enter') { handleSendChatMessage(); } };\r\n  const handleClearWhiteboard = () => { if (window.confirm('Are you sure you want to clear the entire whiteboard? This cannot be undone!')) { socket.emit('clearWhiteboard', roomName); } };\r\n  const handleCloseRoom = () => { if (window.confirm('Are you sure you want to close this room? All users will be disconnected and data will be deleted.')) { socket.emit('closeRoom', roomName); navigate('/'); alert('Room closure initiated.'); } };\r\n\r\n  const getCursorStyle = () => {\r\n    switch (tool) {\r\n      case 'pen': case 'eraser': case 'rect': case 'circle': case 'marker': case 'dashed': case 'calligraphy': return 'crosshair';\r\n      case 'text': return 'text'; case 'select': return selectedId ? 'move' : 'default';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"whiteboard-page-container\">\r\n      <div className=\"whiteboard-main-content\">\r\n        <div className=\"header\">\r\n          <h1>Whiteboard Room: <span className=\"room-name\">{roomName}</span></h1>\r\n          <button onClick={() => navigate('/')} className=\"leave-button\">\r\n            Leave Room\r\n          </button>\r\n        </div>\r\n\r\n        {/* --- PROFESSIONAL TOOL PALETTE START --- */}\r\n        <div className=\"tool-palette\">\r\n\r\n          {/* Selection Tool */}\r\n          <div className=\"tool-group tool-group-single\">\r\n            <button className={`tool-button ${tool === 'select' ? 'active' : ''}`} onClick={() => { setTool('select'); selectShape(null); }} title=\"Select & Move\">\r\n              <span className=\"icon\"></span> Select\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"tool-separator\"></div>\r\n\r\n          {/* Brush Tools Group */}\r\n          <div className=\"tool-group\">\r\n            <button className={`tool-button ${tool === 'pen' ? 'active' : ''}`} onClick={() => setTool('pen')} title=\"Pen\">\r\n              <span className=\"icon\"></span> Pen\r\n            </button>\r\n            <button className={`tool-button ${tool === 'marker' ? 'active' : ''}`} onClick={() => setTool('marker')} title=\"Marker\">\r\n              <span className=\"icon\"></span> Marker\r\n            </button>\r\n            <button className={`tool-button ${tool === 'dashed' ? 'active' : ''}`} onClick={() => setTool('dashed')} title=\"Dashed Line\">\r\n              <span className=\"icon\"></span> Dashed\r\n            </button>\r\n            <button className={`tool-button ${tool === 'calligraphy' ? 'active' : ''}`} onClick={() => setTool('calligraphy')} title=\"Calligraphy Pen\">\r\n              <span className=\"icon\"></span> Calligraphy\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"tool-separator\"></div>\r\n\r\n          {/* Shape Tools Group */}\r\n          <div className=\"tool-group\">\r\n            <button className={`tool-button ${tool === 'rect' ? 'active' : ''}`} onClick={() => setTool('rect')} title=\"Rectangle\">\r\n              <span className=\"icon\"></span> Rectangle\r\n            </button>\r\n            <button className={`tool-button ${tool === 'circle' ? 'active' : ''}`} onClick={() => setTool('circle')} title=\"Circle\">\r\n              <span className=\"icon\"></span> Circle\r\n            </button>\r\n            <button className={`tool-button ${tool === 'text' ? 'active' : ''}`} onClick={() => setTool('text')} title=\"Text\">\r\n              <span className=\"icon\"></span> Text\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"tool-separator\"></div>\r\n\r\n          {/* Drawing Properties Group (Color, Width, Opacity, Line Cap) */}\r\n          <div className=\"tool-group tool-group-properties\">\r\n            <div className=\"tool-property-item\">\r\n              <label htmlFor=\"stroke-color-picker\" className=\"tool-label\">Stroke:</label>\r\n              <input type=\"color\" id=\"stroke-color-picker\" className=\"color-picker\" value={strokeColor} onChange={(e) => { setStrokeColor(e.target.value); if (tool !== 'eraser' && !['rect', 'circle', 'text'].includes(tool)) setTool('pen'); }} title=\"Stroke Color\" />\r\n            </div>\r\n\r\n            <div className=\"tool-property-item\">\r\n              <label htmlFor=\"fill-color-picker\" className=\"tool-label\">Fill:</label>\r\n              <input type=\"color\" id=\"fill-color-picker\" className=\"color-picker\" value={fillColor} onChange={(e) => { setFillColor(e.target.value); if (['pen', 'marker', 'dashed', 'calligraphy', 'eraser'].includes(tool)) { setTool('rect'); } }} title=\"Fill Color\" />\r\n            </div>\r\n\r\n            <div className=\"tool-property-item tool-slider-item\">\r\n              <label htmlFor=\"stroke-width-slider\" className=\"tool-label\">Width:</label>\r\n              <input type=\"range\" id=\"stroke-width-slider\" min=\"1\" max=\"20\" value={strokeWidth} onChange={(e) => setStrokeWidth(parseInt(e.target.value, 10))} className=\"stroke-width-slider\" title={`Stroke Width: ${strokeWidth}px`} />\r\n              <span className=\"stroke-width-display\">{strokeWidth}px</span>\r\n            </div>\r\n\r\n            {tool !== 'eraser' && (\r\n              <div className=\"tool-property-item tool-slider-item\">\r\n                <label htmlFor=\"brush-opacity-slider\" className=\"tool-label\">Opacity:</label>\r\n                <input type=\"range\" id=\"brush-opacity-slider\" min=\"0.1\" max=\"1.0\" step=\"0.05\" value={brushOpacity} onChange={(e) => setBrushOpacity(parseFloat(e.target.value))} className=\"stroke-width-slider\" title={`Opacity: ${Math.round(brushOpacity * 100)}%`} />\r\n                <span className=\"stroke-width-display\">{Math.round(brushOpacity * 100)}%</span>\r\n              </div>\r\n            )}\r\n\r\n            {['pen', 'marker', 'dashed', 'calligraphy'].includes(tool) && (\r\n              <div className=\"tool-property-item\">\r\n                <label htmlFor=\"line-cap-select\" className=\"tool-label\">Cap:</label>\r\n                <select id=\"line-cap-select\" value={lineCap} onChange={(e) => setLineCap(e.target.value)} className=\"tool-select\">\r\n                  <option value=\"round\">Round</option>\r\n                  <option value=\"butt\">Butt</option>\r\n                  <option value=\"square\">Square</option>\r\n                </select>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"tool-separator\"></div>\r\n\r\n          {/* Action Buttons Group */}\r\n          <div className=\"tool-group\">\r\n            <button className={`tool-button ${tool === 'eraser' ? 'active' : ''}`} onClick={() => setTool('eraser')} title=\"Eraser\">\r\n              <span className=\"icon\"></span> Eraser\r\n            </button>\r\n            <button className=\"tool-button\" onClick={handleClearWhiteboard} title=\"Clear All\">\r\n              <span className=\"icon\"></span> Clear All\r\n            </button>\r\n            <button className=\"tool-button danger-button\" onClick={handleCloseRoom} title=\"Close & Delete Room\">\r\n              <span className=\"icon\"></span> Close Room\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/* --- PROFESSIONAL TOOL PALETTE END --- */}\r\n\r\n        <div className=\"whiteboard-canvas-container\" ref={canvasContainerRef}>\r\n          <Stage\r\n            width={stageDimensions.width} height={stageDimensions.height}\r\n            onMouseDown={handleMouseDown} onMousemove={handleMouseMove} onMouseup={handleMouseUp}\r\n            onTouchStart={handleMouseDown} onTouchMove={handleMouseMove} onTouchEnd={handleMouseUp}\r\n            ref={stageRef}\r\n            style={{\r\n                cursor: getCursorStyle(),\r\n                backgroundColor: 'white',\r\n                touchAction: 'none'\r\n            }}\r\n          >\r\n            <Layer>\r\n              {drawingObjects.map((obj) => {\r\n                if (obj.type === 'line') {\r\n                  return (\r\n                    <Line\r\n                      key={obj.id}\r\n                      points={obj.points}\r\n                      stroke={obj.stroke}\r\n                      strokeWidth={obj.strokeWidth}\r\n                      opacity={obj.opacity || 1.0}\r\n                      lineCap={obj.lineCap || 'round'}\r\n                      lineJoin=\"round\"\r\n                      dash={obj.dash || []}\r\n                      tension={0.5}\r\n                      globalCompositeOperation={obj.tool === 'eraser' ? 'destination-out' : 'source-over'}\r\n                    />\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <ColoredRect\r\n                      key={obj.id} shapeProps={obj} isSelected={obj.id === selectedId}\r\n                      onSelect={() => { selectShape(obj.id); setTool('select'); }}\r\n                      onChange={handleObjectChange} activeTool={tool} />\r\n                  );\r\n                }\r\n              })}\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n        <p className=\"hint-text margin-top-md\">Use the tools above to draw and collaborate!</p>\r\n      </div>\r\n\r\n      <div className=\"chat-sidebar\">\r\n        <h2>Room Chat</h2>\r\n        <div className=\"chat-messages\">\r\n          {chatMessages.map((msg, index) => (\r\n            <div key={index} className=\"chat-message\">\r\n              <span className=\"chat-username\">{msg.username}:</span> {msg.message}\r\n              <span className=\"chat-timestamp\">{new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\r\n            </div>\r\n          ))}\r\n          <div ref={chatMessagesEndRef} />\r\n        </div>\r\n        <div className=\"chat-input-group\">\r\n          <input type=\"text\" placeholder=\"Type your message...\" value={newChatMessage} onChange={(e) => setNewChatMessage(e.target.value)} onKeyPress={handleChatKeyPress} className=\"chat-input\" />\r\n          <button onClick={handleSendChatMessage} className=\"send-button\">Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WhiteboardRoom; \r\n\r\n\r\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,WAAW,QAAQ,aAAa;AACjF,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAO,sBAAsB,CAAC,CAAC;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,MAAM,GAAGL,EAAE,CAAC,yBAAyB,CAAC;;AAE5C;AACA,MAAMM,WAAW,GAAGA,CAAC;EAAEC,UAAU;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAClF,MAAMC,QAAQ,GAAGxB,MAAM,CAAC,CAAC;EACzB,MAAMyB,KAAK,GAAGzB,MAAM,CAAC,CAAC;EAEtBD,SAAS,CAAC,MAAM;IACd,IAAIoB,UAAU,IAAIM,KAAK,CAACC,OAAO,IAAIF,QAAQ,CAACE,OAAO,EAAE;MACnDD,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CAACH,QAAQ,CAACE,OAAO,CAAC,CAAC;MACvCD,KAAK,CAACC,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC;IACtC,CAAC,MAAM,IAAI,CAACV,UAAU,IAAIM,KAAK,CAACC,OAAO,EAAE;MACvCD,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,EAAE,CAAC;MACvBF,KAAK,CAACC,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC;IACtC;EACF,CAAC,EAAE,CAACV,UAAU,EAAED,UAAU,CAACY,IAAI,CAAC,CAAC;EAEjC,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC5BZ,QAAQ,CAAC,CAAC,CAAC,CAAC;IACZ,IAAIF,UAAU,CAACY,IAAI,KAAK,MAAM,EAAE;MAC9B;MACAG,UAAU,CAAC,MAAM;QACf,MAAMC,QAAQ,GAAGV,QAAQ,CAACE,OAAO;QACjC,IAAI,CAACQ,QAAQ,EAAE;;QAEf;QACAA,QAAQ,CAACC,IAAI,CAAC,CAAC;QACfD,QAAQ,CAACN,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC;;QAE/B;QACA,IAAIJ,KAAK,CAACC,OAAO,EAAE;UACjBD,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,EAAE,CAAC;UACvBF,KAAK,CAACC,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC;QACtC;;QAEA;QACA,MAAMO,YAAY,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,CAAC;QAChD,MAAMC,QAAQ,GAAGJ,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,CAACC,qBAAqB,CAAC,CAAC;;QAExE;QACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;QACnDD,QAAQ,CAACE,IAAI,CAACC,WAAW,CAACJ,QAAQ,CAAC;;QAEnC;QACA,MAAMK,QAAQ,GAAGb,QAAQ,CAACc,aAAa,CAAC,CAAC;;QAEzC;QACAN,QAAQ,CAACO,KAAK,GAAGf,QAAQ,CAACgB,IAAI,CAAC,CAAC;QAChCR,QAAQ,CAACS,KAAK,CAACC,QAAQ,GAAG,UAAU;QACpCV,QAAQ,CAACS,KAAK,CAACE,GAAG,GAAIjB,YAAY,CAACkB,CAAC,GAAGhB,QAAQ,CAACe,GAAG,GAAI,IAAI;QAC3DX,QAAQ,CAACS,KAAK,CAACI,IAAI,GAAInB,YAAY,CAACoB,CAAC,GAAGlB,QAAQ,CAACiB,IAAI,GAAI,IAAI;QAC7Db,QAAQ,CAACS,KAAK,CAACM,KAAK,GAAGV,QAAQ,CAACU,KAAK,GAAG,IAAI,CAAC,CAAC;QAC9Cf,QAAQ,CAACS,KAAK,CAACO,MAAM,GAAGX,QAAQ,CAACW,MAAM,GAAG,IAAI,CAAC,CAAC;QAChDhB,QAAQ,CAACS,KAAK,CAACQ,QAAQ,GAAGzB,QAAQ,CAACyB,QAAQ,CAAC,CAAC,GAAG,IAAI;QACpDjB,QAAQ,CAACS,KAAK,CAACS,UAAU,GAAG1B,QAAQ,CAAC0B,UAAU,CAAC,CAAC;QACjDlB,QAAQ,CAACS,KAAK,CAACU,UAAU,GAAG3B,QAAQ,CAAC2B,UAAU,CAAC,CAAC;QACjDnB,QAAQ,CAACS,KAAK,CAACW,SAAS,GAAG5B,QAAQ,CAAC6B,KAAK,CAAC,CAAC;QAC3CrB,QAAQ,CAACS,KAAK,CAACa,KAAK,GAAG9B,QAAQ,CAAC+B,IAAI,CAAC,CAAC;QACtCvB,QAAQ,CAACS,KAAK,CAACe,OAAO,GAAGhC,QAAQ,CAACgC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACpDxB,QAAQ,CAACS,KAAK,CAACgB,MAAM,GAAG,gBAAgB,CAAC,CAAC;QAC1CzB,QAAQ,CAACS,KAAK,CAACiB,MAAM,GAAG,MAAM,CAAC,CAAC;QAChC1B,QAAQ,CAACS,KAAK,CAACkB,QAAQ,GAAG,QAAQ,CAAC,CAAC;QACpC3B,QAAQ,CAACS,KAAK,CAACmB,UAAU,GAAG,OAAO,CAAC,CAAC;QACrC5B,QAAQ,CAACS,KAAK,CAACoB,OAAO,GAAG,MAAM;QAC/B7B,QAAQ,CAACS,KAAK,CAACqB,MAAM,GAAG,MAAM,CAAC,CAAC;QAChC9B,QAAQ,CAACS,KAAK,CAACsB,eAAe,GAAG,UAAU;QAC3C/B,QAAQ,CAACS,KAAK,CAACuB,SAAS,GAAG,WAAWxC,QAAQ,CAACyC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;;QAEjE;QACAjC,QAAQ,CAACkC,KAAK,CAAC,CAAC;QAChBlC,QAAQ,CAACmC,MAAM,CAAC,CAAC;;QAEjB;QACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;UAC3BnC,QAAQ,CAACE,IAAI,CAACkC,WAAW,CAACrC,QAAQ,CAAC;UACnCR,QAAQ,CAAC8C,IAAI,CAAC,CAAC,CAAC,CAAC;UACjB9C,QAAQ,CAACN,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC;UAC/B;UACA,IAAIP,UAAU,KAAK,QAAQ,IAAIH,UAAU,IAAIK,QAAQ,CAACE,OAAO,IAAID,KAAK,CAACC,OAAO,EAAE;YAC5ED,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CAACH,QAAQ,CAACE,OAAO,CAAC,CAAC;YACvCD,KAAK,CAACC,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC;UACxC;QACF,CAAC;;QAED;QACA,MAAMoD,kBAAkB,GAAGA,CAAA,KAAM;UAC/B;UACAvC,QAAQ,CAACS,KAAK,CAACO,MAAM,GAAG,MAAM;UAC9B;UACAhB,QAAQ,CAACS,KAAK,CAACO,MAAM,GAAGhB,QAAQ,CAACwC,YAAY,GAAG,IAAI;QACtD,CAAC;QACDxC,QAAQ,CAACyC,gBAAgB,CAAC,OAAO,EAAEF,kBAAkB,CAAC;QACtDA,kBAAkB,CAAC,CAAC,CAAC,CAAC;;QAEtB;QACAvC,QAAQ,CAACyC,gBAAgB,CAAC,SAAS,EAAGnD,CAAC,IAAK;UAC1C,IAAIA,CAAC,CAACoD,GAAG,KAAK,OAAO,IAAI,CAACpD,CAAC,CAACqD,QAAQ,EAAE;YAAE;YACtC3C,QAAQ,CAAC4C,IAAI,CAAC,CAAC,CAAC,CAAC;UACnB;UACA,IAAItD,CAAC,CAACoD,GAAG,KAAK,QAAQ,EAAE;YAAE;YACxBN,cAAc,CAAC,CAAC;YAChB;YACA;UACF;QACF,CAAC,CAAC;QAEFpC,QAAQ,CAACyC,gBAAgB,CAAC,MAAM,EAAE,MAAM;UACtC;UACA9D,QAAQ,CAAC;YACP,GAAGH,UAAU;YACbgC,IAAI,EAAER,QAAQ,CAACO,KAAK;YACpB;YACA;YACAQ,KAAK,EAAE8B,IAAI,CAACC,GAAG,CAAC,EAAE,EAAE9C,QAAQ,CAAC+C,WAAW,CAAC;YAAE;YAC3C/B,MAAM,EAAE6B,IAAI,CAACC,GAAG,CAAC,EAAE,EAAE9C,QAAQ,CAACwC,YAAY,CAAC,CAAC;UAC9C,CAAC,CAAC;UACFJ,cAAc,CAAC,CAAC;QAClB,CAAC,CAAC;MACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACV;EACF,CAAC;EAED,MAAMY,gBAAgB,GACpBxE,UAAU,CAACY,IAAI,KAAK,MAAM,gBACxBjB,OAAA,CAACR,IAAI;IACHsF,OAAO,EAAEvE,QAAS;IAACwE,KAAK,EAAExE,QAAS;IAACyE,UAAU,EAAE9D,cAAe;IAAC+D,QAAQ,EAAE/D,cAAe;IACzFgE,GAAG,EAAEvE,QAAS;IAAA,GAAKN,UAAU;IAAE8E,SAAS,EAAE1E,UAAU,KAAK,QAAS;IAClE2E,SAAS,EAAGjE,CAAC,IAAK;MAAEX,QAAQ,CAAC;QAAE,GAAGH,UAAU;QAAEsC,CAAC,EAAExB,CAAC,CAACkE,MAAM,CAAC1C,CAAC,CAAC,CAAC;QAAEF,CAAC,EAAEtB,CAAC,CAACkE,MAAM,CAAC5C,CAAC,CAAC;MAAG,CAAC,CAAC;IAAE,CAAE;IACtF6C,cAAc,EAAGnE,CAAC,IAAK;MACrB,MAAMoE,IAAI,GAAG5E,QAAQ,CAACE,OAAO;MAAE,MAAM2E,MAAM,GAAGD,IAAI,CAACC,MAAM,CAAC,CAAC;MAAE,MAAMC,MAAM,GAAGF,IAAI,CAACE,MAAM,CAAC,CAAC;MACzFF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;MAAED,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;MAC9BjF,QAAQ,CAAC;QAAE,GAAGH,UAAU;QAAEsC,CAAC,EAAE4C,IAAI,CAAC5C,CAAC,CAAC,CAAC;QAAEF,CAAC,EAAE8C,IAAI,CAAC9C,CAAC,CAAC,CAAC;QAAEG,KAAK,EAAE8B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEY,IAAI,CAAC3C,KAAK,CAAC,CAAC,GAAG4C,MAAM,CAAC;QAAE3C,MAAM,EAAE6B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEY,IAAI,CAAC1C,MAAM,CAAC,CAAC,GAAG4C,MAAM,CAAC;QAAE3B,QAAQ,EAAEyB,IAAI,CAACzB,QAAQ,CAAC;MAAG,CAAC,CAAC;IAC3K;EAAE;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GACLxF,UAAU,CAACY,IAAI,KAAK,QAAQ,gBAC9BjB,OAAA,CAACP,MAAM;IACLqF,OAAO,EAAEvE,QAAS;IAACwE,KAAK,EAAExE,QAAS;IAACyE,UAAU,EAAE9D,cAAe;IAAC+D,QAAQ,EAAE/D,cAAe;IACzFgE,GAAG,EAAEvE,QAAS;IAAA,GAAKN,UAAU;IAAE8E,SAAS,EAAE1E,UAAU,KAAK,QAAS;IAClE2E,SAAS,EAAGjE,CAAC,IAAK;MAAEX,QAAQ,CAAC;QAAE,GAAGH,UAAU;QAAEsC,CAAC,EAAExB,CAAC,CAACkE,MAAM,CAAC1C,CAAC,CAAC,CAAC;QAAEF,CAAC,EAAEtB,CAAC,CAACkE,MAAM,CAAC5C,CAAC,CAAC;MAAG,CAAC,CAAC;IAAE,CAAE;IACtF6C,cAAc,EAAGnE,CAAC,IAAK;MACrB,MAAMoE,IAAI,GAAG5E,QAAQ,CAACE,OAAO;MAAE,MAAM2E,MAAM,GAAGD,IAAI,CAACC,MAAM,CAAC,CAAC;MAAED,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;MAAED,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;MAC3FjF,QAAQ,CAAC;QAAE,GAAGH,UAAU;QAAEsC,CAAC,EAAE4C,IAAI,CAAC5C,CAAC,CAAC,CAAC;QAAEF,CAAC,EAAE8C,IAAI,CAAC9C,CAAC,CAAC,CAAC;QAAEqD,MAAM,EAAEpB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEY,IAAI,CAACO,MAAM,CAAC,CAAC,GAAGN,MAAM,CAAC;QAAE1B,QAAQ,EAAEyB,IAAI,CAACzB,QAAQ,CAAC;MAAG,CAAC,CAAC;IAChI;EAAE;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GACLxF,UAAU,CAACY,IAAI,KAAK,MAAM,gBAC5BjB,OAAA,CAACN,IAAI;IACHoF,OAAO,EAAEvE,QAAS;IAACwE,KAAK,EAAExE,QAAS;IAACyE,UAAU,EAAE9D,cAAe;IAAC+D,QAAQ,EAAE/D,cAAe;IACzFgE,GAAG,EAAEvE,QAAS;IAAA,GAAKN,UAAU;IAAE8E,SAAS,EAAE1E,UAAU,KAAK,QAAS;IAClE2E,SAAS,EAAGjE,CAAC,IAAK;MAAEX,QAAQ,CAAC;QAAE,GAAGH,UAAU;QAAEsC,CAAC,EAAExB,CAAC,CAACkE,MAAM,CAAC1C,CAAC,CAAC,CAAC;QAAEF,CAAC,EAAEtB,CAAC,CAACkE,MAAM,CAAC5C,CAAC,CAAC;MAAG,CAAC,CAAC;IAAE;IACpF;IAAA;IACA6C,cAAc,EAAGnE,CAAC,IAAK;MACrB,MAAMoE,IAAI,GAAG5E,QAAQ,CAACE,OAAO;MAC7B,MAAM2E,MAAM,GAAGD,IAAI,CAACC,MAAM,CAAC,CAAC;MAC5B,MAAMC,MAAM,GAAGF,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;MAC9B,MAAM3B,QAAQ,GAAGyB,IAAI,CAACzB,QAAQ,CAAC,CAAC;MAEhCyB,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAChBD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;MAEd,MAAMM,WAAW,GAAGrB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEY,IAAI,CAACzC,QAAQ,CAAC,CAAC,GAAG0C,MAAM,CAAC,CAAC,CAAC;MAC3D,MAAMQ,QAAQ,GAAGtB,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEY,IAAI,CAAC3C,KAAK,CAAC,CAAC,GAAG4C,MAAM,CAAC,CAAC,CAAC;MACtD,MAAMS,SAAS,GAAGvB,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEY,IAAI,CAAC1C,MAAM,CAAC,CAAC,GAAG4C,MAAM,CAAC,CAAC,CAAC;;MAExDjF,QAAQ,CAAC;QACP,GAAGH,UAAU;QACbsC,CAAC,EAAE4C,IAAI,CAAC5C,CAAC,CAAC,CAAC;QACXF,CAAC,EAAE8C,IAAI,CAAC9C,CAAC,CAAC,CAAC;QACXG,KAAK,EAAEoD,QAAQ;QACfnD,MAAM,EAAEoD,SAAS;QACjBnD,QAAQ,EAAEiD,WAAW;QACrBjC,QAAQ,EAAEA;MACZ,CAAC,CAAC;IACJ;EAAE;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GACL,IACL;EACD,oBACE7F,OAAA,CAAAE,SAAA;IAAAgG,QAAA,GACGrB,gBAAgB,EAChBvE,UAAU,IAAIuE,gBAAgB,iBAC7B7E,OAAA,CAACL,WAAW;MAACuF,GAAG,EAAEtE,KAAM;MAACuF,YAAY,EAAEA,CAACC,MAAM,EAAEC,MAAM,KAAK;QAAE,IAAIA,MAAM,CAACzD,KAAK,GAAG,CAAC,IAAIyD,MAAM,CAACxD,MAAM,GAAG,CAAC,EAAE;UAAE,OAAOuD,MAAM;QAAE;QAAE,OAAOC,MAAM;MAAE;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC/I;EAAA,eACD,CAAC;AAEP,CAAC;AAACnF,EAAA,CAlLIN,WAAW;AAAAkG,EAAA,GAAXlG,WAAW;AAoLjB,SAASmG,cAAcA,CAAA,EAAG;EAAAC,GAAA;EACxB,MAAM;IAAEC;EAAS,CAAC,GAAG7G,SAAS,CAAC,CAAC;EAChC,MAAM8G,QAAQ,GAAG7G,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC8G,cAAc,EAAEC,iBAAiB,CAAC,GAAG3H,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC4H,SAAS,EAAEC,YAAY,CAAC,GAAG7H,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM8H,QAAQ,GAAG5H,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM6H,eAAe,GAAG7H,MAAM,CAAC,IAAI,CAAC;EAEpC,MAAM,CAAC8H,YAAY,EAAEC,eAAe,CAAC,GAAGjI,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkI,cAAc,EAAEC,iBAAiB,CAAC,GAAGnI,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMoI,kBAAkB,GAAGlI,MAAM,CAAC,IAAI,CAAC;EAEvC,MAAM,CAACmI,eAAe,EAAEC,kBAAkB,CAAC,GAAGtI,QAAQ,CAAC;IACrD2D,KAAK,EAAE4E,MAAM,CAACC,UAAU,GAAG,GAAG;IAC9B5E,MAAM,EAAE2E,MAAM,CAACE,WAAW,GAAG;EAC/B,CAAC,CAAC;EACF,MAAMC,kBAAkB,GAAGxI,MAAM,CAAC,IAAI,CAAC;;EAEvC;EACA,MAAM,CAACyI,IAAI,EAAEC,OAAO,CAAC,GAAG5I,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACzC,MAAM,CAAC6I,WAAW,EAAEC,cAAc,CAAC,GAAG9I,QAAQ,CAAC,SAAS,CAAC;EACzD,MAAM,CAAC+I,WAAW,EAAEC,cAAc,CAAC,GAAGhJ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACiJ,SAAS,EAAEC,YAAY,CAAC,GAAGlJ,QAAQ,CAAC,aAAa,CAAC;EACzD,MAAM,CAACmJ,UAAU,EAAEC,WAAW,CAAC,GAAGpJ,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAM,CAACqJ,YAAY,EAAEC,eAAe,CAAC,GAAGtJ,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACvD,MAAM,CAACuJ,OAAO,EAAEC,UAAU,CAAC,GAAGxJ,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACjD;;EAEAC,SAAS,CAAC,MAAM;IACd,IAAI,CAACuH,QAAQ,EAAE;MACbC,QAAQ,CAAC,GAAG,CAAC;MACb;IACF;IAEAvG,MAAM,CAACuI,IAAI,CAAC,UAAU,EAAEjC,QAAQ,CAAC;IAEjCtG,MAAM,CAACwI,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE1I,MAAM,CAAC2I,EAAE,CAAC;IAC3D,CAAC,CAAC;IAEF3I,MAAM,CAACwI,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClDE,KAAK,CAAC,2CAA2C,CAAC;MAClDrC,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC;IAEFvG,MAAM,CAACwI,EAAE,CAAC,iBAAiB,EAAGK,IAAI,IAAK;MACrCJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEG,IAAI,CAAC;MACjDpC,iBAAiB,CAACoC,IAAI,CAACC,KAAK,CAAC;MAC7B/B,eAAe,CAAC8B,IAAI,CAACE,QAAQ,CAAC;IAChC,CAAC,CAAC;IAEF/I,MAAM,CAACwI,EAAE,CAAC,gBAAgB,EAAGQ,SAAS,IAAK;MACvCvC,iBAAiB,CAAEwC,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAED,SAAS,CAAC,CAAC;IACnE,CAAC,CAAC;IAEFhJ,MAAM,CAACwI,EAAE,CAAC,SAAS,EAAGK,IAAI,IAAK;MAC3B,MAAM;QAAEK,QAAQ;QAAEC;MAAU,CAAC,GAAGN,IAAI;MACpCpC,iBAAiB,CAAEwC,WAAW,IAAK;QAC/B,OAAOA,WAAW,CAACG,GAAG,CAAEC,GAAG,IAAK;UAC5B,IAAIA,GAAG,CAACV,EAAE,KAAKO,QAAQ,IAAIG,GAAG,CAACvI,IAAI,KAAK,MAAM,EAAE;YAC5C,OAAO;cAAE,GAAGuI,GAAG;cAAEC,MAAM,EAAED,GAAG,CAACC,MAAM,CAACC,MAAM,CAACJ,SAAS;YAAE,CAAC;UAC3D;UACA,OAAOE,GAAG;QACd,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;IAEFrJ,MAAM,CAACwI,EAAE,CAAC,iBAAiB,EAAGK,IAAI,IAAK;MACnC,MAAM;QAAEK,QAAQ;QAAEM;MAAiB,CAAC,GAAGX,IAAI;MAC3CpC,iBAAiB,CAAEwC,WAAW,IAAK;QAC/B,OAAOA,WAAW,CAACG,GAAG,CAAEC,GAAG,IAAK;UAC5B,IAAIA,GAAG,CAACV,EAAE,KAAKO,QAAQ,EAAE;YACrB,OAAOM,gBAAgB;UAC3B;UACA,OAAOH,GAAG;QACd,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;IAEFrJ,MAAM,CAACwI,EAAE,CAAC,eAAe,EAAGK,IAAI,IAAK;MACjC,MAAM;QAAEK,QAAQ;QAAEO;MAAc,CAAC,GAAGZ,IAAI;MACxCpC,iBAAiB,CAAEwC,WAAW,IAAK;QAC/B,OAAOA,WAAW,CAACG,GAAG,CAAEC,GAAG,IAAK;UAC5B,IAAIA,GAAG,CAACV,EAAE,KAAKO,QAAQ,EAAE;YACrB,OAAO;cAAE,GAAGG,GAAG;cAAE,GAAGI;YAAc,CAAC;UACvC;UACA,OAAOJ,GAAG;QACd,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;IAEFrJ,MAAM,CAACwI,EAAE,CAAC,mBAAmB,EAAE,MAAM;MACjC/B,iBAAiB,CAAC,EAAE,CAAC;MACrByB,WAAW,CAAC,IAAI,CAAC;MACjBO,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IACtD,CAAC,CAAC;IAEF1I,MAAM,CAACwI,EAAE,CAAC,aAAa,EAAGkB,OAAO,IAAK;MAClC3C,eAAe,CAAE4C,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IACjE,CAAC,CAAC;IAEF1J,MAAM,CAACwI,EAAE,CAAC,YAAY,EAAGoB,QAAQ,IAAK;MAClC7C,eAAe,CAAE4C,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAChDC,QAAQ,EAAE,QAAQ;QAClBF,OAAO,EAAE,GAAGE,QAAQ,uBAAuB;QAC3CC,SAAS,EAAE,IAAIC,IAAI,CAAC;MACxB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF9J,MAAM,CAACwI,EAAE,CAAC,eAAe,EAAGuB,iBAAiB,IAAK;MAC9C,IAAIA,iBAAiB,KAAKzD,QAAQ,EAAE;QAChCsC,KAAK,CAAC,SAASmB,iBAAiB,+CAA+C,CAAC;QAChFxD,QAAQ,CAAC,GAAG,CAAC;MACjB;IACJ,CAAC,CAAC;IAEF,MAAMyD,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIxC,kBAAkB,CAAC9G,OAAO,EAAE;QAC9B,MAAM;UAAEuJ,WAAW;UAAEC;QAAa,CAAC,GAAG1C,kBAAkB,CAAC9G,OAAO;QAChE0G,kBAAkB,CAAC;UAAE3E,KAAK,EAAEwH,WAAW;UAAEvH,MAAM,EAAEwH;QAAa,CAAC,CAAC;MAClE;IACF,CAAC;IAED7C,MAAM,CAAClD,gBAAgB,CAAC,QAAQ,EAAE6F,YAAY,CAAC;IAC/CA,YAAY,CAAC,CAAC;IAEd,OAAO,MAAM;MACX3C,MAAM,CAAC8C,mBAAmB,CAAC,QAAQ,EAAEH,YAAY,CAAC;MAClDhK,MAAM,CAACoK,GAAG,CAAC,SAAS,CAAC;MACrBpK,MAAM,CAACoK,GAAG,CAAC,YAAY,CAAC;MACxBpK,MAAM,CAACoK,GAAG,CAAC,iBAAiB,CAAC;MAC7BpK,MAAM,CAACoK,GAAG,CAAC,gBAAgB,CAAC;MAC5BpK,MAAM,CAACoK,GAAG,CAAC,SAAS,CAAC;MACrBpK,MAAM,CAACoK,GAAG,CAAC,iBAAiB,CAAC;MAC7BpK,MAAM,CAACoK,GAAG,CAAC,eAAe,CAAC;MAC3BpK,MAAM,CAACoK,GAAG,CAAC,mBAAmB,CAAC;MAC/BpK,MAAM,CAACoK,GAAG,CAAC,aAAa,CAAC;MACzBpK,MAAM,CAACoK,GAAG,CAAC,YAAY,CAAC;MACxBpK,MAAM,CAACoK,GAAG,CAAC,eAAe,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,CAAC9D,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExBxH,SAAS,CAAC,MAAM;IAAA,IAAAsL,qBAAA;IACd,CAAAA,qBAAA,GAAAnD,kBAAkB,CAACxG,OAAO,cAAA2J,qBAAA,uBAA1BA,qBAAA,CAA4BC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EACpE,CAAC,EAAE,CAACzD,YAAY,CAAC,CAAC;EAElB,MAAM0D,kBAAkB,GAAGvL,WAAW,CAAEwL,aAAa,IAAK;IACxDhE,iBAAiB,CAAEwC,WAAW,IAAK;MACjC,OAAOA,WAAW,CAACG,GAAG,CAAEC,GAAG,IAAK;QAC9B,IAAIA,GAAG,CAACV,EAAE,KAAK8B,aAAa,CAAC9B,EAAE,EAAE;UAC/B,OAAO8B,aAAa;QACtB;QACA,OAAOpB,GAAG;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC;IACFrJ,MAAM,CAACuI,IAAI,CAAC,cAAc,EAAE;MAAEjC,QAAQ;MAAE4C,QAAQ,EAAEuB,aAAa,CAAC9B,EAAE;MAAEc,aAAa,EAAEgB;IAAc,CAAC,CAAC;EACrG,CAAC,EAAE,CAACnE,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMoE,eAAe,GAAI1J,CAAC,IAAK;IAC7B,MAAM2J,cAAc,GAAG3J,CAAC,CAACkE,MAAM,KAAKlE,CAAC,CAACkE,MAAM,CAAC3D,QAAQ,CAAC,CAAC;IACvD,IAAIkG,IAAI,KAAK,QAAQ,IAAIkD,cAAc,EAAE;MACvCzC,WAAW,CAAC,IAAI,CAAC;MACjB;IACF;IACA;IACA,IAAIlH,CAAC,CAAC4J,GAAG,CAAC9J,IAAI,KAAK,YAAY,EAAE;MAC7BE,CAAC,CAAC4J,GAAG,CAACC,cAAc,CAAC,CAAC;IAC1B;IACAlE,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMmE,GAAG,GAAG9J,CAAC,CAACkE,MAAM,CAAC3D,QAAQ,CAAC,CAAC,CAACwJ,kBAAkB,CAAC,CAAC;IACpD,MAAMC,WAAW,GAAG,GAAGhL,MAAM,CAAC2I,EAAE,IAAImB,IAAI,CAACmB,GAAG,CAAC,CAAC,EAAE;IAChDpE,eAAe,CAACnG,OAAO,GAAGsK,WAAW;IACrC9C,WAAW,CAAC,IAAI,CAAC;IAEjB,IAAIc,SAAS;IACb;IACA,QAAQvB,IAAI;MACV,KAAK,KAAK;MACV,KAAK,QAAQ;MACb,KAAK,QAAQ;MACb,KAAK,aAAa;MAClB,KAAK,QAAQ;QACX,IAAIyD,kBAAkB,GAAGzD,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAGE,WAAW;QACpE,IAAIwD,kBAAkB,GAAG1D,IAAI,KAAK,QAAQ,GAAGI,WAAW,GAAG,EAAE,GAAGA,WAAW;QAC3E,IAAIuD,cAAc,GAAG3D,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAGU,YAAY,CAAC,CAAC;QAC7D,IAAIkD,cAAc,GAAGhD,OAAO;QAC5B,IAAIiD,WAAW,GAAG,EAAE;QAEpB,IAAI7D,IAAI,KAAK,QAAQ,EAAE;UACrB2D,cAAc,GAAG,GAAG,CAAC,CAAC;UACtBD,kBAAkB,GAAG5G,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEqD,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;UACpDwD,cAAc,GAAG,MAAM,CAAC,CAAC;QAC3B,CAAC,MAAM,IAAI5D,IAAI,KAAK,QAAQ,EAAE;UAC5B6D,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAC1B,CAAC,MAAM,IAAI7D,IAAI,KAAK,aAAa,EAAE;UACjC0D,kBAAkB,GAAG5G,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEqD,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC;UACrDwD,cAAc,GAAG,QAAQ,CAAC,CAAC;UAC3BC,WAAW,GAAG,EAAE,CAAC,CAAC;QACpB;QAEAtC,SAAS,GAAG;UACVL,EAAE,EAAEqC,WAAW;UACflK,IAAI,EAAE,MAAM;UACZwI,MAAM,EAAE,CAACwB,GAAG,CAACtI,CAAC,EAAEsI,GAAG,CAACxI,CAAC,CAAC;UACtBiJ,MAAM,EAAEL,kBAAkB;UAC1BrD,WAAW,EAAEsD,kBAAkB;UAC/BK,OAAO,EAAEJ,cAAc;UACvB/C,OAAO,EAAEgD,cAAc;UACvBI,IAAI,EAAEH,WAAW;UACjB7D,IAAI,EAAEA,IAAI,CAAC;QACb,CAAC;QACD;MACF,KAAK,MAAM;QACTuB,SAAS,GAAG;UAAEL,EAAE,EAAEqC,WAAW;UAAElK,IAAI,EAAE,MAAM;UAAE0B,CAAC,EAAEsI,GAAG,CAACtI,CAAC;UAAEF,CAAC,EAAEwI,GAAG,CAACxI,CAAC;UAAEG,KAAK,EAAE,CAAC;UAAEC,MAAM,EAAE,CAAC;UAAE6I,MAAM,EAAE5D,WAAW;UAAEE,WAAW,EAAEA,WAAW;UAAE5E,IAAI,EAAE8E,SAAS;UAAEyD,OAAO,EAAErD;QAAa,CAAC;QAC7K;MACF,KAAK,QAAQ;QACXa,SAAS,GAAG;UAAEL,EAAE,EAAEqC,WAAW;UAAElK,IAAI,EAAE,QAAQ;UAAE0B,CAAC,EAAEsI,GAAG,CAACtI,CAAC;UAAEF,CAAC,EAAEwI,GAAG,CAACxI,CAAC;UAAEqD,MAAM,EAAE,CAAC;UAAE4F,MAAM,EAAE5D,WAAW;UAAEE,WAAW,EAAEA,WAAW;UAAE5E,IAAI,EAAE8E,SAAS;UAAEyD,OAAO,EAAErD;QAAa,CAAC;QACrK;MACF,KAAK,MAAM;QACT;QACAa,SAAS,GAAG;UACVL,EAAE,EAAEqC,WAAW;UACflK,IAAI,EAAE,MAAM;UACZ0B,CAAC,EAAEsI,GAAG,CAACtI,CAAC;UACRF,CAAC,EAAEwI,GAAG,CAACxI,CAAC;UACRJ,IAAI,EAAE,sBAAsB;UAC5BS,QAAQ,EAAE,EAAE;UACZE,UAAU,EAAE,OAAO;UAAE;UACrB0I,MAAM,EAAE5D,WAAW;UAAE;UACrB1E,IAAI,EAAE0E,WAAW;UAAI;UACrBlF,KAAK,EAAE,GAAG;UAAW;UACrBC,MAAM,EAAE,EAAE;UAAW;UACrBiB,QAAQ,EAAE,CAAC;UACX6H,OAAO,EAAErD;QACX,CAAC;QACDxB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACrB3G,MAAM,CAACuI,IAAI,CAAC,cAAc,EAAE;UAAEjC,QAAQ;UAAEoF,MAAM,EAAE1C;QAAU,CAAC,CAAC;QAC5DvC,iBAAiB,CAAEwC,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAED,SAAS,CAAC,CAAC;QAC/Dd,WAAW,CAAC8C,WAAW,CAAC,CAAC,CAAC;QAC1B;MAAQ;MACV,KAAK,QAAQ;QAAErE,YAAY,CAAC,KAAK,CAAC;QAAE;MACpC;QAAS;IACX;IACAF,iBAAiB,CAAEwC,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAED,SAAS,CAAC,CAAC;IAC/DhJ,MAAM,CAACuI,IAAI,CAAC,cAAc,EAAE;MAAEjC,QAAQ;MAAEoF,MAAM,EAAE1C;IAAU,CAAC,CAAC;EAC9D,CAAC;;EAED;EACA,MAAM2C,eAAe,GAAI3K,CAAC,IAAK;IAC7B,IAAI,CAAC0F,SAAS,EAAE;MAAE;IAAQ;IAC1B;IACA,IAAI1F,CAAC,CAAC4J,GAAG,CAAC9J,IAAI,KAAK,WAAW,EAAE;MAC5BE,CAAC,CAAC4J,GAAG,CAACC,cAAc,CAAC,CAAC;IAC1B;IACA,MAAMe,KAAK,GAAG5K,CAAC,CAACkE,MAAM,CAAC3D,QAAQ,CAAC,CAAC;IAAE,MAAMsK,KAAK,GAAGD,KAAK,CAACb,kBAAkB,CAAC,CAAC;IAC3E,IAAIe,aAAa,GAAGtF,cAAc,CAACuF,IAAI,CAAC1C,GAAG,IAAIA,GAAG,CAACV,EAAE,KAAK9B,eAAe,CAACnG,OAAO,CAAC;IAElF,IAAIoL,aAAa,EAAE;MACjB,MAAME,UAAU,GAAG,CAAC,GAAGxF,cAAc,CAAC;MAAE,MAAMyF,KAAK,GAAGD,UAAU,CAACE,SAAS,CAAC7C,GAAG,IAAIA,GAAG,CAACV,EAAE,KAAKmD,aAAa,CAACnD,EAAE,CAAC;MAC9G,QAAQmD,aAAa,CAAChL,IAAI;QACxB,KAAK,MAAM;UACTgL,aAAa,CAACxC,MAAM,GAAGwC,aAAa,CAACxC,MAAM,CAACC,MAAM,CAAC,CAACsC,KAAK,CAACrJ,CAAC,EAAEqJ,KAAK,CAACvJ,CAAC,CAAC,CAAC;UACtE0J,UAAU,CAACC,KAAK,CAAC,GAAGH,aAAa;UACjCrF,iBAAiB,CAACuF,UAAU,CAAC;UAC7B;UACAhM,MAAM,CAACuI,IAAI,CAAC,SAAS,EAAE;YAAEjC,QAAQ;YAAE4C,QAAQ,EAAErC,eAAe,CAACnG,OAAO;YAAEyI,SAAS,EAAE,CAAC0C,KAAK,CAACrJ,CAAC,EAAEqJ,KAAK,CAACvJ,CAAC;UAAE,CAAC,CAAC;UACtG;QACF,KAAK,MAAM;UACT,MAAM6J,SAAS,GAAG5H,IAAI,CAAC6H,GAAG,CAACN,aAAa,CAACtJ,CAAC,EAAEqJ,KAAK,CAACrJ,CAAC,CAAC;UAAE,MAAM6J,SAAS,GAAG9H,IAAI,CAAC6H,GAAG,CAACN,aAAa,CAACxJ,CAAC,EAAEuJ,KAAK,CAACvJ,CAAC,CAAC;UAC1G,MAAMgK,aAAa,GAAG/H,IAAI,CAACgI,GAAG,CAACV,KAAK,CAACrJ,CAAC,GAAGsJ,aAAa,CAACtJ,CAAC,CAAC;UAAE,MAAMgK,cAAc,GAAGjI,IAAI,CAACgI,GAAG,CAACV,KAAK,CAACvJ,CAAC,GAAGwJ,aAAa,CAACxJ,CAAC,CAAC;UACrHwJ,aAAa,GAAG;YAAE,GAAGA,aAAa;YAAEtJ,CAAC,EAAE2J,SAAS;YAAE7J,CAAC,EAAE+J,SAAS;YAAE5J,KAAK,EAAE6J,aAAa;YAAE5J,MAAM,EAAE8J;UAAe,CAAC;UAAER,UAAU,CAACC,KAAK,CAAC,GAAGH,aAAa;UAAE9L,MAAM,CAACuI,IAAI,CAAC,cAAc,EAAE;YAAEjC,QAAQ;YAAE4C,QAAQ,EAAErC,eAAe,CAACnG,OAAO;YAAE+I,aAAa,EAAE;cAAEjH,CAAC,EAAE2J,SAAS;cAAE7J,CAAC,EAAE+J,SAAS;cAAE5J,KAAK,EAAE6J,aAAa;cAAE5J,MAAM,EAAE8J;YAAe;UAAE,CAAC,CAAC;UAAE/F,iBAAiB,CAACuF,UAAU,CAAC;UAAE;QAC/V,KAAK,QAAQ;UACX,MAAMS,gBAAgB,GAAGlI,IAAI,CAACmI,IAAI,CAACnI,IAAI,CAACoI,GAAG,CAACd,KAAK,CAACrJ,CAAC,GAAGsJ,aAAa,CAACtJ,CAAC,EAAE,CAAC,CAAC,GAAG+B,IAAI,CAACoI,GAAG,CAACd,KAAK,CAACvJ,CAAC,GAAGwJ,aAAa,CAACxJ,CAAC,EAAE,CAAC,CAAC,CAAC;UACnHwJ,aAAa,GAAG;YAAE,GAAGA,aAAa;YAAEnG,MAAM,EAAE8G;UAAiB,CAAC;UAAET,UAAU,CAACC,KAAK,CAAC,GAAGH,aAAa;UAAE9L,MAAM,CAACuI,IAAI,CAAC,cAAc,EAAE;YAAEjC,QAAQ;YAAE4C,QAAQ,EAAErC,eAAe,CAACnG,OAAO;YAAE+I,aAAa,EAAE;cAAE9D,MAAM,EAAE8G;YAAiB;UAAE,CAAC,CAAC;UAAEhG,iBAAiB,CAACuF,UAAU,CAAC;UAAE;QAC/P;UAAS;MACX;IACF;EACF,CAAC;EAED,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1BjG,YAAY,CAAC,KAAK,CAAC;IACnB,IAAIc,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,MAAM,EAAE;MAAE;MAC1C,MAAMoF,WAAW,GAAGrG,cAAc,CAACuF,IAAI,CAAC1C,GAAG,IAAIA,GAAG,CAACV,EAAE,KAAK9B,eAAe,CAACnG,OAAO,CAAC;MAClF,IAAImM,WAAW,EAAE;QAAE7M,MAAM,CAACuI,IAAI,CAAC,YAAY,EAAE;UAAEjC,QAAQ;UAAE4C,QAAQ,EAAErC,eAAe,CAACnG,OAAO;UAAE8I,gBAAgB,EAAEqD;QAAY,CAAC,CAAC;MAAE;IAChI;IACAhG,eAAe,CAACnG,OAAO,GAAG,IAAI;EAChC,CAAC;EAED,MAAMoM,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAI9F,cAAc,CAAC+F,IAAI,CAAC,CAAC,EAAE;MAAE/M,MAAM,CAACuI,IAAI,CAAC,aAAa,EAAE;QAAEjC,QAAQ;QAAEoD,OAAO,EAAE1C,cAAc,CAAC+F,IAAI,CAAC;MAAE,CAAC,CAAC;MAAE9F,iBAAiB,CAAC,EAAE,CAAC;IAAE;EAChI,CAAC;EACD,MAAM+F,kBAAkB,GAAIhM,CAAC,IAAK;IAAE,IAAIA,CAAC,CAACoD,GAAG,KAAK,OAAO,EAAE;MAAE0I,qBAAqB,CAAC,CAAC;IAAE;EAAE,CAAC;EACzF,MAAMG,qBAAqB,GAAGA,CAAA,KAAM;IAAE,IAAI5F,MAAM,CAAC6F,OAAO,CAAC,8EAA8E,CAAC,EAAE;MAAElN,MAAM,CAACuI,IAAI,CAAC,iBAAiB,EAAEjC,QAAQ,CAAC;IAAE;EAAE,CAAC;EACzL,MAAM6G,eAAe,GAAGA,CAAA,KAAM;IAAE,IAAI9F,MAAM,CAAC6F,OAAO,CAAC,oGAAoG,CAAC,EAAE;MAAElN,MAAM,CAACuI,IAAI,CAAC,WAAW,EAAEjC,QAAQ,CAAC;MAAEC,QAAQ,CAAC,GAAG,CAAC;MAAEqC,KAAK,CAAC,yBAAyB,CAAC;IAAE;EAAE,CAAC;EAEpP,MAAMwE,cAAc,GAAGA,CAAA,KAAM;IAC3B,QAAQ3F,IAAI;MACV,KAAK,KAAK;MAAE,KAAK,QAAQ;MAAE,KAAK,MAAM;MAAE,KAAK,QAAQ;MAAE,KAAK,QAAQ;MAAE,KAAK,QAAQ;MAAE,KAAK,aAAa;QAAE,OAAO,WAAW;MAC3H,KAAK,MAAM;QAAE,OAAO,MAAM;MAAE,KAAK,QAAQ;QAAE,OAAOQ,UAAU,GAAG,MAAM,GAAG,SAAS;MACjF;QAAS,OAAO,SAAS;IAC3B;EACF,CAAC;EAED,oBACEpI,OAAA;IAAKwN,SAAS,EAAC,2BAA2B;IAAAtH,QAAA,gBACxClG,OAAA;MAAKwN,SAAS,EAAC,yBAAyB;MAAAtH,QAAA,gBACtClG,OAAA;QAAKwN,SAAS,EAAC,QAAQ;QAAAtH,QAAA,gBACrBlG,OAAA;UAAAkG,QAAA,GAAI,mBAAiB,eAAAlG,OAAA;YAAMwN,SAAS,EAAC,WAAW;YAAAtH,QAAA,EAAEO;UAAQ;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvE7F,OAAA;UAAQ8E,OAAO,EAAEA,CAAA,KAAM4B,QAAQ,CAAC,GAAG,CAAE;UAAC8G,SAAS,EAAC,cAAc;UAAAtH,QAAA,EAAC;QAE/D;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGN7F,OAAA;QAAKwN,SAAS,EAAC,cAAc;QAAAtH,QAAA,gBAG3BlG,OAAA;UAAKwN,SAAS,EAAC,8BAA8B;UAAAtH,QAAA,eAC3ClG,OAAA;YAAQwN,SAAS,EAAE,eAAe5F,IAAI,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAC9C,OAAO,EAAEA,CAAA,KAAM;cAAE+C,OAAO,CAAC,QAAQ,CAAC;cAAEQ,WAAW,CAAC,IAAI,CAAC;YAAE,CAAE;YAACoF,KAAK,EAAC,eAAe;YAAAvH,QAAA,gBACpJlG,OAAA;cAAMwN,SAAS,EAAC;YAAM;cAAA9H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,WAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN7F,OAAA;UAAKwN,SAAS,EAAC;QAAgB;UAAA9H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAGtC7F,OAAA;UAAKwN,SAAS,EAAC,YAAY;UAAAtH,QAAA,gBACzBlG,OAAA;YAAQwN,SAAS,EAAE,eAAe5F,IAAI,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAC9C,OAAO,EAAEA,CAAA,KAAM+C,OAAO,CAAC,KAAK,CAAE;YAAC4F,KAAK,EAAC,KAAK;YAAAvH,QAAA,gBAC5GlG,OAAA;cAAMwN,SAAS,EAAC;YAAM;cAAA9H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,QAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7F,OAAA;YAAQwN,SAAS,EAAE,eAAe5F,IAAI,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAC9C,OAAO,EAAEA,CAAA,KAAM+C,OAAO,CAAC,QAAQ,CAAE;YAAC4F,KAAK,EAAC,QAAQ;YAAAvH,QAAA,gBACrHlG,OAAA;cAAMwN,SAAS,EAAC;YAAM;cAAA9H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,WAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7F,OAAA;YAAQwN,SAAS,EAAE,eAAe5F,IAAI,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAC9C,OAAO,EAAEA,CAAA,KAAM+C,OAAO,CAAC,QAAQ,CAAE;YAAC4F,KAAK,EAAC,aAAa;YAAAvH,QAAA,gBAC1HlG,OAAA;cAAMwN,SAAS,EAAC;YAAM;cAAA9H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,WAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7F,OAAA;YAAQwN,SAAS,EAAE,eAAe5F,IAAI,KAAK,aAAa,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAC9C,OAAO,EAAEA,CAAA,KAAM+C,OAAO,CAAC,aAAa,CAAE;YAAC4F,KAAK,EAAC,iBAAiB;YAAAvH,QAAA,gBACxIlG,OAAA;cAAMwN,SAAS,EAAC;YAAM;cAAA9H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,gBAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN7F,OAAA;UAAKwN,SAAS,EAAC;QAAgB;UAAA9H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAGtC7F,OAAA;UAAKwN,SAAS,EAAC,YAAY;UAAAtH,QAAA,gBACzBlG,OAAA;YAAQwN,SAAS,EAAE,eAAe5F,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAC9C,OAAO,EAAEA,CAAA,KAAM+C,OAAO,CAAC,MAAM,CAAE;YAAC4F,KAAK,EAAC,WAAW;YAAAvH,QAAA,gBACpHlG,OAAA;cAAMwN,SAAS,EAAC;YAAM;cAAA9H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,cAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7F,OAAA;YAAQwN,SAAS,EAAE,eAAe5F,IAAI,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAC9C,OAAO,EAAEA,CAAA,KAAM+C,OAAO,CAAC,QAAQ,CAAE;YAAC4F,KAAK,EAAC,QAAQ;YAAAvH,QAAA,gBACrHlG,OAAA;cAAMwN,SAAS,EAAC;YAAM;cAAA9H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,WAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7F,OAAA;YAAQwN,SAAS,EAAE,eAAe5F,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAC9C,OAAO,EAAEA,CAAA,KAAM+C,OAAO,CAAC,MAAM,CAAE;YAAC4F,KAAK,EAAC,MAAM;YAAAvH,QAAA,gBAC/GlG,OAAA;cAAMwN,SAAS,EAAC;YAAM;cAAA9H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,SAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN7F,OAAA;UAAKwN,SAAS,EAAC;QAAgB;UAAA9H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAGtC7F,OAAA;UAAKwN,SAAS,EAAC,kCAAkC;UAAAtH,QAAA,gBAC/ClG,OAAA;YAAKwN,SAAS,EAAC,oBAAoB;YAAAtH,QAAA,gBACjClG,OAAA;cAAO0N,OAAO,EAAC,qBAAqB;cAACF,SAAS,EAAC,YAAY;cAAAtH,QAAA,EAAC;YAAO;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3E7F,OAAA;cAAOiB,IAAI,EAAC,OAAO;cAAC6H,EAAE,EAAC,qBAAqB;cAAC0E,SAAS,EAAC,cAAc;cAACpL,KAAK,EAAE0F,WAAY;cAACtH,QAAQ,EAAGW,CAAC,IAAK;gBAAE4G,cAAc,CAAC5G,CAAC,CAACkE,MAAM,CAACjD,KAAK,CAAC;gBAAE,IAAIwF,IAAI,KAAK,QAAQ,IAAI,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC+F,QAAQ,CAAC/F,IAAI,CAAC,EAAEC,OAAO,CAAC,KAAK,CAAC;cAAE,CAAE;cAAC4F,KAAK,EAAC;YAAc;cAAA/H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzP,CAAC,eAEN7F,OAAA;YAAKwN,SAAS,EAAC,oBAAoB;YAAAtH,QAAA,gBACjClG,OAAA;cAAO0N,OAAO,EAAC,mBAAmB;cAACF,SAAS,EAAC,YAAY;cAAAtH,QAAA,EAAC;YAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvE7F,OAAA;cAAOiB,IAAI,EAAC,OAAO;cAAC6H,EAAE,EAAC,mBAAmB;cAAC0E,SAAS,EAAC,cAAc;cAACpL,KAAK,EAAE8F,SAAU;cAAC1H,QAAQ,EAAGW,CAAC,IAAK;gBAAEgH,YAAY,CAAChH,CAAC,CAACkE,MAAM,CAACjD,KAAK,CAAC;gBAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,CAAC,CAACuL,QAAQ,CAAC/F,IAAI,CAAC,EAAE;kBAAEC,OAAO,CAAC,MAAM,CAAC;gBAAE;cAAE,CAAE;cAAC4F,KAAK,EAAC;YAAY;cAAA/H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1P,CAAC,eAEN7F,OAAA;YAAKwN,SAAS,EAAC,qCAAqC;YAAAtH,QAAA,gBAClDlG,OAAA;cAAO0N,OAAO,EAAC,qBAAqB;cAACF,SAAS,EAAC,YAAY;cAAAtH,QAAA,EAAC;YAAM;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1E7F,OAAA;cAAOiB,IAAI,EAAC,OAAO;cAAC6H,EAAE,EAAC,qBAAqB;cAACyD,GAAG,EAAC,GAAG;cAAC5H,GAAG,EAAC,IAAI;cAACvC,KAAK,EAAE4F,WAAY;cAACxH,QAAQ,EAAGW,CAAC,IAAK8G,cAAc,CAAC2F,QAAQ,CAACzM,CAAC,CAACkE,MAAM,CAACjD,KAAK,EAAE,EAAE,CAAC,CAAE;cAACoL,SAAS,EAAC,qBAAqB;cAACC,KAAK,EAAE,iBAAiBzF,WAAW;YAAK;cAAAtC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC5N7F,OAAA;cAAMwN,SAAS,EAAC,sBAAsB;cAAAtH,QAAA,GAAE8B,WAAW,EAAC,IAAE;YAAA;cAAAtC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,EAEL+B,IAAI,KAAK,QAAQ,iBAChB5H,OAAA;YAAKwN,SAAS,EAAC,qCAAqC;YAAAtH,QAAA,gBAClDlG,OAAA;cAAO0N,OAAO,EAAC,sBAAsB;cAACF,SAAS,EAAC,YAAY;cAAAtH,QAAA,EAAC;YAAQ;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7E7F,OAAA;cAAOiB,IAAI,EAAC,OAAO;cAAC6H,EAAE,EAAC,sBAAsB;cAACyD,GAAG,EAAC,KAAK;cAAC5H,GAAG,EAAC,KAAK;cAACkJ,IAAI,EAAC,MAAM;cAACzL,KAAK,EAAEkG,YAAa;cAAC9H,QAAQ,EAAGW,CAAC,IAAKoH,eAAe,CAACuF,UAAU,CAAC3M,CAAC,CAACkE,MAAM,CAACjD,KAAK,CAAC,CAAE;cAACoL,SAAS,EAAC,qBAAqB;cAACC,KAAK,EAAE,YAAY/I,IAAI,CAACqJ,KAAK,CAACzF,YAAY,GAAG,GAAG,CAAC;YAAI;cAAA5C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACzP7F,OAAA;cAAMwN,SAAS,EAAC,sBAAsB;cAAAtH,QAAA,GAAExB,IAAI,CAACqJ,KAAK,CAACzF,YAAY,GAAG,GAAG,CAAC,EAAC,GAAC;YAAA;cAAA5C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5E,CACN,EAEA,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC8H,QAAQ,CAAC/F,IAAI,CAAC,iBACxD5H,OAAA;YAAKwN,SAAS,EAAC,oBAAoB;YAAAtH,QAAA,gBACjClG,OAAA;cAAO0N,OAAO,EAAC,iBAAiB;cAACF,SAAS,EAAC,YAAY;cAAAtH,QAAA,EAAC;YAAI;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpE7F,OAAA;cAAQ8I,EAAE,EAAC,iBAAiB;cAAC1G,KAAK,EAAEoG,OAAQ;cAAChI,QAAQ,EAAGW,CAAC,IAAKsH,UAAU,CAACtH,CAAC,CAACkE,MAAM,CAACjD,KAAK,CAAE;cAACoL,SAAS,EAAC,aAAa;cAAAtH,QAAA,gBAC/GlG,OAAA;gBAAQoC,KAAK,EAAC,OAAO;gBAAA8D,QAAA,EAAC;cAAK;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpC7F,OAAA;gBAAQoC,KAAK,EAAC,MAAM;gBAAA8D,QAAA,EAAC;cAAI;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClC7F,OAAA;gBAAQoC,KAAK,EAAC,QAAQ;gBAAA8D,QAAA,EAAC;cAAM;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEN7F,OAAA;UAAKwN,SAAS,EAAC;QAAgB;UAAA9H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAGtC7F,OAAA;UAAKwN,SAAS,EAAC,YAAY;UAAAtH,QAAA,gBACzBlG,OAAA;YAAQwN,SAAS,EAAE,eAAe5F,IAAI,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAC9C,OAAO,EAAEA,CAAA,KAAM+C,OAAO,CAAC,QAAQ,CAAE;YAAC4F,KAAK,EAAC,QAAQ;YAAAvH,QAAA,gBACrHlG,OAAA;cAAMwN,SAAS,EAAC;YAAM;cAAA9H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,WAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7F,OAAA;YAAQwN,SAAS,EAAC,aAAa;YAAC1I,OAAO,EAAEsI,qBAAsB;YAACK,KAAK,EAAC,WAAW;YAAAvH,QAAA,gBAC/ElG,OAAA;cAAMwN,SAAS,EAAC;YAAM;cAAA9H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,cAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7F,OAAA;YAAQwN,SAAS,EAAC,2BAA2B;YAAC1I,OAAO,EAAEwI,eAAgB;YAACG,KAAK,EAAC,qBAAqB;YAAAvH,QAAA,gBACjGlG,OAAA;cAAMwN,SAAS,EAAC;YAAM;cAAA9H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN7F,OAAA;QAAKwN,SAAS,EAAC,6BAA6B;QAACtI,GAAG,EAAEyC,kBAAmB;QAAAzB,QAAA,eACnElG,OAAA,CAACX,KAAK;UACJuD,KAAK,EAAE0E,eAAe,CAAC1E,KAAM;UAACC,MAAM,EAAEyE,eAAe,CAACzE,MAAO;UAC7DmL,WAAW,EAAEnD,eAAgB;UAACoD,WAAW,EAAEnC,eAAgB;UAACoC,SAAS,EAAEnB,aAAc;UACrFoB,YAAY,EAAEtD,eAAgB;UAACuD,WAAW,EAAEtC,eAAgB;UAACuC,UAAU,EAAEtB,aAAc;UACvF7H,GAAG,EAAE6B,QAAS;UACdzE,KAAK,EAAE;YACHgM,MAAM,EAAEf,cAAc,CAAC,CAAC;YACxBgB,eAAe,EAAE,OAAO;YACxBC,WAAW,EAAE;UACjB,CAAE;UAAAtI,QAAA,eAEFlG,OAAA,CAACV,KAAK;YAAA4G,QAAA,EACHS,cAAc,CAAC4C,GAAG,CAAEC,GAAG,IAAK;cAC3B,IAAIA,GAAG,CAACvI,IAAI,KAAK,MAAM,EAAE;gBACvB,oBACEjB,OAAA,CAACT,IAAI;kBAEHkK,MAAM,EAAED,GAAG,CAACC,MAAO;kBACnBiC,MAAM,EAAElC,GAAG,CAACkC,MAAO;kBACnB1D,WAAW,EAAEwB,GAAG,CAACxB,WAAY;kBAC7B2D,OAAO,EAAEnC,GAAG,CAACmC,OAAO,IAAI,GAAI;kBAC5BnD,OAAO,EAAEgB,GAAG,CAAChB,OAAO,IAAI,OAAQ;kBAChCiG,QAAQ,EAAC,OAAO;kBAChB7C,IAAI,EAAEpC,GAAG,CAACoC,IAAI,IAAI,EAAG;kBACrB8C,OAAO,EAAE,GAAI;kBACbC,wBAAwB,EAAEnF,GAAG,CAAC5B,IAAI,KAAK,QAAQ,GAAG,iBAAiB,GAAG;gBAAc,GAT/E4B,GAAG,CAACV,EAAE;kBAAApD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAUZ,CAAC;cAEN,CAAC,MAAM;gBACL,oBACE7F,OAAA,CAACI,WAAW;kBACGC,UAAU,EAAEmJ,GAAI;kBAAClJ,UAAU,EAAEkJ,GAAG,CAACV,EAAE,KAAKV,UAAW;kBAChE7H,QAAQ,EAAEA,CAAA,KAAM;oBAAE8H,WAAW,CAACmB,GAAG,CAACV,EAAE,CAAC;oBAAEjB,OAAO,CAAC,QAAQ,CAAC;kBAAE,CAAE;kBAC5DrH,QAAQ,EAAEmK,kBAAmB;kBAAClK,UAAU,EAAEmH;gBAAK,GAF1C4B,GAAG,CAACV,EAAE;kBAAApD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEsC,CAAC;cAExD;YACF,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN7F,OAAA;QAAGwN,SAAS,EAAC,yBAAyB;QAAAtH,QAAA,EAAC;MAA4C;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CAAC,eAEN7F,OAAA;MAAKwN,SAAS,EAAC,cAAc;MAAAtH,QAAA,gBAC3BlG,OAAA;QAAAkG,QAAA,EAAI;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB7F,OAAA;QAAKwN,SAAS,EAAC,eAAe;QAAAtH,QAAA,GAC3Be,YAAY,CAACsC,GAAG,CAAC,CAACqF,GAAG,EAAExC,KAAK,kBAC3BpM,OAAA;UAAiBwN,SAAS,EAAC,cAAc;UAAAtH,QAAA,gBACvClG,OAAA;YAAMwN,SAAS,EAAC,eAAe;YAAAtH,QAAA,GAAE0I,GAAG,CAAC7E,QAAQ,EAAC,GAAC;UAAA;YAAArE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KAAC,EAAC+I,GAAG,CAAC/E,OAAO,eACnE7J,OAAA;YAAMwN,SAAS,EAAC,gBAAgB;YAAAtH,QAAA,EAAE,IAAI+D,IAAI,CAAC2E,GAAG,CAAC5E,SAAS,CAAC,CAAC6E,kBAAkB,CAAC,EAAE,EAAE;cAAEC,IAAI,EAAE,SAAS;cAAEC,MAAM,EAAE;YAAU,CAAC;UAAC;YAAArJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAFxHuG,KAAK;UAAA1G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACN,CAAC,eACF7F,OAAA;UAAKkF,GAAG,EAAEmC;QAAmB;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACN7F,OAAA;QAAKwN,SAAS,EAAC,kBAAkB;QAAAtH,QAAA,gBAC/BlG,OAAA;UAAOiB,IAAI,EAAC,MAAM;UAAC+N,WAAW,EAAC,sBAAsB;UAAC5M,KAAK,EAAE+E,cAAe;UAAC3G,QAAQ,EAAGW,CAAC,IAAKiG,iBAAiB,CAACjG,CAAC,CAACkE,MAAM,CAACjD,KAAK,CAAE;UAAC6M,UAAU,EAAE9B,kBAAmB;UAACK,SAAS,EAAC;QAAY;UAAA9H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1L7F,OAAA;UAAQ8E,OAAO,EAAEmI,qBAAsB;UAACO,SAAS,EAAC,aAAa;UAAAtH,QAAA,EAAC;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACW,GAAA,CA/dQD,cAAc;EAAA,QACA3G,SAAS,EACbC,WAAW;AAAA;AAAAqP,GAAA,GAFrB3I,cAAc;AAievB,eAAeA,cAAc;AAAC,IAAAD,EAAA,EAAA4I,GAAA;AAAAC,YAAA,CAAA7I,EAAA;AAAA6I,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}