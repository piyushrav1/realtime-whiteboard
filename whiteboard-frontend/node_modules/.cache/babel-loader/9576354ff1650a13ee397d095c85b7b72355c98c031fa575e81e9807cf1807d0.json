{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gamin\\\\OneDrive\\\\Desktop\\\\Project\\\\Whiteboard\\\\live-whiteboard-app\\\\whiteboard-frontend\\\\src\\\\components\\\\WhiteboardRoom.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// whiteboard-frontend/src/components/WhiteboardRoom.js\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Stage, Layer, Line, Rect, Circle, Text, Transformer } from 'react-konva';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport './WhiteboardRoom.css';\n\n// IMPORTANT: Make sure YOUR_PC_IP_ADDRESS is replaced with your actual PC's IP.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://YOUR_PC_IP_ADDRESS:5000');\n\n// Helper component for selectable/transformable Konva nodes (unchanged, as touch-action is on Stage)\nconst ColoredRect = ({\n  shapeProps,\n  isSelected,\n  onSelect,\n  onChange,\n  activeTool\n}) => {\n  _s();\n  const shapeRef = useRef();\n  const trRef = useRef();\n  useEffect(() => {\n    if (isSelected && trRef.current && shapeRef.current) {\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    } else if (!isSelected && trRef.current) {\n      trRef.current.nodes([]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected, shapeProps.type]);\n  const handleDblClick = e => {\n    onSelect();\n    if (shapeProps.type === 'text') {\n      setTimeout(() => {\n        if (trRef.current) {\n          trRef.current.nodes([]);\n          trRef.current.getLayer().batchDraw();\n        }\n        const textNode = shapeRef.current;\n        if (!textNode) return;\n        textNode.hide();\n        textNode.getLayer().batchDraw();\n        const textPosition = textNode.absolutePosition();\n        const stageBox = textNode.getStage().container().getBoundingClientRect();\n        const textarea = document.createElement('textarea');\n        document.body.appendChild(textarea);\n        textarea.value = textNode.text();\n        textarea.style.position = 'absolute';\n        textarea.style.top = textPosition.y + stageBox.top + 'px';\n        textarea.style.left = textPosition.x + stageBox.left + 'px';\n        textarea.style.width = textNode.width() - textNode.padding() * 2 + 'px';\n        textarea.style.height = textNode.height() - textNode.padding() * 2 + 5 + 'px';\n        textarea.style.fontSize = textNode.fontSize() + 'px';\n        textarea.style.border = 'none';\n        textarea.style.padding = '0px';\n        textarea.style.margin = '0px';\n        textarea.style.overflow = 'hidden';\n        textarea.style.background = 'none';\n        textarea.style.outline = 'none';\n        textarea.style.resize = 'none';\n        textarea.style.lineHeight = textNode.lineHeight();\n        textarea.style.fontFamily = textNode.fontFamily();\n        textarea.style.transformOrigin = 'left top';\n        textarea.style.textAlign = textNode.align();\n        textarea.style.color = textNode.fill();\n        textarea.style.transform = `rotateZ(${textNode.rotation()}deg)`;\n        textarea.style.zIndex = '9999';\n        textarea.focus();\n        const removeTextarea = () => {\n          document.body.removeChild(textarea);\n          textNode.show();\n          textNode.getLayer().batchDraw();\n        };\n        textarea.addEventListener('keydown', e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            textarea.blur();\n          }\n          if (e.key === 'Escape') {\n            removeTextarea();\n          }\n        });\n        textarea.addEventListener('blur', () => {\n          onChange({\n            ...shapeProps,\n            text: textarea.value\n          });\n          removeTextarea();\n        });\n      }, 0);\n    }\n  };\n  const currentKonvaNode = shapeProps.type === 'rect' ? /*#__PURE__*/_jsxDEV(Rect, {\n    onClick: onSelect,\n    onTap: onSelect,\n    onDblClick: handleDblClick,\n    onDblTap: handleDblClick,\n    ref: shapeRef,\n    ...shapeProps,\n    draggable: activeTool === 'select',\n    onDragEnd: e => {\n      onChange({\n        ...shapeProps,\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    },\n    onTransformEnd: e => {\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY();\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange({\n        ...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        width: Math.max(5, node.width() * scaleX),\n        height: Math.max(5, node.height() * scaleY),\n        rotation: node.rotation()\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this) : shapeProps.type === 'circle' ? /*#__PURE__*/_jsxDEV(Circle, {\n    onClick: onSelect,\n    onTap: onSelect,\n    onDblClick: handleDblClick,\n    onDblTap: handleDblClick,\n    ref: shapeRef,\n    ...shapeProps,\n    draggable: activeTool === 'select',\n    onDragEnd: e => {\n      onChange({\n        ...shapeProps,\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    },\n    onTransformEnd: e => {\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange({\n        ...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        radius: Math.max(5, node.radius() * scaleX),\n        rotation: node.rotation()\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this) : shapeProps.type === 'text' ? /*#__PURE__*/_jsxDEV(Text, {\n    onClick: onSelect,\n    onTap: onSelect,\n    onDblClick: handleDblClick,\n    onDblTap: handleDblClick,\n    ref: shapeRef,\n    ...shapeProps,\n    draggable: activeTool === 'select',\n    onDragEnd: e => {\n      onChange({\n        ...shapeProps,\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    },\n    onTransformEnd: e => {\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY();\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange({\n        ...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        width: Math.max(5, node.width() * scaleX),\n        height: Math.max(5, node.height() * scaleY),\n        fontSize: Math.max(8, node.fontSize() * scaleX),\n        rotation: node.rotation()\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentKonvaNode, isSelected && currentKonvaNode && /*#__PURE__*/_jsxDEV(Transformer, {\n      ref: trRef,\n      boundBoxFunc: (oldBox, newBox) => {\n        if (newBox.width < 5 || newBox.height < 5) {\n          return oldBox;\n        }\n        return newBox;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ColoredRect, \"utqYnE1qYQB2JA/ZIFXzHjUZTOc=\");\n_c = ColoredRect;\nfunction WhiteboardRoom() {\n  _s2();\n  const {\n    roomName\n  } = useParams();\n  const navigate = useNavigate();\n  const [drawingObjects, setDrawingObjects] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const stageRef = useRef(null);\n  const currentObjectId = useRef(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newChatMessage, setNewChatMessage] = useState('');\n  const chatMessagesEndRef = useRef(null);\n  const [stageDimensions, setStageDimensions] = useState({\n    width: window.innerWidth * 0.7,\n    height: window.innerHeight * 0.8\n  });\n  const canvasContainerRef = useRef(null);\n  const [tool, setTool] = useState('pen');\n  const [strokeColor, setStrokeColor] = useState('#000000');\n  const [strokeWidth, setStrokeWidth] = useState(5);\n  const [fillColor, setFillColor] = useState('transparent');\n  const [selectedId, selectShape] = useState(null);\n  useEffect(() => {\n    if (!roomName) {\n      navigate('/');\n      return;\n    }\n    socket.emit('joinRoom', roomName);\n    socket.on('connect', () => {\n      console.log('Connected to backend Socket.IO:', socket.id);\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from backend Socket.IO');\n      alert('Disconnected from server. Please refresh.');\n      navigate('/');\n    });\n    socket.on('whiteboardState', data => {\n      console.log('Received initial room state:', data);\n      setDrawingObjects(data.lines);\n      setChatMessages(data.messages);\n    });\n    socket.on('drawingStarted', newObject => {\n      setDrawingObjects(prevObjects => [...prevObjects, newObject]);\n    });\n    socket.on('drawing', data => {\n      const {\n        objectId,\n        newPoints\n      } = data;\n      setDrawingObjects(prevObjects => {\n        return prevObjects.map(obj => {\n          if (obj.id === objectId && obj.type === 'line') {\n            return {\n              ...obj,\n              points: obj.points.concat(newPoints)\n            };\n          }\n          return obj;\n        });\n      });\n    });\n    socket.on('drawingFinished', data => {\n      const {\n        objectId,\n        finalObjectState\n      } = data;\n      setDrawingObjects(prevObjects => {\n        return prevObjects.map(obj => {\n          if (obj.id === objectId) {\n            return finalObjectState;\n          }\n          return obj;\n        });\n      });\n    });\n    socket.on('objectUpdated', data => {\n      const {\n        objectId,\n        newAttributes\n      } = data;\n      setDrawingObjects(prevObjects => {\n        return prevObjects.map(obj => {\n          if (obj.id === objectId) {\n            return {\n              ...obj,\n              ...newAttributes\n            };\n          }\n          return obj;\n        });\n      });\n    });\n    socket.on('whiteboardCleared', () => {\n      setDrawingObjects([]);\n      selectShape(null);\n      console.log('Whiteboard cleared by another user.');\n    });\n    socket.on('chatMessage', message => {\n      setChatMessages(prevMessages => [...prevMessages, message]);\n    });\n    socket.on('userJoined', username => {\n      setChatMessages(prevMessages => [...prevMessages, {\n        username: 'System',\n        message: `${username} has joined the room.`,\n        timestamp: new Date()\n      }]);\n    });\n    socket.on('roomDestroyed', destroyedRoomName => {\n      if (destroyedRoomName === roomName) {\n        alert(`Room \"${destroyedRoomName}\" has been closed or automatically destroyed.`);\n        navigate('/');\n      }\n    });\n    const handleResize = () => {\n      if (canvasContainerRef.current) {\n        const {\n          clientWidth,\n          clientHeight\n        } = canvasContainerRef.current;\n        setStageDimensions({\n          width: clientWidth,\n          height: clientHeight\n        });\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('whiteboardState');\n      socket.off('drawingStarted');\n      socket.off('drawing');\n      socket.off('drawingFinished');\n      socket.off('objectUpdated');\n      socket.off('whiteboardCleared');\n      socket.off('chatMessage');\n      socket.off('userJoined');\n      socket.off('roomDestroyed');\n    };\n  }, [roomName, navigate]);\n  useEffect(() => {\n    var _chatMessagesEndRef$c;\n    (_chatMessagesEndRef$c = chatMessagesEndRef.current) === null || _chatMessagesEndRef$c === void 0 ? void 0 : _chatMessagesEndRef$c.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [chatMessages]);\n  const handleObjectChange = useCallback(updatedObject => {\n    setDrawingObjects(prevObjects => {\n      return prevObjects.map(obj => {\n        if (obj.id === updatedObject.id) {\n          return updatedObject;\n        }\n        return obj;\n      });\n    });\n    socket.emit('updateObject', {\n      roomName,\n      objectId: updatedObject.id,\n      newAttributes: updatedObject\n    });\n  }, [roomName]);\n\n  // Re-added e.evt.preventDefault() for touch events\n  const handleMouseDown = e => {\n    const clickedOnEmpty = e.target === e.target.getStage();\n    if (tool === 'select' && clickedOnEmpty) {\n      selectShape(null);\n      return;\n    }\n    // THIS IS THE KEY FIX FOR TOUCHSCREENS\n    if (e.evt.type === 'touchstart') {\n      e.evt.preventDefault();\n    }\n    setIsDrawing(true);\n    const pos = e.target.getStage().getPointerPosition();\n    const newObjectId = `${socket.id}-${Date.now()}`;\n    currentObjectId.current = newObjectId;\n    selectShape(null);\n    let newObject;\n    switch (tool) {\n      case 'pen':\n      case 'eraser':\n        newObject = {\n          id: newObjectId,\n          type: 'line',\n          points: [pos.x, pos.y],\n          stroke: tool === 'eraser' ? '#FFFFFF' : strokeColor,\n          strokeWidth: tool === 'eraser' ? strokeWidth + 10 : strokeWidth,\n          tool: tool\n        };\n        break;\n      case 'rect':\n        newObject = {\n          id: newObjectId,\n          type: 'rect',\n          x: pos.x,\n          y: pos.y,\n          width: 0,\n          height: 0,\n          stroke: strokeColor,\n          strokeWidth: strokeWidth,\n          fill: fillColor\n        };\n        break;\n      case 'circle':\n        newObject = {\n          id: newObjectId,\n          type: 'circle',\n          x: pos.x,\n          y: pos.y,\n          radius: 0,\n          stroke: strokeColor,\n          strokeWidth: strokeWidth,\n          fill: fillColor\n        };\n        break;\n      case 'text':\n        newObject = {\n          id: newObjectId,\n          type: 'text',\n          x: pos.x,\n          y: pos.y,\n          text: 'Double click to edit',\n          fontSize: 20,\n          fontFamily: 'Arial',\n          stroke: strokeColor,\n          fill: strokeColor,\n          width: 200,\n          height: 30,\n          rotation: 0\n        };\n        setIsDrawing(false);\n        socket.emit('startDrawing', {\n          roomName,\n          object: newObject\n        });\n        setDrawingObjects(prevObjects => [...prevObjects, newObject]);\n        selectShape(newObjectId);\n        return;\n      case 'select':\n        setIsDrawing(false);\n        return;\n      default:\n        return;\n    }\n    setDrawingObjects(prevObjects => [...prevObjects, newObject]);\n    socket.emit('startDrawing', {\n      roomName,\n      object: newObject\n    });\n  };\n\n  // Re-added e.evt.preventDefault() for touch events\n  const handleMouseMove = e => {\n    if (!isDrawing) {\n      return;\n    }\n    // THIS IS THE KEY FIX FOR TOUCHSCREENS\n    if (e.evt.type === 'touchmove') {\n      e.evt.preventDefault();\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let currentObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\n    if (currentObject) {\n      const newObjects = [...drawingObjects];\n      const index = newObjects.findIndex(obj => obj.id === currentObject.id);\n      switch (currentObject.type) {\n        case 'line':\n          currentObject.points = currentObject.points.concat([point.x, point.y]);\n          newObjects[index] = currentObject;\n          setDrawingObjects(newObjects);\n          socket.emit('drawing', {\n            roomName,\n            objectId: currentObjectId.current,\n            newPoints: [point.x, point.y]\n          });\n          break;\n        case 'rect':\n          const newX_rect = Math.min(currentObject.x, point.x);\n          const newY_rect = Math.min(currentObject.y, point.y);\n          const newWidth_rect = Math.abs(point.x - currentObject.x);\n          const newHeight_rect = Math.abs(point.y - currentObject.y);\n          currentObject = {\n            ...currentObject,\n            x: newX_rect,\n            y: newY_rect,\n            width: newWidth_rect,\n            height: newHeight_rect\n          };\n          newObjects[index] = currentObject;\n          setDrawingObjects(newObjects);\n          socket.emit('updateObject', {\n            roomName,\n            objectId: currentObjectId.current,\n            newAttributes: {\n              x: newX_rect,\n              y: newY_rect,\n              width: newWidth_rect,\n              height: newHeight_rect\n            }\n          });\n          break;\n        case 'circle':\n          const newRadius_circle = Math.sqrt(Math.pow(point.x - currentObject.x, 2) + Math.pow(point.y - currentObject.y, 2));\n          currentObject = {\n            ...currentObject,\n            radius: newRadius_circle\n          };\n          newObjects[index] = currentObject;\n          setDrawingObjects(newObjects);\n          socket.emit('updateObject', {\n            roomName,\n            objectId: currentObjectId.current,\n            newAttributes: {\n              radius: newRadius_circle\n            }\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n    if (tool !== 'select' && tool !== 'text') {\n      const finalObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\n      if (finalObject) {\n        socket.emit('endDrawing', {\n          roomName,\n          objectId: currentObjectId.current,\n          finalObjectState: finalObject\n        });\n      }\n    }\n    currentObjectId.current = null;\n  };\n  const handleSendChatMessage = () => {\n    if (newChatMessage.trim()) {\n      socket.emit('chatMessage', {\n        roomName,\n        message: newChatMessage.trim()\n      });\n      setNewChatMessage('');\n    }\n  };\n  const handleChatKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendChatMessage();\n    }\n  };\n  const handleClearWhiteboard = () => {\n    if (window.confirm('Are you sure you want to clear the entire whiteboard? This cannot be undone!')) {\n      socket.emit('clearWhiteboard', roomName);\n    }\n  };\n  const handleCloseRoom = () => {\n    if (window.confirm('Are you sure you want to close this room? All users will be disconnected and data will be deleted.')) {\n      socket.emit('closeRoom', roomName);\n      navigate('/');\n      alert('Room closure initiated.');\n    }\n  };\n  const getCursorStyle = () => {\n    switch (tool) {\n      case 'pen':\n      case 'eraser':\n      case 'rect':\n      case 'circle':\n        return 'crosshair';\n      case 'text':\n        return 'text';\n      case 'select':\n        return selectedId ? 'move' : 'default';\n      default:\n        return 'default';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whiteboard-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"whiteboard-main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Whiteboard Room: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"room-name\",\n            children: roomName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          className: \"leave-button\",\n          children: \"Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-palette\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'select' ? 'active' : ''}`,\n          onClick: () => {\n            setTool('select');\n            selectShape(null);\n          },\n          title: \"Select & Move\",\n          children: \"\\uD83D\\uDC46 Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'pen' ? 'active' : ''}`,\n          onClick: () => setTool('pen'),\n          title: \"Pen\",\n          children: \"\\u270F\\uFE0F Pen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'eraser' ? 'active' : ''}`,\n          onClick: () => setTool('eraser'),\n          title: \"Eraser\",\n          children: \"\\uD83E\\uDDFD Eraser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'rect' ? 'active' : ''}`,\n          onClick: () => setTool('rect'),\n          title: \"Rectangle\",\n          children: \"\\u25FB\\uFE0F Rectangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'circle' ? 'active' : ''}`,\n          onClick: () => setTool('circle'),\n          title: \"Circle\",\n          children: \"\\u26AB Circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'text' ? 'active' : ''}`,\n          onClick: () => setTool('text'),\n          title: \"Text\",\n          children: \"\\uD83C\\uDD70\\uFE0F Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          className: \"color-picker\",\n          value: strokeColor,\n          onChange: e => {\n            setStrokeColor(e.target.value);\n            if (tool !== 'eraser') setTool('pen');\n          },\n          title: \"Stroke Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          className: \"color-picker\",\n          value: fillColor,\n          onChange: e => {\n            setFillColor(e.target.value);\n            if (tool === 'pen' || tool === 'eraser') {\n              setTool('rect');\n            }\n          },\n          title: \"Fill Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"20\",\n          value: strokeWidth,\n          onChange: e => setStrokeWidth(parseInt(e.target.value, 10)),\n          className: \"stroke-width-slider\",\n          title: `Stroke Width: ${strokeWidth}px`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stroke-width-display\",\n          children: [strokeWidth, \"px\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tool-button\",\n          onClick: handleClearWhiteboard,\n          title: \"Clear All\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tool-button danger-button\",\n          onClick: handleCloseRoom,\n          title: \"Close & Delete Room\",\n          children: \"\\u274C Close Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whiteboard-canvas-container\",\n        ref: canvasContainerRef,\n        children: /*#__PURE__*/_jsxDEV(Stage, {\n          width: stageDimensions.width,\n          height: stageDimensions.height,\n          onMouseDown: handleMouseDown,\n          onMousemove: handleMouseMove,\n          onMouseup: handleMouseUp,\n          onTouchStart: handleMouseDown,\n          onTouchMove: handleMouseMove,\n          onTouchEnd: handleMouseUp,\n          ref: stageRef,\n          style: {\n            cursor: getCursorStyle(),\n            backgroundColor: 'white',\n            touchAction: 'none' // <<< THIS IS CRUCIAL CSS PROPERTY FOR TOUCH DEVICES\n          },\n          children: /*#__PURE__*/_jsxDEV(Layer, {\n            children: drawingObjects.map(obj => {\n              if (obj.type === 'line') {\n                return /*#__PURE__*/_jsxDEV(Line, {\n                  points: obj.points,\n                  stroke: obj.stroke,\n                  strokeWidth: obj.strokeWidth,\n                  tension: 0.5,\n                  lineCap: \"round\",\n                  lineJoin: \"round\",\n                  globalCompositeOperation: obj.tool === 'eraser' ? 'destination-out' : 'source-over'\n                }, obj.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 27\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(ColoredRect, {\n                  shapeProps: obj,\n                  isSelected: obj.id === selectedId,\n                  onSelect: () => {\n                    selectShape(obj.id);\n                    setTool('select');\n                  },\n                  onChange: handleObjectChange,\n                  activeTool: tool\n                }, obj.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 21\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hint-text margin-top-md\",\n        children: \"Use the tools above to draw and collaborate!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-username\",\n            children: [msg.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), \" \", msg.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-timestamp\",\n            children: new Date(msg.timestamp).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatMessagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: newChatMessage,\n          onChange: e => setNewChatMessage(e.target.value),\n          onKeyPress: handleChatKeyPress,\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendChatMessage,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}\n_s2(WhiteboardRoom, \"zc8WYwYCHnwE0mwPlLsqObND+wU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = WhiteboardRoom;\nexport default WhiteboardRoom;\nvar _c, _c2;\n$RefreshReg$(_c, \"ColoredRect\");\n$RefreshReg$(_c2, \"WhiteboardRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Stage","Layer","Line","Rect","Circle","Text","Transformer","useParams","useNavigate","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ColoredRect","shapeProps","isSelected","onSelect","onChange","activeTool","_s","shapeRef","trRef","current","nodes","getLayer","batchDraw","type","handleDblClick","e","setTimeout","textNode","hide","textPosition","absolutePosition","stageBox","getStage","container","getBoundingClientRect","textarea","document","createElement","body","appendChild","value","text","style","position","top","y","left","x","width","padding","height","fontSize","border","margin","overflow","background","outline","resize","lineHeight","fontFamily","transformOrigin","textAlign","align","color","fill","transform","rotation","zIndex","focus","removeTextarea","removeChild","show","addEventListener","key","shiftKey","blur","currentKonvaNode","onClick","onTap","onDblClick","onDblTap","ref","draggable","onDragEnd","target","onTransformEnd","node","scaleX","scaleY","Math","max","fileName","_jsxFileName","lineNumber","columnNumber","radius","children","boundBoxFunc","oldBox","newBox","_c","WhiteboardRoom","_s2","roomName","navigate","drawingObjects","setDrawingObjects","isDrawing","setIsDrawing","stageRef","currentObjectId","chatMessages","setChatMessages","newChatMessage","setNewChatMessage","chatMessagesEndRef","stageDimensions","setStageDimensions","window","innerWidth","innerHeight","canvasContainerRef","tool","setTool","strokeColor","setStrokeColor","strokeWidth","setStrokeWidth","fillColor","setFillColor","selectedId","selectShape","emit","on","console","log","id","alert","data","lines","messages","newObject","prevObjects","objectId","newPoints","map","obj","points","concat","finalObjectState","newAttributes","message","prevMessages","username","timestamp","Date","destroyedRoomName","handleResize","clientWidth","clientHeight","removeEventListener","off","_chatMessagesEndRef$c","scrollIntoView","behavior","handleObjectChange","updatedObject","handleMouseDown","clickedOnEmpty","evt","preventDefault","pos","getPointerPosition","newObjectId","now","stroke","object","handleMouseMove","stage","point","currentObject","find","newObjects","index","findIndex","newX_rect","min","newY_rect","newWidth_rect","abs","newHeight_rect","newRadius_circle","sqrt","pow","handleMouseUp","finalObject","handleSendChatMessage","trim","handleChatKeyPress","handleClearWhiteboard","confirm","handleCloseRoom","getCursorStyle","className","title","parseInt","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","cursor","backgroundColor","touchAction","tension","lineCap","lineJoin","globalCompositeOperation","msg","toLocaleTimeString","hour","minute","placeholder","onKeyPress","_c2","$RefreshReg$"],"sources":["C:/Users/gamin/OneDrive/Desktop/Project/Whiteboard/live-whiteboard-app/whiteboard-frontend/src/components/WhiteboardRoom.js"],"sourcesContent":["// whiteboard-frontend/src/components/WhiteboardRoom.js\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Stage, Layer, Line, Rect, Circle, Text, Transformer } from 'react-konva';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport './WhiteboardRoom.css';\r\n\r\n// IMPORTANT: Make sure YOUR_PC_IP_ADDRESS is replaced with your actual PC's IP.\r\nconst socket = io('http://YOUR_PC_IP_ADDRESS:5000');\r\n\r\n// Helper component for selectable/transformable Konva nodes (unchanged, as touch-action is on Stage)\r\nconst ColoredRect = ({ shapeProps, isSelected, onSelect, onChange, activeTool }) => {\r\n  const shapeRef = useRef();\r\n  const trRef = useRef();\r\n  useEffect(() => {\r\n    if (isSelected && trRef.current && shapeRef.current) { trRef.current.nodes([shapeRef.current]); trRef.current.getLayer().batchDraw(); } else if (!isSelected && trRef.current) { trRef.current.nodes([]); trRef.current.getLayer().batchDraw(); }\r\n  }, [isSelected, shapeProps.type]);\r\n  const handleDblClick = (e) => {\r\n    onSelect();\r\n    if (shapeProps.type === 'text') {\r\n      setTimeout(() => {\r\n        if (trRef.current) { trRef.current.nodes([]); trRef.current.getLayer().batchDraw(); }\r\n        const textNode = shapeRef.current; if (!textNode) return;\r\n        textNode.hide(); textNode.getLayer().batchDraw();\r\n        const textPosition = textNode.absolutePosition();\r\n        const stageBox = textNode.getStage().container().getBoundingClientRect();\r\n        const textarea = document.createElement('textarea'); document.body.appendChild(textarea);\r\n        textarea.value = textNode.text(); textarea.style.position = 'absolute';\r\n        textarea.style.top = (textPosition.y + stageBox.top) + 'px'; textarea.style.left = (textPosition.x + stageBox.left) + 'px';\r\n        textarea.style.width = textNode.width() - textNode.padding() * 2 + 'px'; textarea.style.height = textNode.height() - textNode.padding() * 2 + 5 + 'px';\r\n        textarea.style.fontSize = textNode.fontSize() + 'px'; textarea.style.border = 'none';\r\n        textarea.style.padding = '0px'; textarea.style.margin = '0px'; textarea.style.overflow = 'hidden';\r\n        textarea.style.background = 'none'; textarea.style.outline = 'none'; textarea.style.resize = 'none';\r\n        textarea.style.lineHeight = textNode.lineHeight(); textarea.style.fontFamily = textNode.fontFamily();\r\n        textarea.style.transformOrigin = 'left top'; textarea.style.textAlign = textNode.align();\r\n        textarea.style.color = textNode.fill(); textarea.style.transform = `rotateZ(${textNode.rotation()}deg)`;\r\n        textarea.style.zIndex = '9999';\r\n        textarea.focus();\r\n        const removeTextarea = () => { document.body.removeChild(textarea); textNode.show(); textNode.getLayer().batchDraw(); };\r\n        textarea.addEventListener('keydown', (e) => { if (e.key === 'Enter' && !e.shiftKey) { textarea.blur(); } if (e.key === 'Escape') { removeTextarea(); } });\r\n        textarea.addEventListener('blur', () => { onChange({ ...shapeProps, text: textarea.value, }); removeTextarea(); });\r\n      }, 0);\r\n    }\r\n  };\r\n  const currentKonvaNode = (\r\n    shapeProps.type === 'rect' ? (\r\n      <Rect\r\n        onClick={onSelect} onTap={onSelect} onDblClick={handleDblClick} onDblTap={handleDblClick}\r\n        ref={shapeRef} {...shapeProps} draggable={activeTool === 'select'}\r\n        onDragEnd={(e) => { onChange({ ...shapeProps, x: e.target.x(), y: e.target.y(), }); }}\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current; const scaleX = node.scaleX(); const scaleY = node.scaleY();\r\n          node.scaleX(1); node.scaleY(1);\r\n          onChange({ ...shapeProps, x: node.x(), y: node.y(), width: Math.max(5, node.width() * scaleX), height: Math.max(5, node.height() * scaleY), rotation: node.rotation(), });\r\n        }} />\r\n    ) : shapeProps.type === 'circle' ? (\r\n      <Circle\r\n        onClick={onSelect} onTap={onSelect} onDblClick={handleDblClick} onDblTap={handleDblClick}\r\n        ref={shapeRef} {...shapeProps} draggable={activeTool === 'select'}\r\n        onDragEnd={(e) => { onChange({ ...shapeProps, x: e.target.x(), y: e.target.y(), }); }}\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current; const scaleX = node.scaleX(); node.scaleX(1); node.scaleY(1);\r\n          onChange({ ...shapeProps, x: node.x(), y: node.y(), radius: Math.max(5, node.radius() * scaleX), rotation: node.rotation(), });\r\n        }} />\r\n    ) : shapeProps.type === 'text' ? (\r\n      <Text\r\n        onClick={onSelect} onTap={onSelect} onDblClick={handleDblClick} onDblTap={handleDblClick}\r\n        ref={shapeRef} {...shapeProps} draggable={activeTool === 'select'}\r\n        onDragEnd={(e) => { onChange({ ...shapeProps, x: e.target.x(), y: e.target.y(), }); }}\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current; const scaleX = node.scaleX(); const scaleY = node.scaleY();\r\n          node.scaleX(1); node.scaleY(1);\r\n          onChange({ ...shapeProps, x: node.x(), y: node.y(), width: Math.max(5, node.width() * scaleX), height: Math.max(5, node.height() * scaleY), fontSize: Math.max(8, node.fontSize() * scaleX), rotation: node.rotation(), });\r\n        }} />\r\n    ) : null\r\n  );\r\n  return (\r\n    <>\r\n      {currentKonvaNode}\r\n      {isSelected && currentKonvaNode && (\r\n        <Transformer ref={trRef} boundBoxFunc={(oldBox, newBox) => { if (newBox.width < 5 || newBox.height < 5) { return oldBox; } return newBox; }} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction WhiteboardRoom() {\r\n  const { roomName } = useParams();\r\n  const navigate = useNavigate();\r\n  const [drawingObjects, setDrawingObjects] = useState([]);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const stageRef = useRef(null);\r\n  const currentObjectId = useRef(null);\r\n\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [newChatMessage, setNewChatMessage] = useState('');\r\n  const chatMessagesEndRef = useRef(null);\r\n\r\n  const [stageDimensions, setStageDimensions] = useState({\r\n    width: window.innerWidth * 0.7,\r\n    height: window.innerHeight * 0.8\r\n  });\r\n  const canvasContainerRef = useRef(null);\r\n\r\n  const [tool, setTool] = useState('pen');\r\n  const [strokeColor, setStrokeColor] = useState('#000000');\r\n  const [strokeWidth, setStrokeWidth] = useState(5);\r\n  const [fillColor, setFillColor] = useState('transparent');\r\n  const [selectedId, selectShape] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!roomName) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    socket.emit('joinRoom', roomName);\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to backend Socket.IO:', socket.id);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Disconnected from backend Socket.IO');\r\n      alert('Disconnected from server. Please refresh.');\r\n      navigate('/');\r\n    });\r\n\r\n    socket.on('whiteboardState', (data) => {\r\n      console.log('Received initial room state:', data);\r\n      setDrawingObjects(data.lines);\r\n      setChatMessages(data.messages);\r\n    });\r\n\r\n    socket.on('drawingStarted', (newObject) => {\r\n        setDrawingObjects((prevObjects) => [...prevObjects, newObject]);\r\n    });\r\n\r\n    socket.on('drawing', (data) => {\r\n        const { objectId, newPoints } = data;\r\n        setDrawingObjects((prevObjects) => {\r\n            return prevObjects.map((obj) => {\r\n                if (obj.id === objectId && obj.type === 'line') {\r\n                    return { ...obj, points: obj.points.concat(newPoints) };\r\n                }\r\n                return obj;\r\n            });\r\n        });\r\n    });\r\n\r\n    socket.on('drawingFinished', (data) => {\r\n        const { objectId, finalObjectState } = data;\r\n        setDrawingObjects((prevObjects) => {\r\n            return prevObjects.map((obj) => {\r\n                if (obj.id === objectId) {\r\n                    return finalObjectState;\r\n                }\r\n                return obj;\r\n            });\r\n        });\r\n    });\r\n\r\n    socket.on('objectUpdated', (data) => {\r\n        const { objectId, newAttributes } = data;\r\n        setDrawingObjects((prevObjects) => {\r\n            return prevObjects.map((obj) => {\r\n                if (obj.id === objectId) {\r\n                    return { ...obj, ...newAttributes };\r\n                }\r\n                return obj;\r\n            });\r\n        });\r\n    });\r\n\r\n    socket.on('whiteboardCleared', () => {\r\n        setDrawingObjects([]);\r\n        selectShape(null);\r\n        console.log('Whiteboard cleared by another user.');\r\n    });\r\n\r\n    socket.on('chatMessage', (message) => {\r\n        setChatMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    socket.on('userJoined', (username) => {\r\n        setChatMessages((prevMessages) => [...prevMessages, {\r\n            username: 'System',\r\n            message: `${username} has joined the room.`,\r\n            timestamp: new Date()\r\n        }]);\r\n    });\r\n\r\n    socket.on('roomDestroyed', (destroyedRoomName) => {\r\n        if (destroyedRoomName === roomName) {\r\n            alert(`Room \"${destroyedRoomName}\" has been closed or automatically destroyed.`);\r\n            navigate('/');\r\n        }\r\n    });\r\n\r\n    const handleResize = () => {\r\n      if (canvasContainerRef.current) {\r\n        const { clientWidth, clientHeight } = canvasContainerRef.current;\r\n        setStageDimensions({ width: clientWidth, height: clientHeight });\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      socket.off('connect');\r\n      socket.off('disconnect');\r\n      socket.off('whiteboardState');\r\n      socket.off('drawingStarted');\r\n      socket.off('drawing');\r\n      socket.off('drawingFinished');\r\n      socket.off('objectUpdated');\r\n      socket.off('whiteboardCleared');\r\n      socket.off('chatMessage');\r\n      socket.off('userJoined');\r\n      socket.off('roomDestroyed');\r\n    };\r\n  }, [roomName, navigate]);\r\n\r\n  useEffect(() => {\r\n    chatMessagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [chatMessages]);\r\n\r\n  const handleObjectChange = useCallback((updatedObject) => {\r\n    setDrawingObjects((prevObjects) => {\r\n      return prevObjects.map((obj) => {\r\n        if (obj.id === updatedObject.id) {\r\n          return updatedObject;\r\n        }\r\n        return obj;\r\n      });\r\n    });\r\n    socket.emit('updateObject', { roomName, objectId: updatedObject.id, newAttributes: updatedObject });\r\n  }, [roomName]);\r\n\r\n  // Re-added e.evt.preventDefault() for touch events\r\n  const handleMouseDown = (e) => {\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (tool === 'select' && clickedOnEmpty) {\r\n      selectShape(null);\r\n      return;\r\n    }\r\n    // THIS IS THE KEY FIX FOR TOUCHSCREENS\r\n    if (e.evt.type === 'touchstart') {\r\n        e.evt.preventDefault();\r\n    }\r\n    setIsDrawing(true);\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    const newObjectId = `${socket.id}-${Date.now()}`;\r\n    currentObjectId.current = newObjectId;\r\n    selectShape(null);\r\n\r\n    let newObject;\r\n    switch (tool) {\r\n      case 'pen':\r\n      case 'eraser': newObject = { id: newObjectId, type: 'line', points: [pos.x, pos.y], stroke: tool === 'eraser' ? '#FFFFFF' : strokeColor, strokeWidth: tool === 'eraser' ? strokeWidth + 10 : strokeWidth, tool: tool }; break;\r\n      case 'rect': newObject = { id: newObjectId, type: 'rect', x: pos.x, y: pos.y, width: 0, height: 0, stroke: strokeColor, strokeWidth: strokeWidth, fill: fillColor, }; break;\r\n      case 'circle': newObject = { id: newObjectId, type: 'circle', x: pos.x, y: pos.y, radius: 0, stroke: strokeColor, strokeWidth: strokeWidth, fill: fillColor, }; break;\r\n      case 'text':\r\n        newObject = { id: newObjectId, type: 'text', x: pos.x, y: pos.y, text: 'Double click to edit', fontSize: 20, fontFamily: 'Arial', stroke: strokeColor, fill: strokeColor, width: 200, height: 30, rotation: 0 };\r\n        setIsDrawing(false); socket.emit('startDrawing', { roomName, object: newObject }); setDrawingObjects((prevObjects) => [...prevObjects, newObject]); selectShape(newObjectId); return;\r\n      case 'select': setIsDrawing(false); return;\r\n      default: return;\r\n    }\r\n    setDrawingObjects((prevObjects) => [...prevObjects, newObject]);\r\n    socket.emit('startDrawing', { roomName, object: newObject });\r\n  };\r\n\r\n  // Re-added e.evt.preventDefault() for touch events\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing) { return; }\r\n    // THIS IS THE KEY FIX FOR TOUCHSCREENS\r\n    if (e.evt.type === 'touchmove') {\r\n        e.evt.preventDefault();\r\n    }\r\n    const stage = e.target.getStage(); const point = stage.getPointerPosition();\r\n    let currentObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\r\n\r\n    if (currentObject) {\r\n      const newObjects = [...drawingObjects]; const index = newObjects.findIndex(obj => obj.id === currentObject.id);\r\n      switch (currentObject.type) {\r\n        case 'line': currentObject.points = currentObject.points.concat([point.x, point.y]); newObjects[index] = currentObject; setDrawingObjects(newObjects); socket.emit('drawing', { roomName, objectId: currentObjectId.current, newPoints: [point.x, point.y] }); break;\r\n        case 'rect':\r\n          const newX_rect = Math.min(currentObject.x, point.x); const newY_rect = Math.min(currentObject.y, point.y);\r\n          const newWidth_rect = Math.abs(point.x - currentObject.x); const newHeight_rect = Math.abs(point.y - currentObject.y);\r\n          currentObject = { ...currentObject, x: newX_rect, y: newY_rect, width: newWidth_rect, height: newHeight_rect }; newObjects[index] = currentObject; setDrawingObjects(newObjects); socket.emit('updateObject', { roomName, objectId: currentObjectId.current, newAttributes: { x: newX_rect, y: newY_rect, width: newWidth_rect, height: newHeight_rect } }); break;\r\n        case 'circle':\r\n          const newRadius_circle = Math.sqrt(Math.pow(point.x - currentObject.x, 2) + Math.pow(point.y - currentObject.y, 2));\r\n          currentObject = { ...currentObject, radius: newRadius_circle }; newObjects[index] = currentObject; setDrawingObjects(newObjects); socket.emit('updateObject', { roomName, objectId: currentObjectId.current, newAttributes: { radius: newRadius_circle } }); break;\r\n        default: break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDrawing(false);\r\n    if (tool !== 'select' && tool !== 'text') {\r\n      const finalObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\r\n      if (finalObject) { socket.emit('endDrawing', { roomName, objectId: currentObjectId.current, finalObjectState: finalObject }); }\r\n    }\r\n    currentObjectId.current = null;\r\n  };\r\n\r\n  const handleSendChatMessage = () => {\r\n    if (newChatMessage.trim()) { socket.emit('chatMessage', { roomName, message: newChatMessage.trim() }); setNewChatMessage(''); }\r\n  };\r\n  const handleChatKeyPress = (e) => { if (e.key === 'Enter') { handleSendChatMessage(); } };\r\n  const handleClearWhiteboard = () => { if (window.confirm('Are you sure you want to clear the entire whiteboard? This cannot be undone!')) { socket.emit('clearWhiteboard', roomName); } };\r\n  const handleCloseRoom = () => { if (window.confirm('Are you sure you want to close this room? All users will be disconnected and data will be deleted.')) { socket.emit('closeRoom', roomName); navigate('/'); alert('Room closure initiated.'); } };\r\n\r\n  const getCursorStyle = () => {\r\n    switch (tool) {\r\n      case 'pen': case 'eraser': case 'rect': case 'circle': return 'crosshair';\r\n      case 'text': return 'text'; case 'select': return selectedId ? 'move' : 'default';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"whiteboard-page-container\">\r\n      <div className=\"whiteboard-main-content\">\r\n        <div className=\"header\">\r\n          <h1>Whiteboard Room: <span className=\"room-name\">{roomName}</span></h1>\r\n          <button onClick={() => navigate('/')} className=\"leave-button\">\r\n            Leave Room\r\n          </button>\r\n        </div>\r\n\r\n        {/* Professional Tool Palette */}\r\n        <div className=\"tool-palette\">\r\n          <button className={`tool-button ${tool === 'select' ? 'active' : ''}`} onClick={() => { setTool('select'); selectShape(null); }} title=\"Select & Move\">👆 Select</button>\r\n          <button className={`tool-button ${tool === 'pen' ? 'active' : ''}`} onClick={() => setTool('pen')} title=\"Pen\">✏️ Pen</button>\r\n          <button className={`tool-button ${tool === 'eraser' ? 'active' : ''}`} onClick={() => setTool('eraser')} title=\"Eraser\">🧽 Eraser</button>\r\n          <div className=\"tool-separator\"></div>\r\n          <button className={`tool-button ${tool === 'rect' ? 'active' : ''}`} onClick={() => setTool('rect')} title=\"Rectangle\">◻️ Rectangle</button>\r\n          <button className={`tool-button ${tool === 'circle' ? 'active' : ''}`} onClick={() => setTool('circle')} title=\"Circle\">⚫ Circle</button>\r\n          <button className={`tool-button ${tool === 'text' ? 'active' : ''}`} onClick={() => setTool('text')} title=\"Text\">🅰️ Text</button>\r\n\r\n          <div className=\"tool-separator\"></div>\r\n\r\n          <input type=\"color\" className=\"color-picker\" value={strokeColor} onChange={(e) => { setStrokeColor(e.target.value); if (tool !== 'eraser') setTool('pen'); }} title=\"Stroke Color\" />\r\n          <input type=\"color\" className=\"color-picker\" value={fillColor} onChange={(e) => { setFillColor(e.target.value); if (tool === 'pen' || tool === 'eraser') { setTool('rect'); } }} title=\"Fill Color\" />\r\n\r\n          <input type=\"range\" min=\"1\" max=\"20\" value={strokeWidth} onChange={(e) => setStrokeWidth(parseInt(e.target.value, 10))} className=\"stroke-width-slider\" title={`Stroke Width: ${strokeWidth}px`} />\r\n          <span className=\"stroke-width-display\">{strokeWidth}px</span>\r\n\r\n          <div className=\"tool-separator\"></div>\r\n\r\n          <button className=\"tool-button\" onClick={handleClearWhiteboard} title=\"Clear All\">🗑️ Clear All</button>\r\n          <button className=\"tool-button danger-button\" onClick={handleCloseRoom} title=\"Close & Delete Room\">❌ Close Room</button>\r\n        </div>\r\n\r\n        <div className=\"whiteboard-canvas-container\" ref={canvasContainerRef}>\r\n          <Stage\r\n            width={stageDimensions.width} height={stageDimensions.height}\r\n            onMouseDown={handleMouseDown} onMousemove={handleMouseMove} onMouseup={handleMouseUp}\r\n            onTouchStart={handleMouseDown} onTouchMove={handleMouseMove} onTouchEnd={handleMouseUp}\r\n            ref={stageRef}\r\n            style={{\r\n                cursor: getCursorStyle(),\r\n                backgroundColor: 'white',\r\n                touchAction: 'none' // <<< THIS IS CRUCIAL CSS PROPERTY FOR TOUCH DEVICES\r\n            }}\r\n          >\r\n            <Layer>\r\n              {drawingObjects.map((obj) => {\r\n                if (obj.type === 'line') {\r\n                  return (<Line key={obj.id} points={obj.points} stroke={obj.stroke} strokeWidth={obj.strokeWidth} tension={0.5} lineCap=\"round\" lineJoin=\"round\" globalCompositeOperation={obj.tool === 'eraser' ? 'destination-out' : 'source-over'} />);\r\n                } else {\r\n                  return (\r\n                    <ColoredRect\r\n                      key={obj.id} shapeProps={obj} isSelected={obj.id === selectedId}\r\n                      onSelect={() => { selectShape(obj.id); setTool('select'); }}\r\n                      onChange={handleObjectChange} activeTool={tool} />\r\n                  );\r\n                }\r\n              })}\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n        <p className=\"hint-text margin-top-md\">Use the tools above to draw and collaborate!</p>\r\n      </div>\r\n\r\n      <div className=\"chat-sidebar\">\r\n        <h2>Room Chat</h2>\r\n        <div className=\"chat-messages\">\r\n          {chatMessages.map((msg, index) => (\r\n            <div key={index} className=\"chat-message\">\r\n              <span className=\"chat-username\">{msg.username}:</span> {msg.message}\r\n              <span className=\"chat-timestamp\">{new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\r\n            </div>\r\n          ))}\r\n          <div ref={chatMessagesEndRef} />\r\n        </div>\r\n        <div className=\"chat-input-group\">\r\n          <input type=\"text\" placeholder=\"Type your message...\" value={newChatMessage} onChange={(e) => setNewChatMessage(e.target.value)} onKeyPress={handleChatKeyPress} className=\"chat-input\" />\r\n          <button onClick={handleSendChatMessage} className=\"send-button\">Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WhiteboardRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}