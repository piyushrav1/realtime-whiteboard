{"ast":null,"code":"/* globals MediaStreamTrackGenerator, MediaStreamTrackProcessor, TransformStream */\n'use strict';\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar DEFAULT_FRAME_RATE = require('../../util/constants').DEFAULT_FRAME_RATE;\nfunction captureVideoFramesSetInterval(videoEl, processVideoFrame) {\n  var _a = __read(videoEl.srcObject.getVideoTracks(), 1),\n    track = _a[0];\n  var _b = track.getSettings().frameRate,\n    frameRate = _b === void 0 ? DEFAULT_FRAME_RATE : _b;\n  var sampleInterval;\n  var readable = new ReadableStream({\n    start: function (controller) {\n      sampleInterval = setInterval(function () {\n        return controller.enqueue();\n      }, 1000 / frameRate);\n    }\n  });\n  var transformer = new TransformStream({\n    transform: function () {\n      return processVideoFrame();\n    }\n  });\n  readable.pipeThrough(transformer).pipeTo(new WritableStream()).then(function () {});\n  return function () {\n    clearInterval(sampleInterval);\n  };\n}\nfunction captureVideoFramesInsertableStreams(videoEl, processVideoFrame, videoFrameType) {\n  var _a = __read(videoEl.srcObject.getVideoTracks(), 1),\n    track = _a[0];\n  var readable = new MediaStreamTrackProcessor({\n    track: track\n  }).readable;\n  var generator = new MediaStreamTrackGenerator({\n    kind: 'video'\n  });\n  var shouldStop = false;\n  var transformer = new TransformStream({\n    transform: function (videoFrame, controller) {\n      var promise = videoFrameType === 'videoframe' ? processVideoFrame(videoFrame) : Promise.resolve(videoFrame.close()).then(processVideoFrame);\n      return promise.finally(function () {\n        if (shouldStop) {\n          controller.terminate();\n        }\n      });\n    }\n  });\n  readable.pipeThrough(transformer).pipeTo(generator.writable).then(function () {});\n  return function () {\n    shouldStop = true;\n  };\n}\nmodule.exports = typeof MediaStreamTrackGenerator === 'function' && typeof MediaStreamTrackProcessor === 'function' ? captureVideoFramesInsertableStreams : captureVideoFramesSetInterval;","map":{"version":3,"names":["DEFAULT_FRAME_RATE","require","captureVideoFramesSetInterval","videoEl","processVideoFrame","_a","__read","srcObject","getVideoTracks","track","_b","getSettings","frameRate","sampleInterval","readable","ReadableStream","start","controller","setInterval","enqueue","transformer","TransformStream","transform","pipeThrough","pipeTo","WritableStream","then","clearInterval","captureVideoFramesInsertableStreams","videoFrameType","MediaStreamTrackProcessor","generator","MediaStreamTrackGenerator","kind","shouldStop","videoFrame","promise","Promise","resolve","close","finally","terminate","writable","module","exports"],"sources":["C:\\Users\\gamin\\OneDrive\\Desktop\\Project\\Whiteboard\\live-whiteboard-app\\whiteboard-frontend\\node_modules\\twilio-video\\lib\\media\\track\\capturevideoframes.js"],"sourcesContent":["/* globals MediaStreamTrackGenerator, MediaStreamTrackProcessor, TransformStream */\n'use strict';\n\nconst { DEFAULT_FRAME_RATE } = require('../../util/constants');\n\nfunction captureVideoFramesSetInterval(videoEl, processVideoFrame) {\n  const [track] = videoEl.srcObject.getVideoTracks();\n  const { frameRate = DEFAULT_FRAME_RATE } = track.getSettings();\n  let sampleInterval;\n\n  const readable = new ReadableStream({\n    start(controller) {\n      sampleInterval = setInterval(\n        () => controller.enqueue(),\n        1000 / frameRate\n      );\n    }\n  });\n\n  const transformer = new TransformStream({\n    transform() {\n      return processVideoFrame();\n    }\n  });\n\n  readable\n    .pipeThrough(transformer)\n    .pipeTo(new WritableStream())\n    .then(() => { /* noop */ });\n\n  return () => {\n    clearInterval(sampleInterval);\n  };\n}\n\nfunction captureVideoFramesInsertableStreams(videoEl, processVideoFrame, videoFrameType) {\n  const [track] = videoEl.srcObject.getVideoTracks();\n  const { readable } = new MediaStreamTrackProcessor({ track });\n  const generator = new MediaStreamTrackGenerator({ kind: 'video' });\n  let shouldStop = false;\n\n  const transformer = new TransformStream({\n    transform(videoFrame, controller) {\n      const promise = videoFrameType === 'videoframe'\n        ? processVideoFrame(videoFrame)\n        : Promise.resolve(videoFrame.close())\n          .then(processVideoFrame);\n      return promise.finally(() => {\n        if (shouldStop) {\n          controller.terminate();\n        }\n      });\n    }\n  });\n\n  readable\n    .pipeThrough(transformer)\n    .pipeTo(generator.writable)\n    .then(() => { /* noop */ });\n\n  return () => {\n    shouldStop = true;\n  };\n}\n\nmodule.exports = typeof MediaStreamTrackGenerator === 'function' && typeof MediaStreamTrackProcessor === 'function'\n  ? captureVideoFramesInsertableStreams\n  : captureVideoFramesSetInterval;\n"],"mappings":"AAAA;AACA,YAAY;;;;;;;;;;;;;;;;;;;;;;;;AAEJ,IAAAA,kBAAkB,GAAKC,OAAO,CAAC,sBAAsB,CAAC,CAAAD,kBAApC;AAE1B,SAASE,6BAA6BA,CAACC,OAAO,EAAEC,iBAAiB;EACzD,IAAAC,EAAA,GAAAC,MAAA,CAAUH,OAAO,CAACI,SAAS,CAACC,cAAc,EAAE;IAA3CC,KAAK,GAAAJ,EAAA,GAAsC;EAC1C,IAAAK,EAAA,GAAmCD,KAAK,CAACE,WAAW,EAAE,CAAAC,SAAxB;IAA9BA,SAAS,GAAAF,EAAA,cAAGV,kBAAkB,GAAAU,EAAA;EACtC,IAAIG,cAAc;EAElB,IAAMC,QAAQ,GAAG,IAAIC,cAAc,CAAC;IAClCC,KAAK,WAAAA,CAACC,UAAU;MACdJ,cAAc,GAAGK,WAAW,CAC1B;QAAM,OAAAD,UAAU,CAACE,OAAO,EAAE;MAApB,CAAoB,EAC1B,IAAI,GAAGP,SAAS,CACjB;IACH;GACD,CAAC;EAEF,IAAMQ,WAAW,GAAG,IAAIC,eAAe,CAAC;IACtCC,SAAS,WAAAA,CAAA;MACP,OAAOlB,iBAAiB,EAAE;IAC5B;GACD,CAAC;EAEFU,QAAQ,CACLS,WAAW,CAACH,WAAW,CAAC,CACxBI,MAAM,CAAC,IAAIC,cAAc,EAAE,CAAC,CAC5BC,IAAI,CAAC,aAAmB,CAAC,CAAC;EAE7B,OAAO;IACLC,aAAa,CAACd,cAAc,CAAC;EAC/B,CAAC;AACH;AAEA,SAASe,mCAAmCA,CAACzB,OAAO,EAAEC,iBAAiB,EAAEyB,cAAc;EAC/E,IAAAxB,EAAA,GAAAC,MAAA,CAAUH,OAAO,CAACI,SAAS,CAACC,cAAc,EAAE;IAA3CC,KAAK,GAAAJ,EAAA,GAAsC;EAC1C,IAAAS,QAAQ,GAAK,IAAIgB,yBAAyB,CAAC;IAAErB,KAAK,EAAAA;EAAA,CAAE,CAAC,CAAAK,QAA7C;EAChB,IAAMiB,SAAS,GAAG,IAAIC,yBAAyB,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAE,CAAC;EAClE,IAAIC,UAAU,GAAG,KAAK;EAEtB,IAAMd,WAAW,GAAG,IAAIC,eAAe,CAAC;IACtCC,SAAS,WAAAA,CAACa,UAAU,EAAElB,UAAU;MAC9B,IAAMmB,OAAO,GAAGP,cAAc,KAAK,YAAY,GAC3CzB,iBAAiB,CAAC+B,UAAU,CAAC,GAC7BE,OAAO,CAACC,OAAO,CAACH,UAAU,CAACI,KAAK,EAAE,CAAC,CAClCb,IAAI,CAACtB,iBAAiB,CAAC;MAC5B,OAAOgC,OAAO,CAACI,OAAO,CAAC;QACrB,IAAIN,UAAU,EAAE;UACdjB,UAAU,CAACwB,SAAS,EAAE;;MAE1B,CAAC,CAAC;IACJ;GACD,CAAC;EAEF3B,QAAQ,CACLS,WAAW,CAACH,WAAW,CAAC,CACxBI,MAAM,CAACO,SAAS,CAACW,QAAQ,CAAC,CAC1BhB,IAAI,CAAC,aAAmB,CAAC,CAAC;EAE7B,OAAO;IACLQ,UAAU,GAAG,IAAI;EACnB,CAAC;AACH;AAEAS,MAAM,CAACC,OAAO,GAAG,OAAOZ,yBAAyB,KAAK,UAAU,IAAI,OAAOF,yBAAyB,KAAK,UAAU,GAC/GF,mCAAmC,GACnC1B,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}