{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gamin\\\\OneDrive\\\\Desktop\\\\Project\\\\Whiteboard\\\\live-whiteboard-app\\\\whiteboard-frontend\\\\src\\\\components\\\\WhiteboardRoom.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react'; // Added useCallback\nimport { Stage, Layer, Line, Rect, Circle, Text, Transformer } from 'react-konva';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Video from '@twilio/video-sdk'; // Import Twilio Video SDK\nimport './WhiteboardRoom.css'; // Make sure this CSS exists\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://192.168.1.102:5000'); // Replace with your PC's IP\n\n// Helper component for selectable/transformable Konva nodes (unchanged)\nconst ColoredRect = ({\n  shapeProps,\n  isSelected,\n  onSelect,\n  onChange,\n  activeTool\n}) => {\n  _s();\n  const shapeRef = useRef();\n  const trRef = useRef();\n  useEffect(() => {\n    if (isSelected && trRef.current && shapeRef.current) {\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    } else if (!isSelected && trRef.current) {\n      trRef.current.nodes([]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected, shapeProps.type]);\n  const handleDblClick = e => {\n    onSelect();\n    if (shapeProps.type === 'text') {\n      setTimeout(() => {\n        if (trRef.current) {\n          trRef.current.nodes([]);\n          trRef.current.getLayer().batchDraw();\n        }\n        const textNode = shapeRef.current;\n        if (!textNode) return;\n        textNode.hide();\n        textNode.getLayer().batchDraw();\n        const textPosition = textNode.absolutePosition();\n        const stageBox = textNode.getStage().container().getBoundingClientRect();\n        const textarea = document.createElement('textarea');\n        document.body.appendChild(textarea);\n        textarea.value = textNode.text();\n        textarea.style.position = 'absolute';\n        textarea.style.top = textPosition.y + stageBox.top + 'px';\n        textarea.style.left = textPosition.x + stageBox.left + 'px';\n        textarea.style.width = textNode.width() - textNode.padding() * 2 + 'px';\n        textarea.style.height = textNode.height() - textNode.padding() * 2 + 5 + 'px';\n        textarea.style.fontSize = textNode.fontSize() + 'px';\n        textarea.style.border = 'none';\n        textarea.style.padding = '0px';\n        textarea.style.margin = '0px';\n        textarea.style.overflow = 'hidden';\n        textarea.style.background = 'none';\n        textarea.style.outline = 'none';\n        textarea.style.resize = 'none';\n        textarea.style.lineHeight = textNode.lineHeight();\n        textarea.style.fontFamily = textNode.fontFamily();\n        textarea.style.transformOrigin = 'left top';\n        textarea.style.textAlign = textNode.align();\n        textarea.style.color = textNode.fill();\n        textarea.style.transform = `rotateZ(${textNode.rotation()}deg)`;\n        textarea.style.zIndex = '9999';\n        textarea.focus();\n        const removeTextarea = () => {\n          document.body.removeChild(textarea);\n          textNode.show();\n          textNode.getLayer().batchDraw();\n        };\n        textarea.addEventListener('keydown', e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            textarea.blur();\n          }\n          if (e.key === 'Escape') {\n            removeTextarea();\n          }\n        });\n        textarea.addEventListener('blur', () => {\n          onChange({\n            ...shapeProps,\n            text: textarea.value\n          });\n          removeTextarea();\n        });\n      }, 0);\n    }\n  };\n  const currentKonvaNode = shapeProps.type === 'rect' ? /*#__PURE__*/_jsxDEV(Rect, {\n    onClick: onSelect,\n    onTap: onSelect,\n    onDblClick: handleDblClick,\n    onDblTap: handleDblClick,\n    ref: shapeRef,\n    ...shapeProps,\n    draggable: activeTool === 'select',\n    onDragEnd: e => {\n      onChange({\n        ...shapeProps,\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    },\n    onTransformEnd: e => {\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY();\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange({\n        ...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        width: Math.max(5, node.width() * scaleX),\n        height: Math.max(5, node.height() * scaleY),\n        rotation: node.rotation()\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this) : shapeProps.type === 'circle' ? /*#__PURE__*/_jsxDEV(Circle, {\n    onClick: onSelect,\n    onTap: onSelect,\n    onDblClick: handleDblClick,\n    onDblTap: handleDblClick,\n    ref: shapeRef,\n    ...shapeProps,\n    draggable: activeTool === 'select',\n    onDragEnd: e => {\n      onChange({\n        ...shapeProps,\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    },\n    onTransformEnd: e => {\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange({\n        ...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        radius: Math.max(5, node.radius() * scaleX),\n        rotation: node.rotation()\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this) : shapeProps.type === 'text' ? /*#__PURE__*/_jsxDEV(Text, {\n    onClick: onSelect,\n    onTap: onSelect,\n    onDblClick: handleDblClick,\n    onDblTap: handleDblClick,\n    ref: shapeRef,\n    ...shapeProps,\n    draggable: activeTool === 'select',\n    onDragEnd: e => {\n      onChange({\n        ...shapeProps,\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    },\n    onTransformEnd: e => {\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY();\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange({\n        ...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        width: Math.max(5, node.width() * scaleX),\n        height: Math.max(5, node.height() * scaleY),\n        fontSize: Math.max(8, node.fontSize() * scaleX),\n        rotation: node.rotation()\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentKonvaNode, isSelected && currentKonvaNode && /*#__PURE__*/_jsxDEV(Transformer, {\n      ref: trRef,\n      boundBoxFunc: (oldBox, newBox) => {\n        if (newBox.width < 5 || newBox.height < 5) {\n          return oldBox;\n        }\n        return newBox;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ColoredRect, \"utqYnE1qYQB2JA/ZIFXzHjUZTOc=\");\n_c = ColoredRect;\nfunction WhiteboardRoom() {\n  _s2();\n  const {\n    roomName\n  } = useParams();\n  const navigate = useNavigate();\n  const [drawingObjects, setDrawingObjects] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const stageRef = useRef(null);\n  const currentObjectId = useRef(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newChatMessage, setNewChatMessage] = useState('');\n  const chatMessagesEndRef = useRef(null);\n  const [stageDimensions, setStageDimensions] = useState({\n    width: window.innerWidth * 0.7,\n    height: window.innerHeight * 0.8\n  });\n  const canvasContainerRef = useRef(null);\n  const [tool, setTool] = useState('pen');\n  const [strokeColor, setStrokeColor] = useState('#000000');\n  const [strokeWidth, setStrokeWidth] = useState(5);\n  const [fillColor, setFillColor] = useState('transparent');\n  const [selectedId, selectShape] = useState(null);\n\n  // --- NEW: Video Call States ---\n  const [videoRoom, setVideoRoom] = useState(null); // Twilio Video Room object\n  const [localParticipant, setLocalParticipant] = useState(null); // Local participant object\n  const [remoteParticipants, setRemoteParticipants] = useState([]); // Array of remote participants\n  const [localVideoTrack, setLocalVideoTrack] = useState(null); // Local video track\n  const [localAudioTrack, setLocalAudioTrack] = useState(null); // Local audio track\n  const localVideoRef = useRef(null); // Ref for local video element\n  const remoteVideosRef = useRef(null); // Ref for container of remote videos\n\n  const [videoCallEnabled, setVideoCallEnabled] = useState(false); // Toggle video call UI\n  const [isVideoConnected, setIsVideoConnected] = useState(false); // Status of video connection\n\n  // Function to attach a track to a DOM element\n  const attachTrack = useCallback((track, container) => {\n    if (track && container) {\n      container.appendChild(track.attach());\n    }\n  }, []);\n\n  // Function to detach a track from a DOM element\n  const detachTrack = useCallback(track => {\n    if (track) {\n      track.detach().forEach(element => element.remove());\n    }\n  }, []);\n\n  // Handle participant connections/disconnections\n  const participantConnected = useCallback(participant => {\n    console.log(`Participant \"${participant.identity}\" connected`);\n    setRemoteParticipants(prevParticipants => [...prevParticipants, participant]);\n    participant.on('trackSubscribed', track => {\n      console.log(`Track \"${track.kind}\" subscribed for participant \"${participant.identity}\"`);\n      if (track.kind === 'video') {\n        const participantDiv = document.getElementById(`participant-${participant.sid}`);\n        if (participantDiv) {\n          attachTrack(track, participantDiv);\n        } else {\n          // If div not yet rendered, create one and attach\n          const newDiv = document.createElement('div');\n          newDiv.id = `participant-${participant.sid}`;\n          newDiv.className = 'remote-video-container';\n          remoteVideosRef.current.appendChild(newDiv);\n          attachTrack(track, newDiv);\n        }\n      } else if (track.kind === 'audio') {\n        attachTrack(track, document.body); // Audio can be attached to body\n      }\n    });\n    participant.on('trackUnsubscribed', track => {\n      console.log(`Track \"${track.kind}\" unsubscribed from participant \"${participant.identity}\"`);\n      detachTrack(track);\n    });\n  }, [attachTrack, detachTrack]);\n  const participantDisconnected = useCallback(participant => {\n    console.log(`Participant \"${participant.identity}\" disconnected`);\n    setRemoteParticipants(prevParticipants => prevParticipants.filter(p => p.sid !== participant.sid));\n    // Clean up detached tracks\n    participant.tracks.forEach(publication => {\n      if (publication.isSubscribed) {\n        detachTrack(publication.track);\n      }\n    });\n    // Remove participant's video container if exists\n    const participantDiv = document.getElementById(`participant-${participant.sid}`);\n    if (participantDiv) {\n      participantDiv.remove();\n    }\n  }, [detachTrack]);\n\n  // --- Twilio Video Connection Logic ---\n  const connectToVideoRoom = useCallback(async identity => {\n    if (!identity || !roomName) {\n      console.error(\"Identity or room name missing for video connection.\");\n      alert(\"Cannot join video: Identity or room name missing.\");\n      return;\n    }\n    try {\n      // 1. Get Twilio Token from backend\n      const {\n        token,\n        error\n      } = await new Promise(resolve => {\n        socket.emit('getTwilioToken', {\n          roomName,\n          identity\n        }, resolve);\n      });\n      if (error || !token) {\n        console.error(\"Failed to get Twilio token:\", error);\n        alert(\"Failed to get video token. Check backend console and Twilio credentials.\");\n        return;\n      }\n\n      // 2. Connect to Twilio Video Room\n      console.log(`Connecting to Twilio video room \"${roomName}\" with token...`);\n      const room = await Video.connect(token, {\n        name: roomName,\n        audio: true,\n        // Request audio track\n        video: {\n          width: 640,\n          height: 480\n        },\n        // Request video track\n        dominantSpeaker: true // Enable dominant speaker detection\n      });\n      setVideoRoom(room);\n      setLocalParticipant(room.localParticipant);\n      setIsVideoConnected(true);\n      console.log(`Successfully connected to Room: ${room.name}`);\n\n      // Attach local participant's tracks\n      room.localParticipant.tracks.forEach(publication => {\n        if (publication.track) {\n          if (publication.kind === 'video') {\n            attachTrack(publication.track, localVideoRef.current);\n            setLocalVideoTrack(publication.track);\n          } else if (publication.kind === 'audio') {\n            setLocalAudioTrack(publication.track);\n          }\n        }\n      });\n\n      // Attach tracks of existing remote participants\n      room.participants.forEach(participantConnected);\n\n      // Handle new participants joining\n      room.on('participantConnected', participantConnected);\n      room.on('participantDisconnected', participantDisconnected);\n\n      // Handle room disconnection\n      room.on('disconnected', (room, error) => {\n        console.log('Disconnected from Twilio Room:', error);\n        // Clean up all tracks\n        room.localParticipant.tracks.forEach(publication => detachTrack(publication.track));\n        room.participants.forEach(participant => {\n          participant.tracks.forEach(publication => detachTrack(publication.track));\n        });\n        setVideoRoom(null);\n        setLocalParticipant(null);\n        setRemoteParticipants([]);\n        setLocalVideoTrack(null);\n        setLocalAudioTrack(null);\n        setIsVideoConnected(false);\n        alert(\"You have been disconnected from the video call.\");\n      });\n    } catch (error) {\n      console.error('Failed to connect to Twilio Video Room:', error);\n      alert('Failed to connect to video call. Please ensure camera/mic permissions.');\n      setIsVideoConnected(false);\n    }\n  }, [roomName, attachTrack, detachTrack, participantConnected, participantDisconnected]);\n\n  // Function to disconnect from video room\n  const disconnectFromVideoRoom = useCallback(() => {\n    if (videoRoom) {\n      videoRoom.disconnect();\n      console.log('Disconnected from Twilio video room.');\n    }\n  }, [videoRoom]);\n\n  // Main useEffect for Socket.IO and Room state management\n  useEffect(() => {\n    if (!roomName) {\n      navigate('/');\n      return;\n    }\n    socket.emit('joinRoom', roomName);\n    socket.on('connect', () => {\n      console.log('Connected to backend Socket.IO:', socket.id);\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from backend Socket.IO');\n      alert('Disconnected from server. Please refresh.');\n      navigate('/');\n    });\n    socket.on('whiteboardState', data => {\n      console.log('Received initial room state:', data);\n      setDrawingObjects(data.lines);\n      setChatMessages(data.messages);\n    });\n    socket.on('drawingStarted', newObject => {\n      setDrawingObjects(prevObjects => [...prevObjects, newObject]);\n    });\n    socket.on('drawing', data => {\n      const {\n        objectId,\n        newPoints\n      } = data;\n      setDrawingObjects(prevObjects => {\n        return prevObjects.map(obj => {\n          if (obj.id === objectId && obj.type === 'line') {\n            return {\n              ...obj,\n              points: obj.points.concat(newPoints)\n            };\n          }\n          return obj;\n        });\n      });\n    });\n    socket.on('drawingFinished', data => {\n      const {\n        objectId,\n        finalObjectState\n      } = data;\n      setDrawingObjects(prevObjects => {\n        return prevObjects.map(obj => {\n          if (obj.id === objectId) {\n            return finalObjectState;\n          }\n          return obj;\n        });\n      });\n    });\n    socket.on('objectUpdated', data => {\n      const {\n        objectId,\n        newAttributes\n      } = data;\n      setDrawingObjects(prevObjects => {\n        return prevObjects.map(obj => {\n          if (obj.id === objectId) {\n            return {\n              ...obj,\n              ...newAttributes\n            };\n          }\n          return obj;\n        });\n      });\n    });\n    socket.on('whiteboardCleared', () => {\n      setDrawingObjects([]);\n      selectShape(null);\n      console.log('Whiteboard cleared by another user.');\n    });\n    socket.on('chatMessage', message => {\n      setChatMessages(prevMessages => [...prevMessages, message]);\n    });\n    socket.on('userJoined', username => {\n      setChatMessages(prevMessages => [...prevMessages, {\n        username: 'System',\n        message: `${username} has joined the room.`,\n        timestamp: new Date()\n      }]);\n    });\n    socket.on('roomDestroyed', destroyedRoomName => {\n      if (destroyedRoomName === roomName) {\n        alert(`Room \"${destroyedRoomName}\" has been closed or automatically destroyed.`);\n        navigate('/');\n      }\n    });\n    const handleResize = () => {\n      if (canvasContainerRef.current) {\n        const {\n          clientWidth,\n          clientHeight\n        } = canvasContainerRef.current;\n        setStageDimensions({\n          width: clientWidth,\n          height: clientHeight\n        });\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('whiteboardState');\n      socket.off('drawingStarted');\n      socket.off('drawing');\n      socket.off('drawingFinished');\n      socket.off('objectUpdated');\n      socket.off('whiteboardCleared');\n      socket.off('chatMessage');\n      socket.off('userJoined');\n      socket.off('roomDestroyed');\n\n      // NEW: Clean up Twilio connection on component unmount/room change\n      disconnectFromVideoRoom();\n    };\n  }, [roomName, navigate, disconnectFromVideoRoom]);\n\n  // Effect to scroll chat to bottom\n  useEffect(() => {\n    var _chatMessagesEndRef$c;\n    (_chatMessagesEndRef$c = chatMessagesEndRef.current) === null || _chatMessagesEndRef$c === void 0 ? void 0 : _chatMessagesEndRef$c.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [chatMessages]);\n  const handleObjectChange = useCallback(updatedObject => {\n    setDrawingObjects(prevObjects => {\n      return prevObjects.map(obj => {\n        if (obj.id === updatedObject.id) {\n          return updatedObject;\n        }\n        return obj;\n      });\n    });\n    socket.emit('updateObject', {\n      roomName,\n      objectId: updatedObject.id,\n      newAttributes: updatedObject\n    });\n  }, [roomName]); // Add roomName to dependency array\n\n  const handleMouseDown = e => {\n    const clickedOnEmpty = e.target === e.target.getStage();\n    if (tool === 'select' && clickedOnEmpty) {\n      selectShape(null);\n      return;\n    }\n    if (e.evt.type === 'touchstart') {\n      e.evt.preventDefault();\n    }\n    setIsDrawing(true);\n    const pos = e.target.getStage().getPointerPosition();\n    const newObjectId = `${socket.id}-${Date.now()}`;\n    currentObjectId.current = newObjectId;\n    selectShape(null);\n    let newObject;\n    switch (tool) {\n      case 'pen':\n      case 'eraser':\n        newObject = {\n          id: newObjectId,\n          type: 'line',\n          points: [pos.x, pos.y],\n          stroke: tool === 'eraser' ? '#FFFFFF' : strokeColor,\n          strokeWidth: tool === 'eraser' ? strokeWidth + 10 : strokeWidth,\n          tool: tool\n        };\n        break;\n      case 'rect':\n        newObject = {\n          id: newObjectId,\n          type: 'rect',\n          x: pos.x,\n          y: pos.y,\n          width: 0,\n          height: 0,\n          stroke: strokeColor,\n          strokeWidth: strokeWidth,\n          fill: fillColor\n        };\n        break;\n      case 'circle':\n        newObject = {\n          id: newObjectId,\n          type: 'circle',\n          x: pos.x,\n          y: pos.y,\n          radius: 0,\n          stroke: strokeColor,\n          strokeWidth: strokeWidth,\n          fill: fillColor\n        };\n        break;\n      case 'text':\n        newObject = {\n          id: newObjectId,\n          type: 'text',\n          x: pos.x,\n          y: pos.y,\n          text: 'Double click to edit',\n          fontSize: 20,\n          fontFamily: 'Arial',\n          stroke: strokeColor,\n          fill: strokeColor,\n          width: 200,\n          height: 30,\n          rotation: 0\n        };\n        setIsDrawing(false);\n        socket.emit('startDrawing', {\n          roomName,\n          object: newObject\n        });\n        setDrawingObjects(prevObjects => [...prevObjects, newObject]);\n        selectShape(newObjectId);\n        return;\n      case 'select':\n        setIsDrawing(false);\n        return;\n      default:\n        return;\n    }\n    setDrawingObjects(prevObjects => [...prevObjects, newObject]);\n    socket.emit('startDrawing', {\n      roomName,\n      object: newObject\n    });\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) {\n      return;\n    }\n    if (e.evt.type === 'touchmove') {\n      e.evt.preventDefault();\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let currentObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\n    if (currentObject) {\n      const newObjects = [...drawingObjects];\n      const index = newObjects.findIndex(obj => obj.id === currentObject.id);\n      switch (currentObject.type) {\n        case 'line':\n          currentObject.points = currentObject.points.concat([point.x, point.y]);\n          newObjects[index] = currentObject;\n          setDrawingObjects(newObjects);\n          socket.emit('drawing', {\n            roomName,\n            objectId: currentObjectId.current,\n            newPoints: [point.x, point.y]\n          });\n          break;\n        case 'rect':\n          const newX_rect = Math.min(currentObject.x, point.x);\n          const newY_rect = Math.min(currentObject.y, point.y);\n          const newWidth_rect = Math.abs(point.x - currentObject.x);\n          const newHeight_rect = Math.abs(point.y - currentObject.y);\n          currentObject = {\n            ...currentObject,\n            x: newX_rect,\n            y: newY_rect,\n            width: newWidth_rect,\n            height: newHeight_rect\n          };\n          newObjects[index] = currentObject;\n          setDrawingObjects(newObjects);\n          socket.emit('updateObject', {\n            roomName,\n            objectId: currentObjectId.current,\n            newAttributes: {\n              x: newX_rect,\n              y: newY_rect,\n              width: newWidth_rect,\n              height: newHeight_rect\n            }\n          });\n          break;\n        case 'circle':\n          const newRadius_circle = Math.sqrt(Math.pow(point.x - currentObject.x, 2) + Math.pow(point.y - currentObject.y, 2));\n          currentObject = {\n            ...currentObject,\n            radius: newRadius_circle\n          };\n          newObjects[index] = currentObject;\n          setDrawingObjects(newObjects);\n          socket.emit('updateObject', {\n            roomName,\n            objectId: currentObjectId.current,\n            newAttributes: {\n              radius: newRadius_circle\n            }\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n    if (tool !== 'select' && tool !== 'text') {\n      const finalObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\n      if (finalObject) {\n        socket.emit('endDrawing', {\n          roomName,\n          objectId: currentObjectId.current,\n          finalObjectState: finalObject\n        });\n      }\n    }\n    currentObjectId.current = null;\n  };\n  const handleSendChatMessage = () => {\n    if (newChatMessage.trim()) {\n      socket.emit('chatMessage', {\n        roomName,\n        message: newChatMessage.trim()\n      });\n      setNewChatMessage('');\n    }\n  };\n  const handleChatKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendChatMessage();\n    }\n  };\n  const handleClearWhiteboard = () => {\n    if (window.confirm('Are you sure you want to clear the entire whiteboard? This cannot be undone!')) {\n      socket.emit('clearWhiteboard', roomName);\n    }\n  };\n  const handleCloseRoom = () => {\n    if (window.confirm('Are you sure you want to close this room? All users will be disconnected and data will be deleted.')) {\n      socket.emit('closeRoom', roomName);\n      navigate('/');\n      alert('Room closure initiated.');\n    }\n  };\n  const getCursorStyle = () => {\n    switch (tool) {\n      case 'pen':\n      case 'eraser':\n      case 'rect':\n      case 'circle':\n        return 'crosshair';\n      case 'text':\n        return 'text';\n      case 'select':\n        return selectedId ? 'move' : 'default';\n      default:\n        return 'default';\n    }\n  };\n\n  // --- NEW: Video Call UI Toggle and Join/Leave handlers ---\n  const toggleVideoCallUI = () => {\n    setVideoCallEnabled(prev => !prev);\n    // If enabling video UI and not already connected, try to connect\n    if (!videoCallEnabled && !isVideoConnected) {\n      connectToVideoRoom(socket.id); // Using socket.id as identity for now\n    } else if (videoCallEnabled && isVideoConnected) {\n      disconnectFromVideoRoom(); // If disabling video UI and connected, disconnect\n    }\n  };\n  const handleJoinLeaveVideoCall = () => {\n    if (isVideoConnected) {\n      disconnectFromVideoRoom();\n    } else {\n      connectToVideoRoom(socket.id); // Use socket.id as identity\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whiteboard-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"whiteboard-main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Whiteboard Room: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"room-name\",\n            children: roomName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          className: \"leave-button\",\n          children: \"Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-palette\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'select' ? 'active' : ''}`,\n          onClick: () => {\n            setTool('select');\n            selectShape(null);\n          },\n          title: \"Select & Move\",\n          children: \"\\uD83D\\uDC46 Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'pen' ? 'active' : ''}`,\n          onClick: () => setTool('pen'),\n          title: \"Pen\",\n          children: \"\\u270F\\uFE0F Pen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'eraser' ? 'active' : ''}`,\n          onClick: () => setTool('eraser'),\n          title: \"Eraser\",\n          children: \"\\uD83E\\uDDFD Eraser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'rect' ? 'active' : ''}`,\n          onClick: () => setTool('rect'),\n          title: \"Rectangle\",\n          children: \"\\u25FB\\uFE0F Rectangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'circle' ? 'active' : ''}`,\n          onClick: () => setTool('circle'),\n          title: \"Circle\",\n          children: \"\\u26AB Circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${tool === 'text' ? 'active' : ''}`,\n          onClick: () => setTool('text'),\n          title: \"Text\",\n          children: \"\\uD83C\\uDD70\\uFE0F Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          className: \"color-picker\",\n          value: strokeColor,\n          onChange: e => {\n            setStrokeColor(e.target.value);\n            if (tool !== 'eraser') setTool('pen');\n          },\n          title: \"Stroke Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          className: \"color-picker\",\n          value: fillColor,\n          onChange: e => {\n            setFillColor(e.target.value);\n            if (tool === 'pen' || tool === 'eraser') {\n              setTool('rect');\n            }\n          },\n          title: \"Fill Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"20\",\n          value: strokeWidth,\n          onChange: e => setStrokeWidth(parseInt(e.target.value, 10)),\n          className: \"stroke-width-slider\",\n          title: `Stroke Width: ${strokeWidth}px`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stroke-width-display\",\n          children: [strokeWidth, \"px\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tool-button\",\n          onClick: handleClearWhiteboard,\n          title: \"Clear All\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tool-button danger-button\",\n          onClick: handleCloseRoom,\n          title: \"Close & Delete Room\",\n          children: \"\\u274C Close Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tool-button ${videoCallEnabled ? 'active success-button' : ''}`,\n          onClick: toggleVideoCallUI,\n          title: videoCallEnabled ? 'Hide Video Call' : 'Show Video Call',\n          children: videoCallEnabled ? '📹 Hide Video' : '📹 Show Video'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whiteboard-canvas-container\",\n        ref: canvasContainerRef,\n        children: /*#__PURE__*/_jsxDEV(Stage, {\n          width: stageDimensions.width,\n          height: stageDimensions.height,\n          onMouseDown: handleMouseDown,\n          onMousemove: handleMouseMove,\n          onMouseup: handleMouseUp,\n          onTouchStart: handleMouseDown,\n          onTouchMove: handleMouseMove,\n          onTouchEnd: handleMouseUp,\n          ref: stageRef,\n          style: {\n            cursor: getCursorStyle(),\n            backgroundColor: 'white',\n            touchAction: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(Layer, {\n            children: drawingObjects.map(obj => {\n              if (obj.type === 'line') {\n                return /*#__PURE__*/_jsxDEV(Line, {\n                  points: obj.points,\n                  stroke: obj.stroke,\n                  strokeWidth: obj.strokeWidth,\n                  tension: 0.5,\n                  lineCap: \"round\",\n                  lineJoin: \"round\",\n                  globalCompositeOperation: obj.tool === 'eraser' ? 'destination-out' : 'source-over'\n                }, obj.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 27\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(ColoredRect, {\n                  shapeProps: obj,\n                  isSelected: obj.id === selectedId,\n                  onSelect: () => {\n                    selectShape(obj.id);\n                    setTool('select');\n                  },\n                  onChange: handleObjectChange,\n                  activeTool: tool\n                }, obj.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 21\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hint-text margin-top-md\",\n        children: \"Use the tools above to draw and collaborate!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), videoCallEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-call-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tool-button ${isVideoConnected ? 'danger-button' : 'success-button'}`,\n            onClick: handleJoinLeaveVideoCall,\n            children: isVideoConnected ? '📞 Disconnect' : '📞 Connect Video'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"local-video-container\",\n          ref: localVideoRef,\n          children: !localVideoTrack && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting for local video...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remote-videos-grid\",\n          ref: remoteVideosRef,\n          children: remoteParticipants.length === 0 && isVideoConnected && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting for others...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-username\",\n            children: [msg.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this), \" \", msg.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-timestamp\",\n            children: new Date(msg.timestamp).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatMessagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: newChatMessage,\n          onChange: e => setNewChatMessage(e.target.value),\n          onKeyPress: handleChatKeyPress,\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendChatMessage,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 540,\n    columnNumber: 5\n  }, this);\n}\n_s2(WhiteboardRoom, \"RYJfnchFtH1dMqlrAbtysp9cIvQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = WhiteboardRoom;\nexport default WhiteboardRoom;\nvar _c, _c2;\n$RefreshReg$(_c, \"ColoredRect\");\n$RefreshReg$(_c2, \"WhiteboardRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Stage","Layer","Line","Rect","Circle","Text","Transformer","useParams","useNavigate","io","Video","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ColoredRect","shapeProps","isSelected","onSelect","onChange","activeTool","_s","shapeRef","trRef","current","nodes","getLayer","batchDraw","type","handleDblClick","e","setTimeout","textNode","hide","textPosition","absolutePosition","stageBox","getStage","container","getBoundingClientRect","textarea","document","createElement","body","appendChild","value","text","style","position","top","y","left","x","width","padding","height","fontSize","border","margin","overflow","background","outline","resize","lineHeight","fontFamily","transformOrigin","textAlign","align","color","fill","transform","rotation","zIndex","focus","removeTextarea","removeChild","show","addEventListener","key","shiftKey","blur","currentKonvaNode","onClick","onTap","onDblClick","onDblTap","ref","draggable","onDragEnd","target","onTransformEnd","node","scaleX","scaleY","Math","max","fileName","_jsxFileName","lineNumber","columnNumber","radius","children","boundBoxFunc","oldBox","newBox","_c","WhiteboardRoom","_s2","roomName","navigate","drawingObjects","setDrawingObjects","isDrawing","setIsDrawing","stageRef","currentObjectId","chatMessages","setChatMessages","newChatMessage","setNewChatMessage","chatMessagesEndRef","stageDimensions","setStageDimensions","window","innerWidth","innerHeight","canvasContainerRef","tool","setTool","strokeColor","setStrokeColor","strokeWidth","setStrokeWidth","fillColor","setFillColor","selectedId","selectShape","videoRoom","setVideoRoom","localParticipant","setLocalParticipant","remoteParticipants","setRemoteParticipants","localVideoTrack","setLocalVideoTrack","localAudioTrack","setLocalAudioTrack","localVideoRef","remoteVideosRef","videoCallEnabled","setVideoCallEnabled","isVideoConnected","setIsVideoConnected","attachTrack","track","attach","detachTrack","detach","forEach","element","remove","participantConnected","participant","console","log","identity","prevParticipants","on","kind","participantDiv","getElementById","sid","newDiv","id","className","participantDisconnected","filter","p","tracks","publication","isSubscribed","connectToVideoRoom","error","alert","token","Promise","resolve","emit","room","connect","name","audio","video","dominantSpeaker","participants","disconnectFromVideoRoom","disconnect","data","lines","messages","newObject","prevObjects","objectId","newPoints","map","obj","points","concat","finalObjectState","newAttributes","message","prevMessages","username","timestamp","Date","destroyedRoomName","handleResize","clientWidth","clientHeight","removeEventListener","off","_chatMessagesEndRef$c","scrollIntoView","behavior","handleObjectChange","updatedObject","handleMouseDown","clickedOnEmpty","evt","preventDefault","pos","getPointerPosition","newObjectId","now","stroke","object","handleMouseMove","stage","point","currentObject","find","newObjects","index","findIndex","newX_rect","min","newY_rect","newWidth_rect","abs","newHeight_rect","newRadius_circle","sqrt","pow","handleMouseUp","finalObject","handleSendChatMessage","trim","handleChatKeyPress","handleClearWhiteboard","confirm","handleCloseRoom","getCursorStyle","toggleVideoCallUI","prev","handleJoinLeaveVideoCall","title","parseInt","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","cursor","backgroundColor","touchAction","tension","lineCap","lineJoin","globalCompositeOperation","length","msg","toLocaleTimeString","hour","minute","placeholder","onKeyPress","_c2","$RefreshReg$"],"sources":["C:/Users/gamin/OneDrive/Desktop/Project/Whiteboard/live-whiteboard-app/whiteboard-frontend/src/components/WhiteboardRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react'; // Added useCallback\r\nimport { Stage, Layer, Line, Rect, Circle, Text, Transformer } from 'react-konva';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport Video from '@twilio/video-sdk';  // Import Twilio Video SDK\r\nimport './WhiteboardRoom.css'; // Make sure this CSS exists\r\n\r\nconst socket = io('http://192.168.1.102:5000'); // Replace with your PC's IP\r\n\r\n// Helper component for selectable/transformable Konva nodes (unchanged)\r\nconst ColoredRect = ({ shapeProps, isSelected, onSelect, onChange, activeTool }) => {\r\n  const shapeRef = useRef();\r\n  const trRef = useRef();\r\n  useEffect(() => {\r\n    if (isSelected && trRef.current && shapeRef.current) {\r\n      trRef.current.nodes([shapeRef.current]);\r\n      trRef.current.getLayer().batchDraw();\r\n    } else if (!isSelected && trRef.current) {\r\n      trRef.current.nodes([]);\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [isSelected, shapeProps.type]);\r\n  const handleDblClick = (e) => {\r\n    onSelect();\r\n    if (shapeProps.type === 'text') {\r\n      setTimeout(() => {\r\n        if (trRef.current) {\r\n          trRef.current.nodes([]);\r\n          trRef.current.getLayer().batchDraw();\r\n        }\r\n        const textNode = shapeRef.current;\r\n        if (!textNode) return;\r\n        textNode.hide();\r\n        textNode.getLayer().batchDraw();\r\n        const textPosition = textNode.absolutePosition();\r\n        const stageBox = textNode.getStage().container().getBoundingClientRect();\r\n        const textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n        textarea.value = textNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.top = (textPosition.y + stageBox.top) + 'px';\r\n        textarea.style.left = (textPosition.x + stageBox.left) + 'px';\r\n        textarea.style.width = textNode.width() - textNode.padding() * 2 + 'px';\r\n        textarea.style.height = textNode.height() - textNode.padding() * 2 + 5 + 'px';\r\n        textarea.style.fontSize = textNode.fontSize() + 'px';\r\n        textarea.style.border = 'none';\r\n        textarea.style.padding = '0px';\r\n        textarea.style.margin = '0px';\r\n        textarea.style.overflow = 'hidden';\r\n        textarea.style.background = 'none';\r\n        textarea.style.outline = 'none';\r\n        textarea.style.resize = 'none';\r\n        textarea.style.lineHeight = textNode.lineHeight();\r\n        textarea.style.fontFamily = textNode.fontFamily();\r\n        textarea.style.transformOrigin = 'left top';\r\n        textarea.style.textAlign = textNode.align();\r\n        textarea.style.color = textNode.fill();\r\n        textarea.style.transform = `rotateZ(${textNode.rotation()}deg)`;\r\n        textarea.style.zIndex = '9999';\r\n        textarea.focus();\r\n        const removeTextarea = () => {\r\n          document.body.removeChild(textarea);\r\n          textNode.show();\r\n          textNode.getLayer().batchDraw();\r\n        };\r\n        textarea.addEventListener('keydown', (e) => {\r\n          if (e.key === 'Enter' && !e.shiftKey) {\r\n            textarea.blur();\r\n          }\r\n          if (e.key === 'Escape') {\r\n            removeTextarea();\r\n          }\r\n        });\r\n        textarea.addEventListener('blur', () => {\r\n          onChange({\r\n            ...shapeProps,\r\n            text: textarea.value,\r\n          });\r\n          removeTextarea();\r\n        });\r\n      }, 0);\r\n    }\r\n  };\r\n  const currentKonvaNode = (\r\n    shapeProps.type === 'rect' ? (\r\n      <Rect\r\n        onClick={onSelect} onTap={onSelect} onDblClick={handleDblClick} onDblTap={handleDblClick}\r\n        ref={shapeRef} {...shapeProps} draggable={activeTool === 'select'}\r\n        onDragEnd={(e) => { onChange({ ...shapeProps, x: e.target.x(), y: e.target.y(), }); }}\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current; const scaleX = node.scaleX(); const scaleY = node.scaleY();\r\n          node.scaleX(1); node.scaleY(1);\r\n          onChange({ ...shapeProps, x: node.x(), y: node.y(), width: Math.max(5, node.width() * scaleX), height: Math.max(5, node.height() * scaleY), rotation: node.rotation(), });\r\n        }} />\r\n    ) : shapeProps.type === 'circle' ? (\r\n      <Circle\r\n        onClick={onSelect} onTap={onSelect} onDblClick={handleDblClick} onDblTap={handleDblClick}\r\n        ref={shapeRef} {...shapeProps} draggable={activeTool === 'select'}\r\n        onDragEnd={(e) => { onChange({ ...shapeProps, x: e.target.x(), y: e.target.y(), }); }}\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current; const scaleX = node.scaleX(); node.scaleX(1); node.scaleY(1);\r\n          onChange({ ...shapeProps, x: node.x(), y: node.y(), radius: Math.max(5, node.radius() * scaleX), rotation: node.rotation(), });\r\n        }} />\r\n    ) : shapeProps.type === 'text' ? (\r\n      <Text\r\n        onClick={onSelect} onTap={onSelect} onDblClick={handleDblClick}   onDblTap={handleDblClick} \r\n        ref={shapeRef} {...shapeProps} draggable={activeTool === 'select'}\r\n        onDragEnd={(e) => { onChange({ ...shapeProps, x: e.target.x(), y: e.target.y(), }); }}\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current; const scaleX = node.scaleX(); const scaleY = node.scaleY();\r\n          node.scaleX(1); node.scaleY(1);\r\n          onChange({ ...shapeProps, x: node.x(), y: node.y(), width: Math.max(5, node.width() * scaleX), height: Math.max(5, node.height() * scaleY), fontSize: Math.max(8, node.fontSize() * scaleX), rotation: node.rotation(), });\r\n        }} />\r\n    ) : null\r\n  );\r\n  return (\r\n    <>\r\n      {currentKonvaNode}\r\n      {isSelected && currentKonvaNode && (\r\n        <Transformer ref={trRef} boundBoxFunc={(oldBox, newBox) => { if (newBox.width < 5 || newBox.height < 5) { return oldBox; } return newBox; }} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction WhiteboardRoom() {\r\n  const { roomName } = useParams();\r\n  const navigate = useNavigate();\r\n  const [drawingObjects, setDrawingObjects] = useState([]);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const stageRef = useRef(null);\r\n  const currentObjectId = useRef(null);\r\n\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [newChatMessage, setNewChatMessage] = useState('');\r\n  const chatMessagesEndRef = useRef(null);\r\n\r\n  const [stageDimensions, setStageDimensions] = useState({\r\n    width: window.innerWidth * 0.7,\r\n    height: window.innerHeight * 0.8\r\n  });\r\n  const canvasContainerRef = useRef(null);\r\n\r\n  const [tool, setTool] = useState('pen');\r\n  const [strokeColor, setStrokeColor] = useState('#000000');\r\n  const [strokeWidth, setStrokeWidth] = useState(5);\r\n  const [fillColor, setFillColor] = useState('transparent');\r\n  const [selectedId, selectShape] = useState(null);\r\n\r\n  // --- NEW: Video Call States ---\r\n  const [videoRoom, setVideoRoom] = useState(null); // Twilio Video Room object\r\n  const [localParticipant, setLocalParticipant] = useState(null); // Local participant object\r\n  const [remoteParticipants, setRemoteParticipants] = useState([]); // Array of remote participants\r\n  const [localVideoTrack, setLocalVideoTrack] = useState(null); // Local video track\r\n  const [localAudioTrack, setLocalAudioTrack] = useState(null); // Local audio track\r\n  const localVideoRef = useRef(null); // Ref for local video element\r\n  const remoteVideosRef = useRef(null); // Ref for container of remote videos\r\n\r\n  const [videoCallEnabled, setVideoCallEnabled] = useState(false); // Toggle video call UI\r\n  const [isVideoConnected, setIsVideoConnected] = useState(false); // Status of video connection\r\n\r\n  // Function to attach a track to a DOM element\r\n  const attachTrack = useCallback((track, container) => {\r\n    if (track && container) {\r\n      container.appendChild(track.attach());\r\n    }\r\n  }, []);\r\n\r\n  // Function to detach a track from a DOM element\r\n  const detachTrack = useCallback((track) => {\r\n    if (track) {\r\n      track.detach().forEach(element => element.remove());\r\n    }\r\n  }, []);\r\n\r\n  // Handle participant connections/disconnections\r\n  const participantConnected = useCallback((participant) => {\r\n    console.log(`Participant \"${participant.identity}\" connected`);\r\n    setRemoteParticipants(prevParticipants => [...prevParticipants, participant]);\r\n\r\n    participant.on('trackSubscribed', track => {\r\n      console.log(`Track \"${track.kind}\" subscribed for participant \"${participant.identity}\"`);\r\n      if (track.kind === 'video') {\r\n        const participantDiv = document.getElementById(`participant-${participant.sid}`);\r\n        if (participantDiv) {\r\n          attachTrack(track, participantDiv);\r\n        } else {\r\n          // If div not yet rendered, create one and attach\r\n          const newDiv = document.createElement('div');\r\n          newDiv.id = `participant-${participant.sid}`;\r\n          newDiv.className = 'remote-video-container';\r\n          remoteVideosRef.current.appendChild(newDiv);\r\n          attachTrack(track, newDiv);\r\n        }\r\n      } else if (track.kind === 'audio') {\r\n        attachTrack(track, document.body); // Audio can be attached to body\r\n      }\r\n    });\r\n\r\n    participant.on('trackUnsubscribed', track => {\r\n      console.log(`Track \"${track.kind}\" unsubscribed from participant \"${participant.identity}\"`);\r\n      detachTrack(track);\r\n    });\r\n  }, [attachTrack, detachTrack]);\r\n\r\n  const participantDisconnected = useCallback((participant) => {\r\n    console.log(`Participant \"${participant.identity}\" disconnected`);\r\n    setRemoteParticipants(prevParticipants => prevParticipants.filter(p => p.sid !== participant.sid));\r\n    // Clean up detached tracks\r\n    participant.tracks.forEach(publication => {\r\n      if (publication.isSubscribed) {\r\n        detachTrack(publication.track);\r\n      }\r\n    });\r\n    // Remove participant's video container if exists\r\n    const participantDiv = document.getElementById(`participant-${participant.sid}`);\r\n    if (participantDiv) {\r\n      participantDiv.remove();\r\n    }\r\n  }, [detachTrack]);\r\n\r\n  // --- Twilio Video Connection Logic ---\r\n  const connectToVideoRoom = useCallback(async (identity) => {\r\n    if (!identity || !roomName) {\r\n      console.error(\"Identity or room name missing for video connection.\");\r\n      alert(\"Cannot join video: Identity or room name missing.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 1. Get Twilio Token from backend\r\n      const { token, error } = await new Promise(resolve => {\r\n        socket.emit('getTwilioToken', { roomName, identity }, resolve);\r\n      });\r\n\r\n      if (error || !token) {\r\n        console.error(\"Failed to get Twilio token:\", error);\r\n        alert(\"Failed to get video token. Check backend console and Twilio credentials.\");\r\n        return;\r\n      }\r\n\r\n      // 2. Connect to Twilio Video Room\r\n      console.log(`Connecting to Twilio video room \"${roomName}\" with token...`);\r\n      const room = await Video.connect(token, {\r\n        name: roomName,\r\n        audio: true, // Request audio track\r\n        video: { width: 640, height: 480 }, // Request video track\r\n        dominantSpeaker: true // Enable dominant speaker detection\r\n      });\r\n\r\n      setVideoRoom(room);\r\n      setLocalParticipant(room.localParticipant);\r\n      setIsVideoConnected(true);\r\n\r\n      console.log(`Successfully connected to Room: ${room.name}`);\r\n\r\n      // Attach local participant's tracks\r\n      room.localParticipant.tracks.forEach(publication => {\r\n        if (publication.track) {\r\n          if (publication.kind === 'video') {\r\n            attachTrack(publication.track, localVideoRef.current);\r\n            setLocalVideoTrack(publication.track);\r\n          } else if (publication.kind === 'audio') {\r\n            setLocalAudioTrack(publication.track);\r\n          }\r\n        }\r\n      });\r\n\r\n      // Attach tracks of existing remote participants\r\n      room.participants.forEach(participantConnected);\r\n\r\n      // Handle new participants joining\r\n      room.on('participantConnected', participantConnected);\r\n      room.on('participantDisconnected', participantDisconnected);\r\n\r\n      // Handle room disconnection\r\n      room.on('disconnected', (room, error) => {\r\n        console.log('Disconnected from Twilio Room:', error);\r\n        // Clean up all tracks\r\n        room.localParticipant.tracks.forEach(publication => detachTrack(publication.track));\r\n        room.participants.forEach(participant => {\r\n          participant.tracks.forEach(publication => detachTrack(publication.track));\r\n        });\r\n        setVideoRoom(null);\r\n        setLocalParticipant(null);\r\n        setRemoteParticipants([]);\r\n        setLocalVideoTrack(null);\r\n        setLocalAudioTrack(null);\r\n        setIsVideoConnected(false);\r\n        alert(\"You have been disconnected from the video call.\");\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Failed to connect to Twilio Video Room:', error);\r\n      alert('Failed to connect to video call. Please ensure camera/mic permissions.');\r\n      setIsVideoConnected(false);\r\n    }\r\n  }, [roomName, attachTrack, detachTrack, participantConnected, participantDisconnected]);\r\n\r\n  // Function to disconnect from video room\r\n  const disconnectFromVideoRoom = useCallback(() => {\r\n    if (videoRoom) {\r\n      videoRoom.disconnect();\r\n      console.log('Disconnected from Twilio video room.');\r\n    }\r\n  }, [videoRoom]);\r\n\r\n  // Main useEffect for Socket.IO and Room state management\r\n  useEffect(() => {\r\n    if (!roomName) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    socket.emit('joinRoom', roomName);\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to backend Socket.IO:', socket.id);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Disconnected from backend Socket.IO');\r\n      alert('Disconnected from server. Please refresh.');\r\n      navigate('/');\r\n    });\r\n\r\n    socket.on('whiteboardState', (data) => {\r\n      console.log('Received initial room state:', data);\r\n      setDrawingObjects(data.lines);\r\n      setChatMessages(data.messages);\r\n    });\r\n\r\n    socket.on('drawingStarted', (newObject) => {\r\n        setDrawingObjects((prevObjects) => [...prevObjects, newObject]);\r\n    });\r\n\r\n    socket.on('drawing', (data) => {\r\n        const { objectId, newPoints } = data;\r\n        setDrawingObjects((prevObjects) => {\r\n            return prevObjects.map((obj) => {\r\n                if (obj.id === objectId && obj.type === 'line') {\r\n                    return { ...obj, points: obj.points.concat(newPoints) };\r\n                }\r\n                return obj;\r\n            });\r\n        });\r\n    });\r\n\r\n    socket.on('drawingFinished', (data) => {\r\n        const { objectId, finalObjectState } = data;\r\n        setDrawingObjects((prevObjects) => {\r\n            return prevObjects.map((obj) => {\r\n                if (obj.id === objectId) {\r\n                    return finalObjectState;\r\n                }\r\n                return obj;\r\n            });\r\n        });\r\n    });\r\n\r\n    socket.on('objectUpdated', (data) => {\r\n        const { objectId, newAttributes } = data;\r\n        setDrawingObjects((prevObjects) => {\r\n            return prevObjects.map((obj) => {\r\n                if (obj.id === objectId) {\r\n                    return { ...obj, ...newAttributes };\r\n                }\r\n                return obj;\r\n            });\r\n        });\r\n    });\r\n\r\n    socket.on('whiteboardCleared', () => {\r\n        setDrawingObjects([]);\r\n        selectShape(null);\r\n        console.log('Whiteboard cleared by another user.');\r\n    });\r\n\r\n    socket.on('chatMessage', (message) => {\r\n        setChatMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    socket.on('userJoined', (username) => {\r\n        setChatMessages((prevMessages) => [...prevMessages, {\r\n            username: 'System',\r\n            message: `${username} has joined the room.`,\r\n            timestamp: new Date()\r\n        }]);\r\n    });\r\n\r\n    socket.on('roomDestroyed', (destroyedRoomName) => {\r\n        if (destroyedRoomName === roomName) {\r\n            alert(`Room \"${destroyedRoomName}\" has been closed or automatically destroyed.`);\r\n            navigate('/');\r\n        }\r\n    });\r\n\r\n    const handleResize = () => {\r\n      if (canvasContainerRef.current) {\r\n        const { clientWidth, clientHeight } = canvasContainerRef.current;\r\n        setStageDimensions({ width: clientWidth, height: clientHeight });\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      socket.off('connect');\r\n      socket.off('disconnect');\r\n      socket.off('whiteboardState');\r\n      socket.off('drawingStarted');\r\n      socket.off('drawing');\r\n      socket.off('drawingFinished');\r\n      socket.off('objectUpdated');\r\n      socket.off('whiteboardCleared');\r\n      socket.off('chatMessage');\r\n      socket.off('userJoined');\r\n      socket.off('roomDestroyed');\r\n\r\n      // NEW: Clean up Twilio connection on component unmount/room change\r\n      disconnectFromVideoRoom();\r\n    };\r\n  }, [roomName, navigate, disconnectFromVideoRoom]);\r\n\r\n  // Effect to scroll chat to bottom\r\n  useEffect(() => {\r\n    chatMessagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [chatMessages]);\r\n\r\n  const handleObjectChange = useCallback((updatedObject) => {\r\n    setDrawingObjects((prevObjects) => {\r\n      return prevObjects.map((obj) => {\r\n        if (obj.id === updatedObject.id) {\r\n          return updatedObject;\r\n        }\r\n        return obj;\r\n      });\r\n    });\r\n    socket.emit('updateObject', { roomName, objectId: updatedObject.id, newAttributes: updatedObject });\r\n  }, [roomName]); // Add roomName to dependency array\r\n\r\n  const handleMouseDown = (e) => {\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (tool === 'select' && clickedOnEmpty) {\r\n      selectShape(null);\r\n      return;\r\n    }\r\n    if (e.evt.type === 'touchstart') { e.evt.preventDefault(); }\r\n    setIsDrawing(true);\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    const newObjectId = `${socket.id}-${Date.now()}`;\r\n    currentObjectId.current = newObjectId;\r\n    selectShape(null);\r\n\r\n    let newObject;\r\n    switch (tool) {\r\n      case 'pen':\r\n      case 'eraser': newObject = { id: newObjectId, type: 'line', points: [pos.x, pos.y], stroke: tool === 'eraser' ? '#FFFFFF' : strokeColor, strokeWidth: tool === 'eraser' ? strokeWidth + 10 : strokeWidth, tool: tool }; break;\r\n      case 'rect': newObject = { id: newObjectId, type: 'rect', x: pos.x, y: pos.y, width: 0, height: 0, stroke: strokeColor, strokeWidth: strokeWidth, fill: fillColor, }; break;\r\n      case 'circle': newObject = { id: newObjectId, type: 'circle', x: pos.x, y: pos.y, radius: 0, stroke: strokeColor, strokeWidth: strokeWidth, fill: fillColor, }; break;\r\n      case 'text':\r\n        newObject = { id: newObjectId, type: 'text', x: pos.x, y: pos.y, text: 'Double click to edit', fontSize: 20, fontFamily: 'Arial', stroke: strokeColor, fill: strokeColor, width: 200, height: 30, rotation: 0 };\r\n        setIsDrawing(false); socket.emit('startDrawing', { roomName, object: newObject }); setDrawingObjects((prevObjects) => [...prevObjects, newObject]); selectShape(newObjectId); return;\r\n      case 'select': setIsDrawing(false); return;\r\n      default: return;\r\n    }\r\n    setDrawingObjects((prevObjects) => [...prevObjects, newObject]);\r\n    socket.emit('startDrawing', { roomName, object: newObject });\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing) { return; }\r\n    if (e.evt.type === 'touchmove') { e.evt.preventDefault(); }\r\n    const stage = e.target.getStage(); const point = stage.getPointerPosition();\r\n    let currentObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\r\n\r\n    if (currentObject) {\r\n      const newObjects = [...drawingObjects]; const index = newObjects.findIndex(obj => obj.id === currentObject.id);\r\n      switch (currentObject.type) {\r\n        case 'line': currentObject.points = currentObject.points.concat([point.x, point.y]); newObjects[index] = currentObject; setDrawingObjects(newObjects); socket.emit('drawing', { roomName, objectId: currentObjectId.current, newPoints: [point.x, point.y] }); break;\r\n        case 'rect':\r\n          const newX_rect = Math.min(currentObject.x, point.x); const newY_rect = Math.min(currentObject.y, point.y);\r\n          const newWidth_rect = Math.abs(point.x - currentObject.x); const newHeight_rect = Math.abs(point.y - currentObject.y);\r\n          currentObject = { ...currentObject, x: newX_rect, y: newY_rect, width: newWidth_rect, height: newHeight_rect }; newObjects[index] = currentObject; setDrawingObjects(newObjects); socket.emit('updateObject', { roomName, objectId: currentObjectId.current, newAttributes: { x: newX_rect, y: newY_rect, width: newWidth_rect, height: newHeight_rect } }); break;\r\n        case 'circle':\r\n          const newRadius_circle = Math.sqrt(Math.pow(point.x - currentObject.x, 2) + Math.pow(point.y - currentObject.y, 2));\r\n          currentObject = { ...currentObject, radius: newRadius_circle }; newObjects[index] = currentObject; setDrawingObjects(newObjects); socket.emit('updateObject', { roomName, objectId: currentObjectId.current, newAttributes: { radius: newRadius_circle } }); break;\r\n        default: break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDrawing(false);\r\n    if (tool !== 'select' && tool !== 'text') {\r\n      const finalObject = drawingObjects.find(obj => obj.id === currentObjectId.current);\r\n      if (finalObject) { socket.emit('endDrawing', { roomName, objectId: currentObjectId.current, finalObjectState: finalObject }); }\r\n    }\r\n    currentObjectId.current = null;\r\n  };\r\n\r\n  const handleSendChatMessage = () => {\r\n    if (newChatMessage.trim()) { socket.emit('chatMessage', { roomName, message: newChatMessage.trim() }); setNewChatMessage(''); }\r\n  };\r\n  const handleChatKeyPress = (e) => { if (e.key === 'Enter') { handleSendChatMessage(); } };\r\n  const handleClearWhiteboard = () => { if (window.confirm('Are you sure you want to clear the entire whiteboard? This cannot be undone!')) { socket.emit('clearWhiteboard', roomName); } };\r\n  const handleCloseRoom = () => { if (window.confirm('Are you sure you want to close this room? All users will be disconnected and data will be deleted.')) { socket.emit('closeRoom', roomName); navigate('/'); alert('Room closure initiated.'); } };\r\n\r\n  const getCursorStyle = () => {\r\n    switch (tool) {\r\n      case 'pen': case 'eraser': case 'rect': case 'circle': return 'crosshair';\r\n      case 'text': return 'text'; case 'select': return selectedId ? 'move' : 'default';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  // --- NEW: Video Call UI Toggle and Join/Leave handlers ---\r\n  const toggleVideoCallUI = () => {\r\n    setVideoCallEnabled(prev => !prev);\r\n    // If enabling video UI and not already connected, try to connect\r\n    if (!videoCallEnabled && !isVideoConnected) {\r\n        connectToVideoRoom(socket.id); // Using socket.id as identity for now\r\n    } else if (videoCallEnabled && isVideoConnected) {\r\n        disconnectFromVideoRoom(); // If disabling video UI and connected, disconnect\r\n    }\r\n  };\r\n\r\n  const handleJoinLeaveVideoCall = () => {\r\n    if (isVideoConnected) {\r\n      disconnectFromVideoRoom();\r\n    } else {\r\n      connectToVideoRoom(socket.id); // Use socket.id as identity\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"whiteboard-page-container\">\r\n      <div className=\"whiteboard-main-content\">\r\n        <div className=\"header\">\r\n          <h1>Whiteboard Room: <span className=\"room-name\">{roomName}</span></h1>\r\n          <button onClick={() => navigate('/')} className=\"leave-button\">\r\n            Leave Room\r\n          </button>\r\n        </div>\r\n\r\n        {/* Professional Tool Palette */}\r\n        <div className=\"tool-palette\">\r\n          <button className={`tool-button ${tool === 'select' ? 'active' : ''}`} onClick={() => { setTool('select'); selectShape(null); }} title=\"Select & Move\">👆 Select</button>\r\n          <button className={`tool-button ${tool === 'pen' ? 'active' : ''}`} onClick={() => setTool('pen')} title=\"Pen\">✏️ Pen</button>\r\n          <button className={`tool-button ${tool === 'eraser' ? 'active' : ''}`} onClick={() => setTool('eraser')} title=\"Eraser\">🧽 Eraser</button>\r\n          <div className=\"tool-separator\"></div>\r\n          <button className={`tool-button ${tool === 'rect' ? 'active' : ''}`} onClick={() => setTool('rect')} title=\"Rectangle\">◻️ Rectangle</button>\r\n          <button className={`tool-button ${tool === 'circle' ? 'active' : ''}`} onClick={() => setTool('circle')} title=\"Circle\">⚫ Circle</button>\r\n          <button className={`tool-button ${tool === 'text' ? 'active' : ''}`} onClick={() => setTool('text')} title=\"Text\">🅰️ Text</button>\r\n\r\n          <div className=\"tool-separator\"></div>\r\n\r\n          <input type=\"color\" className=\"color-picker\" value={strokeColor} onChange={(e) => { setStrokeColor(e.target.value); if (tool !== 'eraser') setTool('pen'); }} title=\"Stroke Color\" />\r\n          <input type=\"color\" className=\"color-picker\" value={fillColor} onChange={(e) => { setFillColor(e.target.value); if (tool === 'pen' || tool === 'eraser') { setTool('rect'); } }} title=\"Fill Color\" />\r\n\r\n          <input type=\"range\" min=\"1\" max=\"20\" value={strokeWidth} onChange={(e) => setStrokeWidth(parseInt(e.target.value, 10))} className=\"stroke-width-slider\" title={`Stroke Width: ${strokeWidth}px`} />\r\n          <span className=\"stroke-width-display\">{strokeWidth}px</span>\r\n\r\n          <div className=\"tool-separator\"></div>\r\n\r\n          <button className=\"tool-button\" onClick={handleClearWhiteboard} title=\"Clear All\">🗑️ Clear All</button>\r\n          <button className=\"tool-button danger-button\" onClick={handleCloseRoom} title=\"Close & Delete Room\">❌ Close Room</button>\r\n\r\n          {/* NEW: Video Call Button */}\r\n          <button\r\n            className={`tool-button ${videoCallEnabled ? 'active success-button' : ''}`}\r\n            onClick={toggleVideoCallUI}\r\n            title={videoCallEnabled ? 'Hide Video Call' : 'Show Video Call'}\r\n          >\r\n            {videoCallEnabled ? '📹 Hide Video' : '📹 Show Video'}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"whiteboard-canvas-container\" ref={canvasContainerRef}>\r\n          <Stage\r\n            width={stageDimensions.width} height={stageDimensions.height}\r\n            onMouseDown={handleMouseDown} onMousemove={handleMouseMove} onMouseup={handleMouseUp}\r\n            onTouchStart={handleMouseDown} onTouchMove={handleMouseMove} onTouchEnd={handleMouseUp}\r\n            ref={stageRef}\r\n            style={{ cursor: getCursorStyle(), backgroundColor: 'white', touchAction: 'none' }}\r\n          >\r\n            <Layer>\r\n              {drawingObjects.map((obj) => {\r\n                if (obj.type === 'line') {\r\n                  return (<Line key={obj.id} points={obj.points} stroke={obj.stroke} strokeWidth={obj.strokeWidth} tension={0.5} lineCap=\"round\" lineJoin=\"round\" globalCompositeOperation={obj.tool === 'eraser' ? 'destination-out' : 'source-over'} />);\r\n                } else {\r\n                  return (\r\n                    <ColoredRect\r\n                      key={obj.id} shapeProps={obj} isSelected={obj.id === selectedId}\r\n                      onSelect={() => { selectShape(obj.id); setTool('select'); }}\r\n                      onChange={handleObjectChange} activeTool={tool} />\r\n                  );\r\n                }\r\n              })}\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n        <p className=\"hint-text margin-top-md\">Use the tools above to draw and collaborate!</p>\r\n      </div>\r\n\r\n      {/* Main Chat Sidebar - remains mostly unchanged */}\r\n      <div className=\"chat-sidebar\">\r\n        <h2>Room Chat</h2>\r\n        {/* NEW: Video Call Section (conditionally rendered) */}\r\n        {videoCallEnabled && (\r\n          <div className=\"video-call-section\">\r\n            <div className=\"video-controls\">\r\n              <button\r\n                className={`tool-button ${isVideoConnected ? 'danger-button' : 'success-button'}`}\r\n                onClick={handleJoinLeaveVideoCall}\r\n              >\r\n                {isVideoConnected ? '📞 Disconnect' : '📞 Connect Video'}\r\n              </button>\r\n              {/* Add mute/unmute buttons here later */}\r\n            </div>\r\n            <div className=\"local-video-container\" ref={localVideoRef}>\r\n                {/* Local participant's video will be attached here */}\r\n                {!localVideoTrack && <p>Waiting for local video...</p>}\r\n            </div>\r\n            <div className=\"remote-videos-grid\" ref={remoteVideosRef}>\r\n                {/* Remote participants' videos will be attached here */}\r\n                {remoteParticipants.length === 0 && isVideoConnected && <p>Waiting for others...</p>}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"chat-messages\">\r\n          {chatMessages.map((msg, index) => (\r\n            <div key={index} className=\"chat-message\">\r\n              <span className=\"chat-username\">{msg.username}:</span> {msg.message}\r\n              <span className=\"chat-timestamp\">{new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\r\n            </div>\r\n          ))}\r\n          <div ref={chatMessagesEndRef} />\r\n        </div>\r\n        <div className=\"chat-input-group\">\r\n          <input type=\"text\" placeholder=\"Type your message...\" value={newChatMessage} onChange={(e) => setNewChatMessage(e.target.value)} onKeyPress={handleChatKeyPress} className=\"chat-input\" />\r\n          <button onClick={handleSendChatMessage} className=\"send-button\">Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WhiteboardRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}